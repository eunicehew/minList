{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/navBar/NavViews.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddDialog } from \"../common/Dialog\";\nimport { EditableListItem } from \"../common/List/ListItems\";\nexport const LoggedInNav = ({\n  pages,\n  handleLogout,\n  handleRedirect,\n  handleHome,\n  addPage,\n  editPage,\n  deletePage,\n  username,\n  toggleMenu,\n  open,\n  pathname\n}) => {\n  const drawerWidth = 240;\n  const useStyles = makeStyles(theme => ({\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    hide: {\n      display: \"none\"\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\"\n    },\n    rightNav: {\n      position: \"absolute\",\n      right: \"50px\"\n    }\n  }));\n  const [editClicked, setEditClicked] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    variant: \"dense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggleMenu,\n    className: clsx(classes.menuButton, open && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HomeIcon, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    classname: classes.rightNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: darkMode,\n      onChange: setDarkMode,\n      name: \"themeMode\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }),\n    label: \"Dark Mode\" ? darkMode : \"Light Mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Logout\")))), /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, pages.length > 0 && pages.map(page => {\n    return /*#__PURE__*/React.createElement(EditableListItem, {\n      key: page._id,\n      editMode: editClicked,\n      item: page,\n      editFunction: inputText => editPage({\n        id: page._id,\n        name: inputText\n      }),\n      deleteFunction: () => deletePage({\n        username,\n        pageId: page._id\n      }),\n      deleteIcon: /*#__PURE__*/React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"delete\",\n        onClick: () => deletePage({\n          username,\n          pageId: page._id\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }\n      })),\n      handleRedirect: handleRedirect,\n      pathname: pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    });\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"edit\",\n    onClick: () => setEditClicked(!editClicked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(AddDialog, {\n    header: \"Add Page\",\n    fields: {\n      \"Page Name\": \"name\"\n    },\n    addFunction: addPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  })));\n};\nexport const LoggedOutNav = ({\n  handleLogin\n}) => {\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    variant: \"dense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, \"Admin Login\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\nLoggedInNav.propTypes = {\n  username: PropTypes.string,\n  pages: PropTypes.arrayOf(PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    sheets: PropTypes.array.isRequired,\n    items: PropTypes.array.isRequired\n  })).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleRedirect: PropTypes.func.isRequired,\n  handleHome: PropTypes.func.isRequired,\n  addPage: PropTypes.func.isRequired,\n  deletePage: PropTypes.func.isRequired,\n  toggleMenu: PropTypes.func.isRequired\n};\nLoggedOutNav.propTypes = {\n  handleLogin: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/navBar/NavViews.js"],"names":["React","useState","PropTypes","clsx","AppBar","Toolbar","IconButton","Button","HomeIcon","MenuIcon","ChevronLeftIcon","Drawer","List","Divider","FormGroup","FormControlLabel","Switch","CloseIcon","EditIcon","makeStyles","AddDialog","EditableListItem","LoggedInNav","pages","handleLogout","handleRedirect","handleHome","addPage","editPage","deletePage","username","toggleMenu","open","pathname","drawerWidth","useStyles","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","display","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","rightNav","position","right","editClicked","setEditClicked","darkMode","setDarkMode","classes","paper","length","map","page","_id","inputText","id","name","pageId","LoggedOutNav","handleLogin","propTypes","string","arrayOf","shape","isRequired","sheets","array","items","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddDialog } from \"../common/Dialog\";\nimport { EditableListItem } from \"../common/List/ListItems\";\n\nexport const LoggedInNav = ({\n  pages,\n  handleLogout,\n  handleRedirect,\n  handleHome,\n  addPage,\n  editPage,\n  deletePage,\n  username,\n  toggleMenu,\n  open,\n  pathname,\n}) => {\n  const drawerWidth = 240;\n\n  const useStyles = makeStyles((theme) => ({\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },    rightNav:{\n      position: \"absolute\", right: \"50px\"\n    },\n  }));\n\n  const [editClicked, setEditClicked] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar variant=\"dense\">\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleMenu}\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <IconButton onClick={handleHome}>\n            <HomeIcon color=\"secondary\" />\n          </IconButton>\n          <FormGroup row classname={classes.rightNav}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={darkMode}\n                  onChange={setDarkMode}\n                  name=\"themeMode\"\n                  color=\"primary\"\n                />\n              }\n              label={\"Dark Mode\" ? darkMode : \"Light Mode\"}\n            />\n            <Button\n            variant=\"contained\"\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>\n          </FormGroup>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={toggleMenu}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {pages.length > 0 &&\n            pages.map((page) => {\n              return (\n                <EditableListItem\n                  key={page._id}\n                  editMode={editClicked}\n                  item={page}\n                  editFunction={(inputText) =>\n                    editPage({ id: page._id, name: inputText })\n                  }\n                  deleteFunction={() =>\n                    deletePage({ username, pageId: page._id })\n                  }\n                  deleteIcon={\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={() => deletePage({ username, pageId: page._id })}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  }\n                  handleRedirect={handleRedirect}\n                  pathname={pathname}\n                />\n              );\n            })}\n        </List>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"edit\"\n          onClick={() => setEditClicked(!editClicked)}\n        >\n          <EditIcon />\n        </IconButton>\n        <AddDialog\n          header=\"Add Page\"\n          fields={{ \"Page Name\": \"name\" }}\n          addFunction={addPage}\n        />\n      </Drawer>\n    </div>\n  );\n};\n\nexport const LoggedOutNav = ({ handleLogin }) => {\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar variant=\"dense\">\n        <Button variant=\"contained\" onClick={handleLogin}>\n          Admin Login\n        </Button>\n        <Button color=\"inherit\">Login</Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nLoggedInNav.propTypes = {\n  username: PropTypes.string,\n  pages: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      sheets: PropTypes.array.isRequired,\n      items: PropTypes.array.isRequired,\n    })\n  ).isRequired,\n  open: PropTypes.bool.isRequired,\n\n  handleRedirect: PropTypes.func.isRequired,\n  handleHome: PropTypes.func.isRequired,\n  addPage: PropTypes.func.isRequired,\n  deletePage: PropTypes.func.isRequired,\n  toggleMenu: PropTypes.func.isRequired,\n};\n\nLoggedOutNav.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}