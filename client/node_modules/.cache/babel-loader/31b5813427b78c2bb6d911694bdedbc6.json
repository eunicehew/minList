{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/navBar/NavBar.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { LoggedInNav, LoggedOutNav } from \"./NavViews\";\nimport { login, logout } from \"../../redux/Login\";\nimport { addPage, deletePage } from \"../../redux/Page\";\nimport { toggleMenu } from \"../../redux/UI\";\n\nclass NavBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogin = e => {\n      e.preventDefault();\n      this.props.login(\"tester\", \"pass\", this.props.history);\n    };\n\n    this.handleLogout = () => {\n      this.props.logout(this.props.history);\n    };\n\n    this.handleRedirect = page => {\n      this.props.history.push(`/${page}`);\n    };\n\n    this.handleHome = () => {\n      this.props.history.push(`/`);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.loggedIn ? /*#__PURE__*/React.createElement(LoggedInNav, {\n      pages: this.props.pages,\n      handleLogout: this.handleLogout,\n      handleRedirect: this.handleRedirect,\n      handleHome: this.handleHome,\n      addPage: this.props.addPage,\n      deletePage: this.props.deletePage,\n      username: this.props.user,\n      toggleMenu: this.props.toggleMenu,\n      open: this.props.menuOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(LoggedOutNav, {\n      handleLogin: this.handleLogin,\n      handleRedirect: this.handleRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nNavBar.propTypes = {\n  history: PropTypes.object.isRequired,\n  loggedIn: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n  pages: PropTypes.arrayOf(PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    sheets: PropTypes.array.isRequired,\n    items: PropTypes.array.isRequired\n  })).isRequired,\n  menuOpen: PropTypes.bool.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n  addPage: PropTypes.func.isRequired,\n  deletePage: PropTypes.func.isRequired,\n  toggleMenu: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.pageState.pages,\n    loggingIn: state.loginState.loggingIn,\n    loggedIn: state.loginState.loggedIn,\n    logout: state.loginState.logout,\n    user: state.loginState.user,\n    error: state.pageState.error,\n    menuOpen: state.uiState.menuOpen\n  };\n};\n\nconst mapDispatchToProps = {\n  login,\n  logout,\n  addPage,\n  deletePage,\n  toggleMenu\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavBar));","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/navBar/NavBar.js"],"names":["React","PropTypes","connect","withRouter","LoggedInNav","LoggedOutNav","login","logout","addPage","deletePage","toggleMenu","NavBar","Component","handleLogin","e","preventDefault","props","history","handleLogout","handleRedirect","page","push","handleHome","render","loggedIn","pages","user","menuOpen","propTypes","object","isRequired","bool","arrayOf","shape","_id","string","name","sheets","array","items","func","mapStateToProps","state","pageState","loggingIn","loginState","error","uiState","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { LoggedInNav, LoggedOutNav } from \"./NavViews\";\nimport { login, logout } from \"../../redux/Login\";\nimport { addPage, deletePage } from \"../../redux/Page\";\nimport { toggleMenu } from \"../../redux/UI\";\n\nclass NavBar extends React.Component {\n  handleLogin = (e) => {\n    e.preventDefault();\n    this.props.login(\"tester\", \"pass\", this.props.history);\n  };\n  handleLogout = () => {\n    this.props.logout(this.props.history);\n  };\n  handleRedirect = (page) => {\n    this.props.history.push(`/${page}`);\n  };\n  handleHome = () => {\n    this.props.history.push(`/`);\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.loggedIn ? (\n          <LoggedInNav\n            pages={this.props.pages}\n            handleLogout={this.handleLogout}\n            handleRedirect={this.handleRedirect}\n            handleHome={this.handleHome}\n            addPage={this.props.addPage}\n            deletePage={this.props.deletePage}\n            username={this.props.user}\n            toggleMenu={this.props.toggleMenu}\n            open={this.props.menuOpen}\n          />\n        ) : (\n          <LoggedOutNav\n            handleLogin={this.handleLogin}\n            handleRedirect={this.handleRedirect}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nNavBar.propTypes = {\n  history: PropTypes.object.isRequired,\n  loggedIn: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n  pages: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      sheets: PropTypes.array.isRequired,\n      items: PropTypes.array.isRequired,\n    })\n  ).isRequired,\n  menuOpen: PropTypes.bool.isRequired,\n\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n  addPage: PropTypes.func.isRequired,\n  deletePage: PropTypes.func.isRequired,\n  toggleMenu: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pages: state.pageState.pages,\n    loggingIn: state.loginState.loggingIn,\n    loggedIn: state.loginState.loggedIn,\n    logout: state.loginState.logout,\n    user: state.loginState.user,\n    error: state.pageState.error,\n    menuOpen: state.uiState.menuOpen,\n  };\n};\n\nconst mapDispatchToProps = {\n  login,\n  logout,\n  addPage,\n  deletePage,\n  toggleMenu,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavBar));\n"]},"metadata":{},"sourceType":"module"}