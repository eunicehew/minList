{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/common/List/ListItems.js\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Input from \"@material-ui/core/Input\";\n\nconst onMouseOver = event => {\n  event.currentTarget.style.cursor = \"grab\";\n};\n\nconst onDragStart = (event, item) => {\n  event.currentTarget.style.border = \"dashed\";\n  event.dataTransfer.setData(\"item\", item);\n  event.dataTransfer.effectAllowed = \"move\"; // event.currentTarget.style.cursor = \"grabbing\";\n};\n\nconst onDragEnd = event => {\n  event.currentTarget.style.border = \"\";\n  event.currentTarget.style.background = \"\"; // event.currentTarget.style.cursor = \"default\";\n};\n\nconst DraggableListItem = ({\n  item,\n  listId,\n  deleteItem\n}) => {\n  return /*#__PURE__*/React.createElement(ListItem, {\n    draggable: true,\n    onMouseOver: event => onMouseOver(event),\n    onDragStart: event => onDragStart(event, item._id),\n    onDragEnd: event => onDragEnd(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => deleteItem({\n      listId,\n      itemId: item._id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst EditableListItem = ({\n  draggableItem,\n  item,\n  editFunction,\n  deleteFunction,\n  deleteIcon,\n  customOnNotEdit,\n  customOnNotEditClick,\n  pathname,\n  handleRedirect,\n  editMode,\n  onDragOver,\n  onDrop,\n  onDragLeave\n}) => {\n  function useKeypress(targetKey) {\n    const [keyPressed, setKeyPressed] = useState(false);\n\n    function downHandler({\n      key\n    }) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    const upHandler = ({\n      key\n    }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", downHandler);\n      window.addEventListener(\"keyup\", upHandler);\n      return () => {\n        window.removeEventListener(\"keydown\", downHandler);\n        window.removeEventListener(\"keyup\", upHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n\n    return keyPressed;\n  }\n\n  function useOnClickOutside(ref, handler) {\n    useEffect(() => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    }, [ref, handler]);\n  }\n\n  const [editClicked, setEditClicked] = useState(false);\n  const [inputText, setInputText] = useState(item.name);\n  const wrapperRef = useRef(null);\n  const inputRef = useRef(null);\n  const enter = useKeypress(\"Enter\");\n  const esc = useKeypress(\"Escape\");\n  useOnClickOutside(wrapperRef, () => {\n    if ((editClicked || editMode) && inputText !== item.name) {\n      if (inputText === \"\") {\n        deleteFunction();\n      } else {\n        editFunction(inputText);\n      }\n\n      if (editMode && pathname === `/${item.name}`) {\n        handleRedirect(inputText);\n      }\n    }\n\n    setEditClicked(false);\n  });\n  const onEnter = useCallback(() => {\n    if (enter) {\n      if (inputText !== item.name) {\n        if (inputText === \"\") {\n          deleteFunction();\n        } else {\n          editFunction(inputText);\n        }\n\n        if (editMode && pathname === `/${item.name}`) {\n          handleRedirect(inputText);\n        }\n      }\n\n      setEditClicked(false);\n    }\n  }, [enter, inputText]);\n  const onEsc = useCallback(() => {\n    if (esc) {\n      setInputText(item.name);\n      setEditClicked(false);\n    }\n  }, [esc, item.name]);\n  useEffect(() => {\n    onEnter();\n    onEsc();\n  }, [onEnter, onEsc]);\n  return editClicked || editMode ? /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: item._id,\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(Input, {\n      value: inputText,\n      ref: inputRef,\n      autoFocus: true,\n      onFocus: e => e.currentTarget.select(),\n      onChange: e => setInputText(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), deleteIcon || null) : customOnNotEdit ? /*#__PURE__*/React.createElement(React.Fragment, null, customOnNotEdit) : customOnNotEditClick ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setEditClicked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, customOnNotEditClick) : draggableItem ? /*#__PURE__*/React.createElement(ListItem, {\n    draggable: true,\n    onMouseOver: event => onMouseOver(event),\n    onDragStart: event => onDragStart(event, item._id),\n    onDragEnd: event => onDragEnd(event),\n    onDragOver: onDragOver,\n    onDrop: onDrop,\n    onDragLeave: onDragLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    onClick: () => setEditClicked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })) : pathname ? /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: () => handleRedirect(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: () => setEditClicked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }));\n};\n\nDraggableListItem.propTypes = {\n  listId: PropTypes.string.isRequired,\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    subItems: PropTypes.array.isRequired\n  }).isRequired,\n  deleteItem: PropTypes.func.isRequired\n};\nEditableListItem.propTypes = {\n  draggableItem: PropTypes.bool,\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    subItems: PropTypes.array\n  }).isRequired,\n  deleteIcon: PropTypes.node,\n  customOnNotEdit: PropTypes.node,\n  customOnNotEditClick: PropTypes.node,\n  pathname: PropTypes.string,\n  editMode: PropTypes.bool,\n  editFunction: PropTypes.func.isRequired,\n  deleteFunction: PropTypes.func.isRequired,\n  handleRedirect: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDrop: PropTypes.func,\n  onDragLeave: PropTypes.func\n};\nexport { DraggableListItem, EditableListItem }; // const ListItemButtons = ({ item, editItem, deleteItem }) => {\n//   const actionTypes = { edit, del };\n//   // const add = (\n//   //   <IconButton edge=\"end\" aria-label=\"add\" onClick={() => addItem(item)}>\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   // const update = (\n//   //   <IconButton\n//   //     edge=\"end\"\n//   //     aria-label=\"update\"\n//   //     onClick={() => updateItemProgress(item)}\n//   //   >\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   const edit = (\n//     <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => editItem(item)}>\n//       <NavigateNextSharpIcon />\n//     </IconButton>\n//   );\n//   const del = (\n//     <IconButton\n//       edge=\"end\"\n//       aria-label=\"delete\"\n//       onClick={() => deleteItem(item._id)}\n//     >\n//       <DeleteIcon />\n//     </IconButton>\n//   );\n//   const ActionMenu = () => {\n//     const [anchorEl, setAnchorEl] = React.useState(null);\n//     const open = Boolean(anchorEl);\n//     const handleClick = (event) => {\n//       setAnchorEl(event.currentTarget);\n//     };\n//     const handleClose = () => {\n//       setAnchorEl(null);\n//     };\n//     return (\n//       <div>\n//         <Button\n//           aria-controls=\"simple-menu\"\n//           aria-haspopup=\"true\"\n//           onClick={handleClick}\n//         >\n//           <MoreVertIcon />\n//         </Button>\n//         <Menu\n//           id=\"simple-menu\"\n//           anchorEl={anchorEl}\n//           keepMounted\n//           open={open}\n//           onClose={handleClose}\n//         >\n//           {actionTypes.map((action) => {\n//             return <MenuItem onClick={handleClose}>{action}</MenuItem> || null;\n//           })}\n//         </Menu>\n//       </div>\n//     );\n//   };\n//   // const ActionInline = (\n//   //   <ListItemSecondaryAction>\n//   //     {actions.map((action) => {\n//   //       return actionTypes[action] || null;\n//   //     })}\n//   //   </ListItemSecondaryAction>\n//   // );\n//   // const ActionDisplay = actions.length > 2 ? <ActionMenu /> : <ActionInline />;\n//   return (\n//     <div>\n//       <Divider orientation=\"vertical\" flexItem />\n//       <ActionMenu />\n//     </div>\n//   );\n// };","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/common/List/ListItems.js"],"names":["React","useState","useEffect","useRef","useCallback","PropTypes","DeleteIcon","IconButton","ListItem","ListItemText","Divider","Input","onMouseOver","event","currentTarget","style","cursor","onDragStart","item","border","dataTransfer","setData","effectAllowed","onDragEnd","background","DraggableListItem","listId","deleteItem","_id","name","itemId","EditableListItem","draggableItem","editFunction","deleteFunction","deleteIcon","customOnNotEdit","customOnNotEditClick","pathname","handleRedirect","editMode","onDragOver","onDrop","onDragLeave","useKeypress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","useOnClickOutside","ref","handler","listener","current","contains","target","document","editClicked","setEditClicked","inputText","setInputText","wrapperRef","inputRef","enter","esc","onEnter","onEsc","e","select","value","propTypes","string","isRequired","shape","subItems","array","func","bool","node"],"mappings":"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,QAAQ,EAAEnC,SAAS,CAAC6E,IAXO;AAa3BjD,EAAAA,YAAY,EAAE5B,SAAS,CAAC4E,IAAV,CAAeJ,UAbF;AAc3B3C,EAAAA,cAAc,EAAE7B,SAAS,CAAC4E,IAAV,CAAeJ,UAdJ;AAe3BtC,EAAAA,cAAc,EAAElC,SAAS,CAAC4E,IAfC;AAgB3BxC,EAAAA,UAAU,EAAEpC,SAAS,CAAC4E,IAhBK;AAiB3BvC,EAAAA,MAAM,EAAErC,SAAS,CAAC4E,IAjBS;AAkB3BtC,EAAAA,WAAW,EAAEtC,SAAS,CAAC4E;AAlBI,CAA7B;AAqBA,SAASxD,iBAAT,EAA4BM,gBAA5B,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Input from \"@material-ui/core/Input\";\n\nconst onMouseOver = (event) => {\n  event.currentTarget.style.cursor = \"grab\";\n};\n\nconst onDragStart = (event, item) => {\n  event.currentTarget.style.border = \"dashed\";\n  event.dataTransfer.setData(\"item\", item);\n  event.dataTransfer.effectAllowed = \"move\";\n  // event.currentTarget.style.cursor = \"grabbing\";\n};\n\nconst onDragEnd = (event) => {\n  event.currentTarget.style.border = \"\";\n  event.currentTarget.style.background = \"\";\n  // event.currentTarget.style.cursor = \"default\";\n};\n\nconst DraggableListItem = ({ item, listId, deleteItem }) => {\n  return (\n    <ListItem\n      draggable\n      onMouseOver={(event) => onMouseOver(event)}\n      onDragStart={(event) => onDragStart(event, item._id)}\n      onDragEnd={(event) => onDragEnd(event)}\n    >\n      <ListItemText primary={item.name} />\n      <Divider orientation=\"vertical\" flexItem />\n      <IconButton\n        edge=\"end\"\n        aria-label=\"delete\"\n        onClick={() => deleteItem({ listId, itemId: item._id })}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n\nconst EditableListItem = ({\n  draggableItem,\n  item,\n  editFunction,\n  deleteFunction,\n  deleteIcon,\n  customOnNotEdit,\n  customOnNotEditClick,\n  pathname,\n  handleRedirect,\n  editMode,\n  onDragOver,\n  onDrop,\n  onDragLeave,\n}) => {\n  function useKeypress(targetKey) {\n    const [keyPressed, setKeyPressed] = useState(false);\n    function downHandler({ key }) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n      const upHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n    useEffect(() => {\n      window.addEventListener(\"keydown\", downHandler);\n      window.addEventListener(\"keyup\", upHandler);\n      return () => {\n        window.removeEventListener(\"keydown\", downHandler);\n        window.removeEventListener(\"keyup\", upHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n    return keyPressed;\n  }\n\n  function useOnClickOutside(ref, handler) {\n    useEffect(() => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    }, [ref, handler]);\n  }\n  const [editClicked, setEditClicked] = useState(false);\n  const [inputText, setInputText] = useState(item.name);\n  const wrapperRef = useRef(null);\n  const inputRef = useRef(null);\n  const enter = useKeypress(\"Enter\");\n  const esc = useKeypress(\"Escape\");\n\n  useOnClickOutside(wrapperRef, () => {\n    if ((editClicked || editMode) && inputText !== item.name) {\n      if (inputText === \"\") {\n        deleteFunction();\n      } else {\n        editFunction(inputText);\n      }\n      if (editMode && pathname === `/${item.name}`) {\n        handleRedirect(inputText);\n      }\n    }\n    setEditClicked(false);\n  });\n\n  const onEnter = useCallback(() => {\n    if (enter) {\n      if (inputText !== item.name) {\n        if (inputText === \"\") {\n          deleteFunction();\n        } else {\n          editFunction(inputText);\n        }\n        if (editMode && pathname === `/${item.name}`) {\n          handleRedirect(inputText);\n        }\n      }\n      setEditClicked(false);\n    }\n  }, [enter, inputText]);\n\n  const onEsc = useCallback(() => {\n    if (esc) {\n      setInputText(item.name);\n      setEditClicked(false);\n    }\n  }, [esc, item.name]);\n\n  useEffect(() => {\n    onEnter();\n    onEsc();\n  }, [onEnter, onEsc]);\n\n  return editClicked || editMode ? (\n    <ListItem button key={item._id} ref={wrapperRef}>\n      <ListItemText\n        primary={\n          <Input\n            value={inputText}\n            ref={inputRef}\n            autoFocus\n            onFocus={e => e.currentTarget.select()}\n            onChange={(e) => setInputText(e.target.value)}\n          />\n        }\n      />\n      {deleteIcon || null}\n    </ListItem>\n  ) : customOnNotEdit ? (\n      <>{customOnNotEdit}</>\n    ) : customOnNotEditClick ? (\n      <div onClick={() => setEditClicked(true)}>\n        {customOnNotEditClick}\n      </div>\n      ) : draggableItem ? (\n        <ListItem\n          draggable\n          onMouseOver={(event) => onMouseOver(event)}\n          onDragStart={(event) => onDragStart(event, item._id)}\n          onDragEnd={(event) => onDragEnd(event)}\n          onDragOver={onDragOver}\n          onDrop={onDrop}\n          onDragLeave={onDragLeave}\n        >\n          <ListItemText\n            primary={item.name}\n            onClick={() => setEditClicked(true)}\n          />\n        </ListItem>\n      ) : pathname ? (\n        <ListItem button onClick={() => handleRedirect(item)}>\n          <ListItemText primary={item.name}/>    \n        </ListItem>\n        ) : (    \n          <ListItem button onClick={() => setEditClicked(true)}>\n            <ListItemText primary={item.name}/>\n          </ListItem>\n          );\n};\n\n\nDraggableListItem.propTypes = {\n  listId: PropTypes.string.isRequired,\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    subItems: PropTypes.array.isRequired,\n  }).isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n\nEditableListItem.propTypes = {\n  draggableItem: PropTypes.bool,\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    subItems: PropTypes.array,\n  }).isRequired,\n  deleteIcon: PropTypes.node,\n  customOnNotEdit: PropTypes.node,\n  customOnNotEditClick: PropTypes.node,\n  pathname: PropTypes.string,\n  editMode: PropTypes.bool,\n\n  editFunction: PropTypes.func.isRequired,\n  deleteFunction: PropTypes.func.isRequired,\n  handleRedirect: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDrop: PropTypes.func,\n  onDragLeave: PropTypes.func\n};\n\nexport { DraggableListItem, EditableListItem };\n\n// const ListItemButtons = ({ item, editItem, deleteItem }) => {\n//   const actionTypes = { edit, del };\n//   // const add = (\n//   //   <IconButton edge=\"end\" aria-label=\"add\" onClick={() => addItem(item)}>\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   // const update = (\n//   //   <IconButton\n//   //     edge=\"end\"\n//   //     aria-label=\"update\"\n//   //     onClick={() => updateItemProgress(item)}\n//   //   >\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   const edit = (\n//     <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => editItem(item)}>\n//       <NavigateNextSharpIcon />\n//     </IconButton>\n//   );\n//   const del = (\n//     <IconButton\n//       edge=\"end\"\n//       aria-label=\"delete\"\n//       onClick={() => deleteItem(item._id)}\n//     >\n//       <DeleteIcon />\n//     </IconButton>\n//   );\n\n//   const ActionMenu = () => {\n//     const [anchorEl, setAnchorEl] = React.useState(null);\n//     const open = Boolean(anchorEl);\n\n//     const handleClick = (event) => {\n//       setAnchorEl(event.currentTarget);\n//     };\n\n//     const handleClose = () => {\n//       setAnchorEl(null);\n//     };\n//     return (\n//       <div>\n//         <Button\n//           aria-controls=\"simple-menu\"\n//           aria-haspopup=\"true\"\n//           onClick={handleClick}\n//         >\n//           <MoreVertIcon />\n//         </Button>\n//         <Menu\n//           id=\"simple-menu\"\n//           anchorEl={anchorEl}\n//           keepMounted\n//           open={open}\n//           onClose={handleClose}\n//         >\n//           {actionTypes.map((action) => {\n//             return <MenuItem onClick={handleClose}>{action}</MenuItem> || null;\n//           })}\n//         </Menu>\n//       </div>\n//     );\n//   };\n\n//   // const ActionInline = (\n//   //   <ListItemSecondaryAction>\n//   //     {actions.map((action) => {\n//   //       return actionTypes[action] || null;\n//   //     })}\n//   //   </ListItemSecondaryAction>\n//   // );\n\n//   // const ActionDisplay = actions.length > 2 ? <ActionMenu /> : <ActionInline />;\n\n//   return (\n//     <div>\n//       <Divider orientation=\"vertical\" flexItem />\n//       <ActionMenu />\n//     </div>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}