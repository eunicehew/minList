{"ast":null,"code":"import { pageService } from \"../services/PageService\";\nimport { successAlert, errorAlert } from \"./Alert\"; //Actions\n\nconst PAGE_REQUEST = \"components/common/PAGE_REQUEST\";\nconst PAGE_SUCCESS = \"components/common/PAGE_SUCCESS\";\nconst PAGE_FAILURE = \"components/common/PAGE_FAILURE\"; //Reducer\n\nexport default function pageReducer(state = {\n  pages: []\n}, action) {\n  switch (action.type) {\n    case PAGE_REQUEST:\n      return Object.assign({}, state, {\n        loading: true\n      });\n\n    case PAGE_SUCCESS:\n      return Object.assign({}, state, {\n        pages: action.pages,\n        loading: false\n      });\n\n    case PAGE_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nfunction failure(error) {\n  return {\n    type: PAGE_FAILURE,\n    error\n  };\n}\n\nexport function getPages() {\n  return dispatch => {\n    dispatch({\n      type: PAGE_REQUEST\n    });\n    pageService.getPages().then(pages => {\n      dispatch({\n        type: PAGE_SUCCESS,\n        pages\n      });\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\n\nfunction _handlePageAction(apiCall, body, action) {\n  return dispatch => {\n    apiCall(body).then(pages => {\n      // console.log(pages);\n      dispatch(successAlert(\"Successfully\" + action + \"page\"));\n      dispatch(getPages());\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n} //check what is being taken as body/necessary params\n\n\nexport function addPage(body) {\n  return _handlePageAction(pageService.createPage, body, \"added\");\n}\nexport function deletePage(body) {\n  return _handlePageAction(pageService.deletePage, body, \"deleted\");\n}\nexport function updatePage(body) {\n  return _handlePageAction(pageService.update, body, \"updated\");\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/redux/Page.js"],"names":["pageService","successAlert","errorAlert","PAGE_REQUEST","PAGE_SUCCESS","PAGE_FAILURE","pageReducer","state","pages","action","type","Object","assign","loading","error","failure","getPages","dispatch","then","toString","_handlePageAction","apiCall","body","addPage","createPage","deletePage","updatePage","update"],"mappings":"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","sourcesContent":["import { pageService } from \"../services/PageService\";\nimport { successAlert, errorAlert } from \"./Alert\";\n\n//Actions\nconst PAGE_REQUEST = \"components/common/PAGE_REQUEST\";\nconst PAGE_SUCCESS = \"components/common/PAGE_SUCCESS\";\nconst PAGE_FAILURE = \"components/common/PAGE_FAILURE\";\n\n//Reducer\nexport default function pageReducer(state = { pages: [] }, action) {\n  switch (action.type) {\n    case PAGE_REQUEST:\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    case PAGE_SUCCESS:\n      return Object.assign({}, state, {\n        pages: action.pages,\n        loading: false,\n      });\n    case PAGE_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false,\n      });\n\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nfunction failure(error) {\n  return { type: PAGE_FAILURE, error };\n}\n\nexport function getPages() {\n  return (dispatch) => {\n    dispatch({ type: PAGE_REQUEST });\n    pageService.getPages().then(\n      (pages) => {\n        dispatch({ type: PAGE_SUCCESS, pages });\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nfunction _handlePageAction(apiCall, body, action) {\n  return (dispatch) => {\n    apiCall(body).then(\n      (pages) => {\n        // console.log(pages);\n        dispatch(successAlert(\"Successfully\" + action + \"page\"));\n        dispatch(getPages());\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\n//check what is being taken as body/necessary params\nexport function addPage(body) {\n  return _handlePageAction(pageService.createPage, body, \"added\");\n}\nexport function deletePage(body) {\n  return _handlePageAction(pageService.deletePage, body, \"deleted\");\n}\nexport function updatePage(body) {\n  return _handlePageAction(pageService.update, body, \"updated\");\n}\n"]},"metadata":{},"sourceType":"module"}