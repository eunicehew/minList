{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/app/App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"./App.css\";\nimport Page from \"../components/common/Page\";\nimport { NavBar } from \"../components/navBar\";\nimport Alert from \"../components/common/Alert\"; // const PrivateRoute = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={(props) =>\n//         // change this to look at redux?\n//         localStorage.getItem(\"user\") ? (\n//           <Component {...props} />\n//         ) : (\n//           <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n//         )\n//       }\n//     />\n//   );\n// };\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\nconst PrivateRoute = ({\n  component,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => localStorage.getItem(\"user\") ? renderMergedProps(component, props, rest) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst App = ({ ...props\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), props.alertMessage && /*#__PURE__*/React.createElement(Alert, {\n    type: props.alertType,\n    message: props.alertMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), props.pages ? props.pages.map(page => {\n    return /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      key: page._id,\n      path: `/${page.name}`,\n      component: Page,\n      pageId: page._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    });\n  }) : null, /*#__PURE__*/React.createElement(Redirect, {\n    from: \"*\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  console.log(state.alertState);\n  return {\n    user: state.loginState.user,\n    pages: state.pageState.pages,\n    error: state.pageState.error,\n    alertType: state.alertState.type,\n    alertMessage: state.alertState.message\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/app/App.js"],"names":["React","connect","BrowserRouter","Route","Switch","Redirect","CssBaseline","Page","NavBar","Alert","renderMergedProps","component","rest","finalProps","Object","assign","createElement","PrivateRoute","props","localStorage","getItem","pathname","state","from","location","App","alertMessage","alertType","pages","map","page","_id","name","mapStateToProps","console","log","alertState","user","loginState","pageState","error","type","message"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport \"./App.css\";\r\nimport Page from \"../components/common/Page\";\r\nimport { NavBar } from \"../components/navBar\";\r\nimport Alert from \"../components/common/Alert\";\r\n// const PrivateRoute = ({ component: Component, ...rest }) => {\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={(props) =>\r\n//         // change this to look at redux?\r\n//         localStorage.getItem(\"user\") ? (\r\n//           <Component {...props} />\r\n//         ) : (\r\n//           <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return React.createElement(component, finalProps);\r\n};\r\n\r\nconst PrivateRoute = ({ component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem(\"user\") ? (\r\n          renderMergedProps(component, props, rest)\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst App = ({ ...props }) => {\r\n  return (\r\n    <div className=\"App\">\r\n      <CssBaseline />\r\n      <BrowserRouter>\r\n        <NavBar />\r\n        {props.alertMessage && (\r\n          <Alert type={props.alertType} message={props.alertMessage} />\r\n        )}\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Page} />\r\n          {props.pages\r\n            ? props.pages.map((page) => {\r\n                return (\r\n                  <PrivateRoute\r\n                    exact\r\n                    key={page._id}\r\n                    path={`/${page.name}`}\r\n                    component={Page}\r\n                    pageId={page._id}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state.alertState);\r\n  return {\r\n    user: state.loginState.user,\r\n    pages: state.pageState.pages,\r\n    error: state.pageState.error,\r\n    alertType: state.alertState.type,\r\n    alertMessage: state.alertState.message,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}