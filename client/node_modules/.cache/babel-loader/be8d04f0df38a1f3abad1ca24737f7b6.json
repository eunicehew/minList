{"ast":null,"code":"// import { configureStore } from \"@reduxjs/toolkit\";\n// import counterReducer from \"../features/counter/counterSlice\";\n// export default configureStore({\n//   reducer: {\n//     counter: counterReducer,\n//     todos: todoReducer\n//   }\n// });\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { setToken } from \"../services/ServiceHelpers\";\nimport todoReducer from \"../components/todo/ducks/Todo\";\nimport loginReducer from \"../components/home/ducks/Login\";\nimport registerReducer from \"../components/home/ducks/Register\";\nconst reducers = combineReducers({\n  todoState: todoReducer,\n  loginState: loginReducer,\n  registerState: registerReducer\n});\n\nconst saveAuthToken = store => next => action => {\n  if (action.type === \"LOGIN_SUCCESS\") {\n    // after a successful login, update the token in the API\n    setToken(action.user.token);\n    console.log(action.user.token);\n  }\n\n  return next(action);\n};\n\nexport const store = createStore(reducers, applyMiddleware(thunk, saveAuthToken));","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/app/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","setToken","todoReducer","loginReducer","registerReducer","reducers","todoState","loginState","registerState","saveAuthToken","store","next","action","type","user","token","console","log"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,MAAMC,QAAQ,GAAGP,eAAe,CAAC;AAC/BQ,EAAAA,SAAS,EAAEJ,WADoB;AAE/BK,EAAAA,UAAU,EAAEJ,YAFmB;AAG/BK,EAAAA,aAAa,EAAEJ;AAHgB,CAAD,CAAhC;;AAMA,MAAMK,aAAa,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnC;AACAZ,IAAAA,QAAQ,CAACW,MAAM,CAACE,IAAP,CAAYC,KAAb,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,IAAP,CAAYC,KAAxB;AACD;;AACD,SAAOJ,IAAI,CAACC,MAAD,CAAX;AACD,CAPD;;AASA,OAAO,MAAMF,KAAK,GAAGb,WAAW,CAC9BQ,QAD8B,EAE9BN,eAAe,CAACC,KAAD,EAAQS,aAAR,CAFe,CAAzB","sourcesContent":["// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import counterReducer from \"../features/counter/counterSlice\";\r\n\r\n// export default configureStore({\r\n//   reducer: {\r\n//     counter: counterReducer,\r\n//     todos: todoReducer\r\n//   }\r\n// });\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { setToken } from \"../services/ServiceHelpers\";\r\nimport todoReducer from \"../components/todo/ducks/Todo\";\r\nimport loginReducer from \"../components/home/ducks/Login\";\r\nimport registerReducer from \"../components/home/ducks/Register\";\r\nconst reducers = combineReducers({\r\n  todoState: todoReducer,\r\n  loginState: loginReducer,\r\n  registerState: registerReducer,\r\n});\r\n\r\nconst saveAuthToken = (store) => (next) => (action) => {\r\n  if (action.type === \"LOGIN_SUCCESS\") {\r\n    // after a successful login, update the token in the API\r\n    setToken(action.user.token);\r\n    console.log(action.user.token);\r\n  }\r\n  return next(action);\r\n};\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  applyMiddleware(thunk, saveAuthToken)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}