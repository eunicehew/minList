{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from \"./app/store\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nReactDOM.render(\n/*#__PURE__*/\n// <React.StrictMode>\nReact.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(PersistGate, {\n  loading: /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }\n  }),\n  persistor: persistor,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n})))), // </React.StrictMode>,\ndocument.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/index.js"],"names":["React","ReactDOM","Provider","PersistGate","store","persistor","serviceWorker","CircularProgress","App","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,aAAjC;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEAP,QAAQ,CAACQ,MAAT;AAAA;AACE;AACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAa,EAAA,OAAO,eAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB;AAA4C,EAAA,SAAS,EAAEC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CAFF,EASE;AACAK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF,E,CAaA;AACA;AACA;;AACAL,aAAa,CAACM,UAAd","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { store, persistor } from \"./app/store\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./index.css\";\r\nimport App from \"./app/App\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <React.Fragment>\r\n    <Provider store={store}>\r\n      <PersistGate loading={<CircularProgress />} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.Fragment>,\r\n  // </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}