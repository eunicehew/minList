{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/common/List/ListItems.js\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Input from \"@material-ui/core/Input\";\n\nconst DraggableListItem = ({\n  item,\n  listId,\n  sheetId,\n  deleteItem,\n  editItem,\n  editable\n}) => {\n  const onMouseOver = event => {\n    event.currentTarget.style.cursor = \"grab\";\n  };\n\n  const onDragStart = (event, item) => {\n    event.currentTarget.style.border = \"dashed\";\n    event.dataTransfer.setData(\"item\", item);\n    event.dataTransfer.effectAllowed = \"move\"; // event.currentTarget.style.cursor = \"grabbing\";\n  };\n\n  const onDragEnd = event => {\n    event.currentTarget.style.border = \"\";\n    event.currentTarget.style.background = \"\"; // event.currentTarget.style.cursor = \"default\";\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, editable ? /*#__PURE__*/React.createElement(EditableListItem, {\n    draggable: true,\n    onMouseOver: event => onMouseOver(event),\n    onDragStart: event => onDragStart(event, item._id),\n    onDragEnd: event => onDragEnd(event),\n    item: item,\n    editFunction: editItem,\n    deleteFunction: deleteItem({\n      listId,\n      itemId: item._id,\n      sheetId\n    }),\n    deleteIcon: /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"delete\",\n      onClick: () => deleteItem({\n        listId,\n        itemId: item._id,\n        sheetId\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => deleteItem({\n      listId,\n      itemId: item._id,\n      sheetId\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(ListItem, {\n    draggable: true,\n    onMouseOver: event => onMouseOver(event),\n    onDragStart: event => onDragStart(event, item._id),\n    onDragEnd: event => onDragEnd(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => deleteItem({\n      listId,\n      itemId: item._id,\n      sheetId\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst EditableListItem = ({\n  item,\n  editFunction,\n  deleteFunction,\n  pathname,\n  handleRedirect,\n  clickButtonForEdit\n}) => {\n  function useKeypress(targetKey) {\n    const [keyPressed, setKeyPressed] = useState(false);\n\n    const keyHandler = ({\n      key\n    }) => {\n      if (key === targetKey) {\n        setKeyPressed(!keyPressed);\n      } else {\n        setKeyPressed(false);\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", keyHandler);\n      window.addEventListener(\"keyup\", keyHandler);\n      return () => {\n        window.removeEventListener(\"keydown\", keyHandler);\n        window.removeEventListener(\"keyup\", keyHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n\n    return keyPressed;\n  }\n\n  function useOnClickOutside(ref, handler) {\n    useEffect(() => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    }, [ref, handler]);\n  }\n\n  const [editClicked, setEditClicked] = useState(clickButtonForEdit || false);\n  const [inputText, setInputText] = useState(item.name);\n  const wrapperRef = useRef(null);\n  const inputRef = useRef(null);\n  const enter = useKeypress(\"Enter\");\n  const esc = useKeypress(\"Escape\");\n  useOnClickOutside(wrapperRef, () => {\n    if (inputText !== item.name) {\n      if (inputText === \"\") {\n        deleteFunction();\n      } else {\n        editFunction({\n          id: item._id,\n          name: inputText\n        });\n      }\n\n      if (clickButtonForEdit && pathname === `/${item.name}`) {\n        handleRedirect(inputText);\n      }\n    }\n\n    setEditClicked(false);\n  });\n  const onEnter = useCallback(() => {\n    if (enter && inputText !== item.name) {\n      if (inputText === \"\") {\n        deleteFunction();\n      } else {\n        editFunction({\n          id: item._id,\n          name: inputText\n        });\n      }\n\n      if (clickButtonForEdit && pathname === `/${item.name}`) {\n        handleRedirect(inputText);\n      }\n\n      setEditClicked(false);\n    }\n  }, [enter, inputText]);\n  const onEsc = useCallback(() => {\n    if (esc) {\n      setInputText(item.name);\n      setEditClicked(false);\n    }\n  }, [esc, item.name]);\n  useEffect(() => {\n    onEnter();\n    onEsc();\n  }, [onEnter, onEsc]); // watch the Enter and Escape key presses\n\n  return editClicked ? /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: item._id,\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: inputText,\n    ref: inputRef,\n    onChange: e => setInputText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }), deleteIcon ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), deleteIcon) : null) : /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, clickButtonForEdit ? /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    onClick: () => handleRedirect(item.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    onClick: () => setEditClicked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }));\n}; // const ListItemButtons = ({ item, editItem, deleteItem }) => {\n//   const actionTypes = { edit, del };\n//   // const add = (\n//   //   <IconButton edge=\"end\" aria-label=\"add\" onClick={() => addItem(item)}>\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   // const update = (\n//   //   <IconButton\n//   //     edge=\"end\"\n//   //     aria-label=\"update\"\n//   //     onClick={() => updateItemProgress(item)}\n//   //   >\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   const edit = (\n//     <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => editItem(item)}>\n//       <NavigateNextSharpIcon />\n//     </IconButton>\n//   );\n//   const del = (\n//     <IconButton\n//       edge=\"end\"\n//       aria-label=\"delete\"\n//       onClick={() => deleteItem(item._id)}\n//     >\n//       <DeleteIcon />\n//     </IconButton>\n//   );\n//   const ActionMenu = () => {\n//     const [anchorEl, setAnchorEl] = React.useState(null);\n//     const open = Boolean(anchorEl);\n//     const handleClick = (event) => {\n//       setAnchorEl(event.currentTarget);\n//     };\n//     const handleClose = () => {\n//       setAnchorEl(null);\n//     };\n//     return (\n//       <div>\n//         <Button\n//           aria-controls=\"simple-menu\"\n//           aria-haspopup=\"true\"\n//           onClick={handleClick}\n//         >\n//           <MoreVertIcon />\n//         </Button>\n//         <Menu\n//           id=\"simple-menu\"\n//           anchorEl={anchorEl}\n//           keepMounted\n//           open={open}\n//           onClose={handleClose}\n//         >\n//           {actionTypes.map((action) => {\n//             return <MenuItem onClick={handleClose}>{action}</MenuItem> || null;\n//           })}\n//         </Menu>\n//       </div>\n//     );\n//   };\n//   // const ActionInline = (\n//   //   <ListItemSecondaryAction>\n//   //     {actions.map((action) => {\n//   //       return actionTypes[action] || null;\n//   //     })}\n//   //   </ListItemSecondaryAction>\n//   // );\n//   // const ActionDisplay = actions.length > 2 ? <ActionMenu /> : <ActionInline />;\n//   return (\n//     <div>\n//       <Divider orientation=\"vertical\" flexItem />\n//       <ActionMenu />\n//     </div>\n//   );\n// };\n\n\nDraggableListItem.propTypes = {\n  listId: PropTypes.string.isRequired,\n  sheetId: PropTypes.string.isRequired,\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    subItems: PropTypes.array.isRequired\n  }).isRequired,\n  deleteItem: PropTypes.func.isRequired\n};\nexport { DraggableListItem, EditableListItem };","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/common/List/ListItems.js"],"names":["React","useState","useEffect","useRef","useCallback","PropTypes","DeleteIcon","IconButton","ListItem","ListItemText","Divider","Input","DraggableListItem","item","listId","sheetId","deleteItem","editItem","editable","onMouseOver","event","currentTarget","style","cursor","onDragStart","border","dataTransfer","setData","effectAllowed","onDragEnd","background","_id","itemId","name","EditableListItem","editFunction","deleteFunction","pathname","handleRedirect","clickButtonForEdit","useKeypress","targetKey","keyPressed","setKeyPressed","keyHandler","key","window","addEventListener","removeEventListener","useOnClickOutside","ref","handler","listener","current","contains","target","document","editClicked","setEditClicked","inputText","setInputText","wrapperRef","inputRef","enter","esc","id","onEnter","onEsc","e","value","deleteIcon","propTypes","string","isRequired","shape","subItems","array","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Input from \"@material-ui/core/Input\";\n\nconst DraggableListItem = ({\n  item,\n  listId,\n  sheetId,\n  deleteItem,\n  editItem,\n  editable,\n}) => {\n  const onMouseOver = (event) => {\n    event.currentTarget.style.cursor = \"grab\";\n  };\n  const onDragStart = (event, item) => {\n    event.currentTarget.style.border = \"dashed\";\n    event.dataTransfer.setData(\"item\", item);\n    event.dataTransfer.effectAllowed = \"move\";\n    // event.currentTarget.style.cursor = \"grabbing\";\n  };\n\n  const onDragEnd = (event) => {\n    event.currentTarget.style.border = \"\";\n    event.currentTarget.style.background = \"\";\n    // event.currentTarget.style.cursor = \"default\";\n  };\n  return (\n    <>\n      {editable ? (\n        <EditableListItem\n          draggable\n          onMouseOver={(event) => onMouseOver(event)}\n          onDragStart={(event) => onDragStart(event, item._id)}\n          onDragEnd={(event) => onDragEnd(event)}\n          item={item}\n          editFunction={editItem}\n          deleteFunction={deleteItem({ listId, itemId: item._id, sheetId })}\n          deleteIcon={\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              onClick={() => deleteItem({ listId, itemId: item._id, sheetId })}\n            >\n              <DeleteIcon />\n            </IconButton>\n          }\n        >\n          <ListItemText primary={item.name} />\n          <Divider orientation=\"vertical\" flexItem />\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => deleteItem({ listId, itemId: item._id, sheetId })}\n          ></IconButton>\n        </EditableListItem>\n      ) : (\n        <ListItem\n          draggable\n          onMouseOver={(event) => onMouseOver(event)}\n          onDragStart={(event) => onDragStart(event, item._id)}\n          onDragEnd={(event) => onDragEnd(event)}\n        >\n          <ListItemText primary={item.name} />\n          <Divider orientation=\"vertical\" flexItem />\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => deleteItem({ listId, itemId: item._id, sheetId })}\n          ></IconButton>\n        </ListItem>\n      )}\n    </>\n  );\n};\n\nconst EditableListItem = ({\n  item,\n  editFunction,\n  deleteFunction,\n  pathname,\n  handleRedirect,\n  clickButtonForEdit,\n}) => {\n  function useKeypress(targetKey) {\n    const [keyPressed, setKeyPressed] = useState(false);\n    const keyHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(!keyPressed);\n      } else {\n        setKeyPressed(false);\n      }\n    };\n    useEffect(() => {\n      window.addEventListener(\"keydown\", keyHandler);\n      window.addEventListener(\"keyup\", keyHandler);\n      return () => {\n        window.removeEventListener(\"keydown\", keyHandler);\n        window.removeEventListener(\"keyup\", keyHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n    return keyPressed;\n  }\n\n  function useOnClickOutside(ref, handler) {\n    useEffect(() => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    }, [ref, handler]);\n  }\n  const [editClicked, setEditClicked] = useState(clickButtonForEdit || false);\n  const [inputText, setInputText] = useState(item.name);\n  const wrapperRef = useRef(null);\n  const inputRef = useRef(null);\n  const enter = useKeypress(\"Enter\");\n  const esc = useKeypress(\"Escape\");\n\n  useOnClickOutside(wrapperRef, () => {\n    if (inputText !== item.name) {\n      if (inputText === \"\") {\n        deleteFunction();\n      } else {\n        editFunction({ id: item._id, name: inputText });\n      }\n      if (clickButtonForEdit && pathname === `/${item.name}`) {\n        handleRedirect(inputText);\n      }\n    }\n    setEditClicked(false);\n  });\n\n  const onEnter = useCallback(() => {\n    if (enter && inputText !== item.name) {\n      if (inputText === \"\") {\n        deleteFunction();\n      } else {\n        editFunction({ id: item._id, name: inputText });\n      }\n      if (clickButtonForEdit && pathname === `/${item.name}`) {\n        handleRedirect(inputText);\n      }\n      setEditClicked(false);\n    }\n  }, [enter, inputText]);\n\n  const onEsc = useCallback(() => {\n    if (esc) {\n      setInputText(item.name);\n      setEditClicked(false);\n    }\n  }, [esc, item.name]);\n\n  useEffect(() => {\n    onEnter();\n    onEsc();\n  }, [onEnter, onEsc]); // watch the Enter and Escape key presses\n\n  return editClicked ? (\n    <ListItem button key={item._id} ref={wrapperRef}>\n      <Input\n        value={inputText}\n        ref={inputRef}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      {deleteIcon ? (\n        <>\n          <Divider orientation=\"vertical\" flexItem />\n          {deleteIcon}\n        </>\n      ) : null}\n    </ListItem>\n  ) : (\n    <ListItem button>\n      {clickButtonForEdit ? (\n        <ListItemText\n          primary={item.name}\n          onClick={() => handleRedirect(item.name)}\n        />\n      ) : (\n        <ListItemText\n          primary={item.name}\n          onClick={() => setEditClicked(true)}\n        />\n      )}\n    </ListItem>\n  );\n};\n\n// const ListItemButtons = ({ item, editItem, deleteItem }) => {\n//   const actionTypes = { edit, del };\n//   // const add = (\n//   //   <IconButton edge=\"end\" aria-label=\"add\" onClick={() => addItem(item)}>\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   // const update = (\n//   //   <IconButton\n//   //     edge=\"end\"\n//   //     aria-label=\"update\"\n//   //     onClick={() => updateItemProgress(item)}\n//   //   >\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   const edit = (\n//     <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => editItem(item)}>\n//       <NavigateNextSharpIcon />\n//     </IconButton>\n//   );\n//   const del = (\n//     <IconButton\n//       edge=\"end\"\n//       aria-label=\"delete\"\n//       onClick={() => deleteItem(item._id)}\n//     >\n//       <DeleteIcon />\n//     </IconButton>\n//   );\n\n//   const ActionMenu = () => {\n//     const [anchorEl, setAnchorEl] = React.useState(null);\n//     const open = Boolean(anchorEl);\n\n//     const handleClick = (event) => {\n//       setAnchorEl(event.currentTarget);\n//     };\n\n//     const handleClose = () => {\n//       setAnchorEl(null);\n//     };\n//     return (\n//       <div>\n//         <Button\n//           aria-controls=\"simple-menu\"\n//           aria-haspopup=\"true\"\n//           onClick={handleClick}\n//         >\n//           <MoreVertIcon />\n//         </Button>\n//         <Menu\n//           id=\"simple-menu\"\n//           anchorEl={anchorEl}\n//           keepMounted\n//           open={open}\n//           onClose={handleClose}\n//         >\n//           {actionTypes.map((action) => {\n//             return <MenuItem onClick={handleClose}>{action}</MenuItem> || null;\n//           })}\n//         </Menu>\n//       </div>\n//     );\n//   };\n\n//   // const ActionInline = (\n//   //   <ListItemSecondaryAction>\n//   //     {actions.map((action) => {\n//   //       return actionTypes[action] || null;\n//   //     })}\n//   //   </ListItemSecondaryAction>\n//   // );\n\n//   // const ActionDisplay = actions.length > 2 ? <ActionMenu /> : <ActionInline />;\n\n//   return (\n//     <div>\n//       <Divider orientation=\"vertical\" flexItem />\n//       <ActionMenu />\n//     </div>\n//   );\n// };\n\nDraggableListItem.propTypes = {\n  listId: PropTypes.string.isRequired,\n  sheetId: PropTypes.string.isRequired,\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    subItems: PropTypes.array.isRequired,\n  }).isRequired,\n\n  deleteItem: PropTypes.func.isRequired,\n};\n\nexport { DraggableListItem, EditableListItem };\n"]},"metadata":{},"sourceType":"module"}