{"ast":null,"code":"import { todoService } from \"../../../services/TodoService\"; //Actions\n\nconst GET_TODOS_REQUEST = \"components/Todo/GET_TODOS_REQUEST\";\nconst GET_TODOS_SUCCESS = \"components/Todo/GET_TODOS_SUCCESS\";\nconst FAILURE = \"components/Todo/GET_TODOS_FAILURE\";\nconst TODO_REQUEST = \"components/Todo/TODO_REQUEST\";\nconst TODO_SUCCESS = \"components/Todo/TODO_SUCCESS\"; //Reducer\n\nexport default function todoReducer(state = [], action) {\n  switch (action.type) {\n    case GET_TODOS_REQUEST:\n      return Object.assign({}, state, {\n        gettingTodos: true\n      });\n\n    case GET_TODOS_SUCCESS:\n      return Object.assign({}, state, {\n        todos: action.todos\n      });\n    // return action.todos;\n\n    case FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nexport function getTodos() {\n  return dispatch => {\n    dispatch({\n      type: GET_TODOS_REQUEST\n    });\n    todoService.getTodos().then(todos => {\n      dispatch({\n        type: GET_TODOS_SUCCESS,\n        todos\n      });\n    }, error => {\n      dispatch({\n        type: FAILURE,\n        payload: error.toString()\n      });\n    });\n  }; // function _request(type, action) {\n  //   return { type: GET_TODOS_REQUEST, todos };\n  // }\n  // function _success(type, action) {\n  //   return { type: GET_TODOS_SUCCESS, todos };\n  // }\n  // function _failure(type, action) {\n  //   return { type: FAILURE, error };\n  // }\n}\n\nfunction _handleTodo(apiCall, body) {\n  return dispatch => {\n    dispatch({\n      type: TODO_REQUEST\n    });\n    apiCall(body).then(todos => {\n      dispatch({\n        type: TODO_SUCCESS,\n        todos\n      });\n      dispatch(getTodos());\n    }, error => {\n      dispatch({\n        type: FAILURE,\n        payload: error.toString()\n      });\n    });\n  };\n}\n\nexport function addTodo(todo) {\n  return dispatch => {\n    dispatch({\n      type: TODO_REQUEST\n    });\n    todoService.addTodo(todo).then(todos => {\n      console.log(todos);\n      dispatch({\n        type: TODO_SUCCESS,\n        todos\n      });\n      dispatch(getTodos());\n    }, error => {\n      dispatch({\n        type: FAILURE,\n        payload: error.toString()\n      });\n    });\n  }; // return _handleTodo(todoService.addTodo, todo);\n}\nexport function deleteTodo(id) {\n  return _handleTodo(todoService.deleteTodo, id);\n}\nexport function updateTodo(todo) {\n  return _handleTodo(todoService.updateTodo, todo);\n} //Side effects as applicable","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/todo/ducks/Todo.js"],"names":["todoService","GET_TODOS_REQUEST","GET_TODOS_SUCCESS","FAILURE","TODO_REQUEST","TODO_SUCCESS","todoReducer","state","action","type","Object","assign","gettingTodos","todos","error","getTodos","dispatch","then","payload","toString","_handleTodo","apiCall","body","addTodo","todo","console","log","deleteTodo","id","updateTodo"],"mappings":"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","sourcesContent":["import { todoService } from \"../../../services/TodoService\";\n\n//Actions\nconst GET_TODOS_REQUEST = \"components/Todo/GET_TODOS_REQUEST\";\nconst GET_TODOS_SUCCESS = \"components/Todo/GET_TODOS_SUCCESS\";\nconst FAILURE = \"components/Todo/GET_TODOS_FAILURE\";\nconst TODO_REQUEST = \"components/Todo/TODO_REQUEST\";\nconst TODO_SUCCESS = \"components/Todo/TODO_SUCCESS\";\n\n//Reducer\nexport default function todoReducer(state = [], action) {\n  switch (action.type) {\n    case GET_TODOS_REQUEST:\n      return Object.assign({}, state, {\n        gettingTodos: true,\n      });\n    case GET_TODOS_SUCCESS:\n      return Object.assign({}, state, {\n        todos: action.todos,\n      });\n    // return action.todos;\n    case FAILURE:\n      return Object.assign({}, state, {\n        error: true,\n      });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nexport function getTodos() {\n  return (dispatch) => {\n    dispatch({ type: GET_TODOS_REQUEST });\n    todoService.getTodos().then(\n      (todos) => {\n        dispatch({ type: GET_TODOS_SUCCESS, todos });\n      },\n      (error) => {\n        dispatch({ type: FAILURE, payload: error.toString() });\n      }\n    );\n  };\n  // function _request(type, action) {\n  //   return { type: GET_TODOS_REQUEST, todos };\n  // }\n  // function _success(type, action) {\n  //   return { type: GET_TODOS_SUCCESS, todos };\n  // }\n  // function _failure(type, action) {\n  //   return { type: FAILURE, error };\n  // }\n}\n\nfunction _handleTodo(apiCall, body) {\n  return (dispatch) => {\n    dispatch({ type: TODO_REQUEST });\n    apiCall(body).then(\n      (todos) => {\n        dispatch({ type: TODO_SUCCESS, todos });\n        dispatch(getTodos());\n      },\n      (error) => {\n        dispatch({ type: FAILURE, payload: error.toString() });\n      }\n    );\n  };\n}\n\nexport function addTodo(todo) {\n  return (dispatch) => {\n    dispatch({ type: TODO_REQUEST });\n    todoService.addTodo(todo).then(\n      (todos) => {\n        console.log(todos);\n        dispatch({ type: TODO_SUCCESS, todos });\n        dispatch(getTodos());\n      },\n      (error) => {\n        dispatch({ type: FAILURE, payload: error.toString() });\n      }\n    );\n  };\n  // return _handleTodo(todoService.addTodo, todo);\n}\nexport function deleteTodo(id) {\n  return _handleTodo(todoService.deleteTodo, id);\n}\nexport function updateTodo(todo) {\n  return _handleTodo(todoService.updateTodo, todo);\n}\n\n//Side effects as applicable\n"]},"metadata":{},"sourceType":"module"}