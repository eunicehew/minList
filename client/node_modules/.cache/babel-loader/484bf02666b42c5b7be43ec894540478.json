{"ast":null,"code":"import { userService } from \"../../../services/UserService\"; // import { history } from \"../../../app/history\";\n//Actions\n\nconst LOGIN_REQUEST = \"components/Home/LOGIN_REQUEST\";\nconst LOGIN_SUCCESS = \"components/Home/LOGIN_SUCCESS\";\nconst LOGIN_FAILURE = \"components/Home/LOGIN_FAILURE\";\nconst LOGOUT = \"components/Home/LOGOUT\"; //Reducer\n// let user = localStorage.getItem(\"user\");\n// const initialState = user ? { loggedIn: true, user } : {};\n\nexport default function loginReducer(state = {}, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return Object.assign({}, state, {\n        loggingIn: true\n      });\n\n    case LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        loggedIn: true,\n        user: action.user\n      });\n\n    case LOGIN_FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      });\n\n    case LOGOUT:\n      return Object.assign({}, state, {\n        logout: true\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nexport function login(username, password, history) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.login(username, password).then(user => {\n      console.log(user);\n      dispatch(success(user)); // history.push(\"/todo\");\n\n      history.push(`/todo`);\n    }, error => {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: LOGIN_FAILURE,\n      error\n    };\n  }\n}\nexport function logout(history) {\n  return dispatch => {\n    dispatch({\n      type: LOGOUT\n    });\n    userService.logout().then(() => history.push(`/`));\n  };\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/home/ducks/Login.js"],"names":["userService","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","loginReducer","state","action","type","Object","assign","loggingIn","loggedIn","user","error","logout","login","username","password","history","dispatch","request","then","console","log","success","push","failure","toString"],"mappings":"AAAA,SAASA,WAAT,QAA4B,+BAA5B,C,CACA;AAEA;;AACA,MAAMC,aAAa,GAAG,+BAAtB;AACA,MAAMC,aAAa,GAAG,+BAAtB;AACA,MAAMC,aAAa,GAAG,+BAAtB;AACA,MAAMC,MAAM,GAAG,wBAAf,C,CAEA;AACA;AACA;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAA0C;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BK,QAAAA,SAAS,EAAE;AADmB,OAAzB,CAAP;;AAGF,SAAKT,aAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BM,QAAAA,QAAQ,EAAE,IADoB;AAE9BC,QAAAA,IAAI,EAAEN,MAAM,CAACM;AAFiB,OAAzB,CAAP;;AAIF,SAAKV,aAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BQ,QAAAA,KAAK,EAAE;AADuB,OAAzB,CAAP;;AAGF,SAAKV,MAAL;AACE,aAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BS,QAAAA,MAAM,EAAE;AADsB,OAAzB,CAAP;;AAGF;AACE,aAAOT,KAAP;AAnBJ;AAqBD,C,CAED;;AACA,OAAO,SAASU,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,OAAnC,EAA4C;AACjD,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAAEJ,MAAAA;AAAF,KAAD,CAAR,CAAR;AACAjB,IAAAA,WAAW,CAACgB,KAAZ,CAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCI,IAAtC,CACGT,IAAD,IAAU;AACRU,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAO,MAAAA,QAAQ,CAACK,OAAO,CAACZ,IAAD,CAAR,CAAR,CAFQ,CAGR;;AACAM,MAAAA,OAAO,CAACO,IAAR,CAAc,OAAd;AACD,KANH,EAOGZ,KAAD,IAAW;AACTM,MAAAA,QAAQ,CAACO,OAAO,CAACb,KAAK,CAACc,QAAN,EAAD,CAAR,CAAR,CADS,CAET;AACD,KAVH;AAYD,GAdD;;AAgBA,WAASP,OAAT,CAAiBR,IAAjB,EAAuB;AACrB,WAAO;AAAEL,MAAAA,IAAI,EAAEP,aAAR;AAAuBY,MAAAA;AAAvB,KAAP;AACD;;AACD,WAASY,OAAT,CAAiBZ,IAAjB,EAAuB;AACrB,WAAO;AAAEL,MAAAA,IAAI,EAAEN,aAAR;AAAuBW,MAAAA;AAAvB,KAAP;AACD;;AACD,WAASc,OAAT,CAAiBb,KAAjB,EAAwB;AACtB,WAAO;AAAEN,MAAAA,IAAI,EAAEL,aAAR;AAAuBW,MAAAA;AAAvB,KAAP;AACD;AACF;AAED,OAAO,SAASC,MAAT,CAAgBI,OAAhB,EAAyB;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEZ,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACAJ,IAAAA,WAAW,CAACe,MAAZ,GAAqBO,IAArB,CAA0B,MAAMH,OAAO,CAACO,IAAR,CAAc,GAAd,CAAhC;AACD,GAHD;AAID","sourcesContent":["import { userService } from \"../../../services/UserService\";\n// import { history } from \"../../../app/history\";\n\n//Actions\nconst LOGIN_REQUEST = \"components/Home/LOGIN_REQUEST\";\nconst LOGIN_SUCCESS = \"components/Home/LOGIN_SUCCESS\";\nconst LOGIN_FAILURE = \"components/Home/LOGIN_FAILURE\";\nconst LOGOUT = \"components/Home/LOGOUT\";\n\n//Reducer\n// let user = localStorage.getItem(\"user\");\n// const initialState = user ? { loggedIn: true, user } : {};\n\nexport default function loginReducer(state = {}, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return Object.assign({}, state, {\n        loggingIn: true,\n      });\n    case LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        loggedIn: true,\n        user: action.user,\n      });\n    case LOGIN_FAILURE:\n      return Object.assign({}, state, {\n        error: true,\n      });\n    case LOGOUT:\n      return Object.assign({}, state, {\n        logout: true,\n      });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nexport function login(username, password, history) {\n  return (dispatch) => {\n    dispatch(request({ username }));\n    userService.login(username, password).then(\n      (user) => {\n        console.log(user);\n        dispatch(success(user));\n        // history.push(\"/todo\");\n        history.push(`/todo`);\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        // dispatch(alertActions.error(error.toString()));\n      }\n    );\n  };\n\n  function request(user) {\n    return { type: LOGIN_REQUEST, user };\n  }\n  function success(user) {\n    return { type: LOGIN_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: LOGIN_FAILURE, error };\n  }\n}\n\nexport function logout(history) {\n  return (dispatch) => {\n    dispatch({ type: LOGOUT });\n    userService.logout().then(() => history.push(`/`));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}