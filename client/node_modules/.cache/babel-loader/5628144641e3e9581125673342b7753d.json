{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/navBar/NavViews.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Switch from '@material-ui/core/Switch';\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddDialog } from \"../common/Dialog\";\nimport { EditableListItem } from \"../common/List/ListItems\";\nexport const LoggedInNav = ({\n  pages,\n  handleLogout,\n  handleRedirect,\n  handleHome,\n  addPage,\n  editPage,\n  deletePage,\n  username,\n  toggleTheme,\n  toggleMenu,\n  theme,\n  open,\n  pathname\n}) => {\n  const drawerWidth = 240;\n  const useStyles = makeStyles(theme => ({\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    appBarCenterHeight: {\n      verticalAlign: \"middle\"\n    },\n    appBarRight: {\n      marginLeft: \"auto\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    hide: {\n      display: \"none\"\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\"\n    }\n  }));\n  const [editClicked, setEditClicked] = useState(false);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    variant: \"dense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggleMenu,\n    className: clsx(classes.menuButton, open && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HomeIcon, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appBarRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ThemeMode, {\n    style: {\n      marginRight: \"20px\"\n    },\n    classes: classes,\n    theme: theme,\n    toggleTheme: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Logout\")))), /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, pages.length > 0 && pages.map(page => {\n    return /*#__PURE__*/React.createElement(EditableListItem, {\n      key: page._id,\n      editMode: editClicked,\n      item: page,\n      editFunction: inputText => editPage({\n        id: page._id,\n        name: inputText\n      }),\n      deleteFunction: () => deletePage({\n        username,\n        pageId: page._id\n      }),\n      deleteIcon: /*#__PURE__*/React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"delete\",\n        onClick: () => deletePage({\n          username,\n          pageId: page._id\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 23\n        }\n      })),\n      handleRedirect: handleRedirect,\n      pathname: pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    });\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"edit\",\n    onClick: () => setEditClicked(!editClicked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(AddDialog, {\n    header: \"Add Page\",\n    fields: {\n      \"Page Name\": \"name\"\n    },\n    addFunction: addPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  })));\n};\nexport const LoggedOutNav = ({\n  handleLogin\n}) => {\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    variant: \"dense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, \"Admin Login\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n\nconst ThemeMode = ({\n  classes,\n  theme,\n  toggleTheme\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"overline\",\n    className: classes.appBarCenterHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, \" Light Mode \"), /*#__PURE__*/React.createElement(Switch, {\n    checked: theme === 'light' ? false : true,\n    onClick: e => {\n      e.target.checked ? toggleTheme('dark') : toggleTheme('light');\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"overline\",\n    className: classes.appBarCenterHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, \" Dark Mode \"));\n};\n\nLoggedInNav.propTypes = {\n  username: PropTypes.string,\n  pages: PropTypes.arrayOf(PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    sheets: PropTypes.array.isRequired,\n    items: PropTypes.array.isRequired\n  })).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleRedirect: PropTypes.func.isRequired,\n  handleHome: PropTypes.func.isRequired,\n  addPage: PropTypes.func.isRequired,\n  deletePage: PropTypes.func.isRequired,\n  toggleMenu: PropTypes.func.isRequired\n};\nLoggedOutNav.propTypes = {\n  handleLogin: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/navBar/NavViews.js"],"names":["React","useState","PropTypes","clsx","AppBar","Toolbar","IconButton","Button","HomeIcon","MenuIcon","ChevronLeftIcon","Drawer","List","Divider","Switch","Typography","CloseIcon","EditIcon","makeStyles","AddDialog","EditableListItem","LoggedInNav","pages","handleLogout","handleRedirect","handleHome","addPage","editPage","deletePage","username","toggleTheme","toggleMenu","theme","open","pathname","drawerWidth","useStyles","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","appBarCenterHeight","verticalAlign","appBarRight","menuButton","marginRight","spacing","hide","display","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","editClicked","setEditClicked","classes","paper","length","map","page","_id","inputText","id","name","pageId","LoggedOutNav","handleLogin","ThemeMode","e","target","checked","propTypes","string","arrayOf","shape","isRequired","sheets","array","items","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Switch from '@material-ui/core/Switch';\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddDialog } from \"../common/Dialog\";\nimport { EditableListItem } from \"../common/List/ListItems\";\n\nexport const LoggedInNav = ({\n  pages,\n  handleLogout,\n  handleRedirect,\n  handleHome,\n  addPage,\n  editPage,\n  deletePage,\n  username,\n  toggleTheme,\n  toggleMenu,\n  theme,\n  open,\n  pathname,\n}) => {\n  const drawerWidth = 240;\n\n  const useStyles = makeStyles((theme) => ({\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    appBarCenterHeight: {\n      verticalAlign: \"middle\"\n    },\n    appBarRight:{\n      marginLeft: \"auto\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },    \n  }));\n\n  const [editClicked, setEditClicked] = useState(false);\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar variant=\"dense\">\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleMenu}\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <IconButton onClick={handleHome}>\n            <HomeIcon color=\"secondary\" />\n          </IconButton>\n          <div className={classes.appBarRight}>\n            <ThemeMode style={{marginRight: \"20px\"}} classes={classes} theme={theme} toggleTheme={toggleTheme}/>\n            <Button variant=\"contained\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={toggleMenu}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {pages.length > 0 &&\n            pages.map((page) => {\n              return (\n                <EditableListItem\n                  key={page._id}\n                  editMode={editClicked}\n                  item={page}\n                  editFunction={(inputText) =>\n                    editPage({ id: page._id, name: inputText })\n                  }\n                  deleteFunction={() =>\n                    deletePage({ username, pageId: page._id })\n                  }\n                  deleteIcon={\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={() => deletePage({ username, pageId: page._id })}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  }\n                  handleRedirect={handleRedirect}\n                  pathname={pathname}\n                />\n              );\n            })}\n        </List>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"edit\"\n          onClick={() => setEditClicked(!editClicked)}\n        >\n          <EditIcon />\n        </IconButton>\n        <AddDialog\n          header=\"Add Page\"\n          fields={{ \"Page Name\": \"name\" }}\n          addFunction={addPage}\n        />\n      </Drawer>\n    </div>\n  );\n};\n\nexport const LoggedOutNav = ({ handleLogin }) => {\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar variant=\"dense\">\n        <Button variant=\"contained\" onClick={handleLogin}>\n          Admin Login\n        </Button>\n        <Button color=\"inherit\">Login</Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst ThemeMode = ({classes, theme, toggleTheme}) => {\n  return (\n    <div>\n      <Typography variant=\"overline\" className={classes.appBarCenterHeight}> Light Mode </Typography>\n      <Switch\n        checked={theme === 'light' ? false: true}\n        onClick={(e)=> {\n          e.target.checked ? toggleTheme('dark') :toggleTheme('light')}}              \n          color=\"primary\"\n      />\n      <Typography variant=\"overline\" className={classes.appBarCenterHeight}> Dark Mode </Typography> \n    </div> \n  );\n}\n\nLoggedInNav.propTypes = {\n  username: PropTypes.string,\n  pages: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      sheets: PropTypes.array.isRequired,\n      items: PropTypes.array.isRequired,\n    })\n  ).isRequired,\n  open: PropTypes.bool.isRequired,\n\n  handleRedirect: PropTypes.func.isRequired,\n  handleHome: PropTypes.func.isRequired,\n  addPage: PropTypes.func.isRequired,\n  deletePage: PropTypes.func.isRequired,\n  toggleMenu: PropTypes.func.isRequired,\n};\n\nLoggedOutNav.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}