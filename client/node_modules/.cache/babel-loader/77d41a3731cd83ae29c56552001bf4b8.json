{"ast":null,"code":"import { itemService } from \"../services/ItemService\";\nimport { successAlert, errorAlert } from \"./Alert\"; //Actions\n\nconst ITEM_REQUEST = \"components/common/ITEM_REQUEST\";\nconst ITEM_SUCCESS = \"components/common/ITEM_SUCCESS\";\nconst ITEM_FAILURE = \"components/common/ITEM_FAILURE\";\nconst initialState = {\n  items: [],\n  loading: false,\n  listIdLoading: []\n}; //Reducer\n\nexport default function itemReducer(state = initialState, action) {\n  switch (action.type) {\n    case ITEM_REQUEST:\n      return Object.assign({}, state, {\n        loading: true,\n        listIdLoading: [...state.listIdLoading, action.listId]\n      });\n\n    case ITEM_SUCCESS:\n      console.log(action.items);\n      console.log(state.items);\n      let test = state.items.map(item => {\n        return action.items._id === item._id ? action.items : item;\n      }) || [...state.items, action.items];\n      return Object.assign({}, state, {\n        items: test,\n        loading: false,\n        listIdLoading: []\n      });\n\n    case ITEM_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false,\n        listIdLoading: []\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nfunction failure(error) {\n  return {\n    type: ITEM_FAILURE,\n    error\n  };\n}\n\nexport function getItems(listId) {\n  return dispatch => {\n    dispatch({\n      type: ITEM_REQUEST,\n      listId\n    });\n    itemService.getItems(listId).then(items => {\n      console.log(items);\n      dispatch({\n        type: ITEM_SUCCESS,\n        items\n      });\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\nexport function moveItem(body) {\n  console.log(body);\n  return dispatch => {\n    dispatch({\n      type: ITEM_REQUEST,\n      listId: body.listId\n    });\n    itemService.getParentList(body.itemId).then(parentListId => {\n      body.parentListId = parentListId;\n      itemService.moveItem(body).then(() => {\n        dispatch(getItems(body.listId));\n        dispatch(getItems(body.parentListId));\n        dispatch(successAlert(\"Successfully moved item\"));\n      }, error => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      });\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\n\nfunction _handleAction(apiCall, body, action) {\n  return dispatch => {\n    dispatch({\n      type: ITEM_REQUEST\n    });\n    apiCall(body).then(items => {\n      // console.log(items);\n      dispatch(successAlert(\"Successfully \" + action + \" item\"));\n      dispatch(getItems(body.listId));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\n\nexport function addItem(body) {\n  return _handleAction(itemService.create, body, \"added\");\n}\nexport function deleteItem(body) {\n  return _handleAction(itemService.deleteItem, body, \"deleted\");\n}\nexport function editItem(body) {\n  return _handleAction(itemService.update, body, \"updated\");\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/redux/Item.js"],"names":["itemService","successAlert","errorAlert","ITEM_REQUEST","ITEM_SUCCESS","ITEM_FAILURE","initialState","items","loading","listIdLoading","itemReducer","state","action","type","Object","assign","listId","console","log","test","map","item","_id","error","failure","getItems","dispatch","then","toString","moveItem","body","getParentList","itemId","parentListId","_handleAction","apiCall","addItem","create","deleteItem","editItem","update"],"mappings":"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","sourcesContent":["import { itemService } from \"../services/ItemService\";\nimport { successAlert, errorAlert } from \"./Alert\";\n\n//Actions\nconst ITEM_REQUEST = \"components/common/ITEM_REQUEST\";\nconst ITEM_SUCCESS = \"components/common/ITEM_SUCCESS\";\nconst ITEM_FAILURE = \"components/common/ITEM_FAILURE\";\n\nconst initialState = { items: [], loading: false, listIdLoading: [] };\n\n//Reducer\nexport default function itemReducer(state = initialState, action) {\n  switch (action.type) {\n    case ITEM_REQUEST:\n      return Object.assign({}, state, {\n        loading: true,\n        listIdLoading: [...state.listIdLoading, action.listId],\n      });\n    case ITEM_SUCCESS:\n      console.log(action.items);\n      console.log(state.items);\n      let test = state.items.map((item) => {\n        return action.items._id === item._id ? action.items : item;\n      }) || [...state.items, action.items];\n      return Object.assign({}, state, {\n        items: test,\n        loading: false,\n        listIdLoading: [],\n      });\n    case ITEM_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false,\n        listIdLoading: [],\n      });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nfunction failure(error) {\n  return { type: ITEM_FAILURE, error };\n}\n\nexport function getItems(listId) {\n  return (dispatch) => {\n    dispatch({ type: ITEM_REQUEST, listId });\n    itemService.getItems(listId).then(\n      (items) => {\n        console.log(items);\n        dispatch({ type: ITEM_SUCCESS, items });\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nexport function moveItem(body) {\n  console.log(body);\n  return (dispatch) => {\n    dispatch({ type: ITEM_REQUEST, listId: body.listId });\n    itemService.getParentList(body.itemId).then(\n      (parentListId) => {\n        body.parentListId = parentListId;\n        itemService.moveItem(body).then(\n          () => {\n            dispatch(getItems(body.listId));\n            dispatch(getItems(body.parentListId));\n            dispatch(successAlert(\"Successfully moved item\"));\n          },\n          (error) => {\n            dispatch(failure(error.toString()));\n            dispatch(errorAlert(error.toString()));\n          }\n        );\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nfunction _handleAction(apiCall, body, action) {\n  return (dispatch) => {\n    dispatch({ type: ITEM_REQUEST });\n    apiCall(body).then(\n      (items) => {\n        // console.log(items);\n        dispatch(successAlert(\"Successfully \" + action + \" item\"));\n        dispatch(getItems(body.listId));\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nexport function addItem(body) {\n  return _handleAction(itemService.create, body, \"added\");\n}\nexport function deleteItem(body) {\n  return _handleAction(itemService.deleteItem, body, \"deleted\");\n}\nexport function editItem(body) {\n  return _handleAction(itemService.update, body, \"updated\");\n}\n"]},"metadata":{},"sourceType":"module"}