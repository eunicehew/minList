{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/home/Register.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport HttpsIcon from \"@material-ui/icons/Https\"; // import Form from \"../common/Form\";\n\nimport { register } from \"../../redux/Register\";\nimport { infoAlert } from \"../../redux/Alert\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\"; // const registerContent = (handleChange) => [\n//   {\n//     id: \"0\",\n//     icon: <AccountCircle />,\n//     text: (\n//       <TextField\n//         id=\"registerUsername\"\n//         label=\"Username\"\n//         onChange={handleChange}\n//         error={false}\n//       />\n//     ),\n//   },\n//   {\n//     id: \"1\",\n//     icon: <HttpsIcon />,\n//     text: (\n//       <TextField\n//         id=\"registerPassword\"\n//         label=\"Password\"\n//         type=\"password\"\n//         onChange={handleChange}\n//       />\n//     ),\n//   },\n//   {\n//     id: \"2\",\n//     icon: <HttpsIcon />,\n//     text: (\n//       <TextField\n//         id=\"registerPassword2\"\n//         label=\"Reenter Password\"\n//         type=\"password\"\n//         onChange={handleChange}\n//       />\n//     ),\n//   },\n// ];\n// const registerButton = (\n//   <Button variant=\"contained\" type=\"submit\">\n//     Register\n//   </Button>\n// );\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n\n      if (e.target.value.length < 3) {\n        this.setState({\n          [e.target.id + \"Error\"]: true\n        });\n      }\n\n      if (e.target.value.length >= 3 && e.target.id + \"Error\") {\n        this.setState({\n          [e.target.id + \"Error\"]: false\n        });\n      }\n\n      if (!this.state.passwordsEqualError && (e.target.id === \"regPassword\" && e.target.value !== this.state.passwordTwo || e.target.id === \"regPasswordTwo\" && e.target.value !== this.state.password)) {\n        this.setState({\n          passwordsEqualError: true\n        });\n      }\n\n      if (this.state.passwordsEqualError && (e.target.id === \"regPassword\" && e.target.value === this.state.passwordTwo || e.target.id === \"regPasswordTwo\" && e.target.value === this.state.password)) {\n        this.setState({\n          passwordsEqualError: false\n        });\n      }\n    };\n\n    this.handleRegister = e => {\n      e.preventDefault();\n      console.log(\"register\");\n\n      if (!this.state.usernameError && !this.state.passwordError && !this.state.passwordsEqualError) {\n        this.props.register(this.state.regUsername, this.state.regPassword);\n      } else {\n        this.props.infoAlert(\"Please enter valid username and password combination.\");\n      }\n    };\n\n    this.state = {\n      regUsername: \"\",\n      regPassword: \"\",\n      regPasswordTwo: \"\",\n      usernameError: false,\n      passwordError: false,\n      passwordTwoError: false,\n      passwordsEqualError: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        maxWidth: \"30vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      style: {\n        margin: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h5\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      item: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AccountCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"regUsername\",\n      label: \"Username\",\n      onChange: this.handleChange,\n      error: this.state.usernameError,\n      helperText: this.state.usernameError ? \"Username must be 3+ characters\" : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      item: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HttpsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"regPassword\",\n      label: \"Password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      error: this.state.passwordError,\n      helperText: this.state.passwordError ? \"Password must be 3+ characters\" : this.state.passwordsEqualError ? \"Passwords do not match\" : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      item: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HttpsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"regPasswordTwo\",\n      label: \"Re-enter Password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      error: this.state.passwordTwoError,\n      helperText: this.state.passwordTwoError ? \"Password must be 3+ characters\" : this.state.passwordsEqualError ? \"Passwords do not match\" : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, \"Register\")))))) // <Form\n    //   title=\"Register\"\n    //   formContent={registerContent(this.handleChange)}\n    //   button={registerButton}\n    //   submit={this.handleRegister}\n    // />\n    ;\n  }\n\n}\n\nRegister.propTypes = {\n  register: PropTypes.func.isRequired,\n  infoAlert: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  register,\n  infoAlert\n};\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/home/Register.js"],"names":["React","Component","PropTypes","connect","Button","TextField","AccountCircle","HttpsIcon","register","infoAlert","Grid","Card","CardContent","Typography","Register","constructor","handleChange","e","setState","target","id","value","length","state","passwordsEqualError","passwordTwo","password","handleRegister","preventDefault","console","log","usernameError","passwordError","props","regUsername","regPassword","regPasswordTwo","passwordTwoError","render","maxWidth","handleLogin","margin","propTypes","func","isRequired","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\n// import Form from \"../common/Form\";\nimport { register } from \"../../redux/Register\";\nimport { infoAlert } from \"../../redux/Alert\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// const registerContent = (handleChange) => [\n//   {\n//     id: \"0\",\n//     icon: <AccountCircle />,\n//     text: (\n//       <TextField\n//         id=\"registerUsername\"\n//         label=\"Username\"\n//         onChange={handleChange}\n//         error={false}\n//       />\n//     ),\n//   },\n//   {\n//     id: \"1\",\n//     icon: <HttpsIcon />,\n//     text: (\n//       <TextField\n//         id=\"registerPassword\"\n//         label=\"Password\"\n//         type=\"password\"\n//         onChange={handleChange}\n//       />\n//     ),\n//   },\n//   {\n//     id: \"2\",\n//     icon: <HttpsIcon />,\n//     text: (\n//       <TextField\n//         id=\"registerPassword2\"\n//         label=\"Reenter Password\"\n//         type=\"password\"\n//         onChange={handleChange}\n//       />\n//     ),\n//   },\n// ];\n// const registerButton = (\n//   <Button variant=\"contained\" type=\"submit\">\n//     Register\n//   </Button>\n// );\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      regUsername: \"\",\n      regPassword: \"\",\n      regPasswordTwo: \"\",\n      usernameError: false,\n      passwordError: false,\n      passwordTwoError: false,\n      passwordsEqualError: false,\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n    if (e.target.value.length < 3) {\n      this.setState({ [e.target.id + \"Error\"]: true });\n    }\n    if (e.target.value.length >= 3 && e.target.id + \"Error\") {\n      this.setState({ [e.target.id + \"Error\"]: false });\n    }\n    if (\n      !this.state.passwordsEqualError &&\n      ((e.target.id === \"regPassword\" &&\n        e.target.value !== this.state.passwordTwo) ||\n        (e.target.id === \"regPasswordTwo\" &&\n          e.target.value !== this.state.password))\n    ) {\n      this.setState({ passwordsEqualError: true });\n    }\n    if (\n      this.state.passwordsEqualError &&\n      ((e.target.id === \"regPassword\" &&\n        e.target.value === this.state.passwordTwo) ||\n        (e.target.id === \"regPasswordTwo\" &&\n          e.target.value === this.state.password))\n    ) {\n      this.setState({ passwordsEqualError: false });\n    }\n  };\n\n  handleRegister = (e) => {\n    e.preventDefault();\n    console.log(\"register\");\n    if (\n      !this.state.usernameError &&\n      !this.state.passwordError &&\n      !this.state.passwordsEqualError\n    ) {\n      this.props.register(this.state.regUsername, this.state.regPassword);\n    } else {\n      this.props.infoAlert(\n        \"Please enter valid username and password combination.\"\n      );\n    }\n  };\n  render() {\n    return (\n      <Card style={{ maxWidth: \"30vw\" }}>\n        <form\n          className=\"form\"\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={this.handleLogin}\n        >\n          <CardContent style={{ margin: \"5px\" }}>\n            <Grid container>\n              <Typography component=\"h5\" variant=\"h5\">\n                Register\n              </Typography>\n              <Grid container item spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                  <AccountCircle />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"regUsername\"\n                    label=\"Username\"\n                    onChange={this.handleChange}\n                    error={this.state.usernameError}\n                    helperText={\n                      this.state.usernameError\n                        ? \"Username must be 3+ characters\"\n                        : null\n                    }\n                  />\n                </Grid>\n              </Grid>\n              <Grid container item spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                  <HttpsIcon />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"regPassword\"\n                    label=\"Password\"\n                    type=\"password\"\n                    onChange={this.handleChange}\n                    error={this.state.passwordError}\n                    helperText={\n                      this.state.passwordError\n                        ? \"Password must be 3+ characters\"\n                        : this.state.passwordsEqualError\n                        ? \"Passwords do not match\"\n                        : null\n                    }\n                  />\n                </Grid>\n              </Grid>\n              <Grid container item spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                  <HttpsIcon />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"regPasswordTwo\"\n                    label=\"Re-enter Password\"\n                    type=\"password\"\n                    onChange={this.handleChange}\n                    error={this.state.passwordTwoError}\n                    helperText={\n                      this.state.passwordTwoError\n                        ? \"Password must be 3+ characters\"\n                        : this.state.passwordsEqualError\n                        ? \"Passwords do not match\"\n                        : null\n                    }\n                  />\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" type=\"submit\">\n                  Register\n                </Button>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </form>\n      </Card>\n      // <Form\n      //   title=\"Register\"\n      //   formContent={registerContent(this.handleChange)}\n      //   button={registerButton}\n      //   submit={this.handleRegister}\n      // />\n    );\n  }\n}\n\nRegister.propTypes = {\n  register: PropTypes.func.isRequired,\n  infoAlert: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  register,\n  infoAlert,\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}