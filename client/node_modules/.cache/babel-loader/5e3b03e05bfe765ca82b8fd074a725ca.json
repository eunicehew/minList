{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/navBar/NavViews.js\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Input from \"@material-ui/core/Input\";\nimport { AddDialog } from \"../common/Dialog\";\nexport const LoggedInNav = ({\n  pages,\n  handleLogout,\n  handleRedirect,\n  handleHome,\n  addPage,\n  deletePage,\n  username,\n  toggleMenu,\n  open\n}) => {\n  const drawerWidth = 240;\n  const useStyles = makeStyles(theme => ({\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    hide: {\n      display: \"none\"\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\"\n    }\n  })); // const [editClicked, setEditClicked] = useState(false);\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    variant: \"dense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggleMenu,\n    className: clsx(classes.menuButton, open && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HomeIcon, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      position: \"absolute\",\n      right: \"50px\"\n    },\n    variant: \"contained\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Logout\"))), /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, pages.length > 0 && pages.map(page => {\n    return /*#__PURE__*/React.createElement(EditableListItem, {\n      key: page._id,\n      page: page,\n      deletePage: deletePage,\n      username: username,\n      handleRedirect: handleRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }); // return editClicked ? (\n    //   <ListItemOnEdit\n    //     key={page._id}\n    //     page={page}\n    //     deletePage={deletePage}\n    //     username={username}\n    //     setEditClicked={setEditClicked}\n    //   />\n    // ) : (\n    //   <ListItemOnView\n    //     key={page._id}\n    //     page={page}\n    //     handleRedirect={handleRedirect}\n    //     setEditClicked={setEditClicked}\n    //   />\n    // );\n  })), /*#__PURE__*/React.createElement(AddDialog, {\n    header: \"Add Page\",\n    fields: {\n      \"Page Name\": \"name\"\n    },\n    addFunction: addPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst ListItemOnView = ({\n  page,\n  handleRedirect,\n  setNewEditState\n}) => {\n  return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: page.name,\n    onClick: () => handleRedirect(page.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"edit\",\n    onClick: () => setNewEditState(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst EditableListItem = ({\n  page,\n  deletePage,\n  handleRedirect,\n  username\n}) => {\n  function useKeypress(targetKey) {\n    const [keyPressed, setKeyPressed] = useState(false);\n\n    const keyHandler = ({\n      key\n    }) => {\n      console.log(key);\n\n      if (key === targetKey) {\n        setKeyPressed(!keyPressed);\n      } else {\n        setKeyPressed(false);\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", keyHandler);\n      window.addEventListener(\"keyup\", keyHandler); // Remove event listeners on cleanup\n\n      return () => {\n        window.removeEventListener(\"keydown\", keyHandler);\n        window.removeEventListener(\"keyup\", keyHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n\n    console.log(keyPressed);\n    return keyPressed;\n  }\n\n  function useOnClickOutside(ref, handler) {\n    useEffect(() => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    }, [ref, handler]);\n  }\n\n  const [editClicked, setEditClicked] = useState(false);\n  const [inputText, setInputText] = useState(page.name);\n  const wrapperRef = useRef(null);\n  const inputRef = useRef(null);\n  const enter = useKeypress(\"Enter\");\n  const esc = useKeypress(\"Escape\");\n  useOnClickOutside(wrapperRef, () => {\n    console.log(\"click outside\");\n    setInputText(inputText);\n    setEditClicked(false);\n  });\n  const onEnter = useCallback(() => {\n    if (enter) {\n      console.log(\"enter click\");\n      setInputText(inputText);\n      setEditClicked(false);\n    }\n  }, [enter, inputText]);\n  const onEsc = useCallback(() => {\n    if (esc) {\n      console.log(\"esc click\");\n      setInputText(page.name);\n      setEditClicked(false);\n    }\n  }, [esc, page.name]);\n\n  const setNewEditState = () => {\n    console.log(\"test\");\n    setEditClicked(true); // enter = false;\n    // esc = false;\n  }; // useEffect(() => {\n  //   inputRef.current.focus();\n  // });\n\n\n  useEffect(() => {\n    console.log(\"use eff\");\n    onEnter();\n    onEsc();\n  }, [onEnter, onEsc]); // watch the Enter and Escape key presses\n\n  return editClicked ? /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: page._id,\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: inputText,\n    ref: inputRef,\n    onChange: e => setInputText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"edit\",\n    onClick: () => setEditClicked(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => deletePage({\n      username,\n      pageId: page._id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }))) : /*#__PURE__*/React.createElement(ListItemOnView, {\n    key: page._id,\n    page: page,\n    handleRedirect: handleRedirect,\n    setNewEditState: setNewEditState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }\n  });\n};\n\nexport const LoggedOutNav = ({\n  handleLogin\n}) => {\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    variant: \"dense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, \"Admin Login\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\nLoggedInNav.propTypes = {\n  username: PropTypes.string,\n  pages: PropTypes.arrayOf(PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    sheets: PropTypes.array.isRequired,\n    items: PropTypes.array.isRequired\n  })).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleRedirect: PropTypes.func.isRequired,\n  handleHome: PropTypes.func.isRequired,\n  addPage: PropTypes.func.isRequired,\n  deletePage: PropTypes.func.isRequired,\n  toggleMenu: PropTypes.func.isRequired\n};\nListItemOnView.propTypes = {\n  page: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    sheets: PropTypes.array.isRequired,\n    items: PropTypes.array.isRequired\n  }),\n  handleRedirect: PropTypes.func.isRequired,\n  setNewEditState: PropTypes.func.isRequired\n};\nLoggedOutNav.propTypes = {\n  handleLogin: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/navBar/NavViews.js"],"names":["React","useState","useEffect","useRef","useCallback","PropTypes","clsx","AppBar","Toolbar","IconButton","Button","HomeIcon","MenuIcon","ChevronLeftIcon","Drawer","CloseIcon","EditIcon","makeStyles","List","ListItem","ListItemText","Divider","Input","AddDialog","LoggedInNav","pages","handleLogout","handleRedirect","handleHome","addPage","deletePage","username","toggleMenu","open","drawerWidth","useStyles","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","display","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","classes","position","right","paper","length","map","page","_id","ListItemOnView","setNewEditState","name","EditableListItem","useKeypress","targetKey","keyPressed","setKeyPressed","keyHandler","key","console","log","window","addEventListener","removeEventListener","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","editClicked","setEditClicked","inputText","setInputText","wrapperRef","inputRef","enter","esc","onEnter","onEsc","e","value","pageId","LoggedOutNav","handleLogin","propTypes","string","arrayOf","shape","isRequired","sheets","array","items","bool","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Input from \"@material-ui/core/Input\";\nimport { AddDialog } from \"../common/Dialog\";\n\nexport const LoggedInNav = ({\n  pages,\n  handleLogout,\n  handleRedirect,\n  handleHome,\n  addPage,\n  deletePage,\n  username,\n  toggleMenu,\n  open,\n}) => {\n  const drawerWidth = 240;\n\n  const useStyles = makeStyles((theme) => ({\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n  }));\n  // const [editClicked, setEditClicked] = useState(false);\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar variant=\"dense\">\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleMenu}\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <IconButton onClick={handleHome}>\n            <HomeIcon color=\"secondary\" />\n          </IconButton>\n          <Button\n            style={{ position: \"absolute\", right: \"50px\" }}\n            variant=\"contained\"\n            onClick={handleLogout}\n          >\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={toggleMenu}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {pages.length > 0 &&\n            pages.map((page) => {\n              return (\n                <EditableListItem\n                  key={page._id}\n                  page={page}\n                  deletePage={deletePage}\n                  username={username}\n                  handleRedirect={handleRedirect}\n                />\n              );\n              // return editClicked ? (\n              //   <ListItemOnEdit\n              //     key={page._id}\n              //     page={page}\n              //     deletePage={deletePage}\n              //     username={username}\n              //     setEditClicked={setEditClicked}\n              //   />\n              // ) : (\n              //   <ListItemOnView\n              //     key={page._id}\n              //     page={page}\n              //     handleRedirect={handleRedirect}\n              //     setEditClicked={setEditClicked}\n\n              //   />\n              // );\n            })}\n        </List>\n\n        <AddDialog\n          header=\"Add Page\"\n          fields={{ \"Page Name\": \"name\" }}\n          addFunction={addPage}\n        />\n      </Drawer>\n    </div>\n  );\n};\n\nconst ListItemOnView = ({ page, handleRedirect, setNewEditState }) => {\n  return (\n    <ListItem button>\n      <ListItemText\n        primary={page.name}\n        onClick={() => handleRedirect(page.name)}\n      />\n      <IconButton\n        edge=\"end\"\n        aria-label=\"edit\"\n        onClick={() => setNewEditState()}\n      >\n        <EditIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\nconst EditableListItem = ({ page, deletePage, handleRedirect, username }) => {\n  function useKeypress(targetKey) {\n    const [keyPressed, setKeyPressed] = useState(false);\n    const keyHandler = ({ key }) => {\n      console.log(key);\n      if (key === targetKey) {\n        setKeyPressed(!keyPressed);\n      } else {\n        setKeyPressed(false);\n      }\n    };\n    useEffect(() => {\n      window.addEventListener(\"keydown\", keyHandler);\n      window.addEventListener(\"keyup\", keyHandler);\n      // Remove event listeners on cleanup\n      return () => {\n        window.removeEventListener(\"keydown\", keyHandler);\n        window.removeEventListener(\"keyup\", keyHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n    console.log(keyPressed);\n    return keyPressed;\n  }\n\n  function useOnClickOutside(ref, handler) {\n    useEffect(() => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    }, [ref, handler]);\n  }\n  const [editClicked, setEditClicked] = useState(false);\n\n  const [inputText, setInputText] = useState(page.name);\n  const wrapperRef = useRef(null);\n  const inputRef = useRef(null);\n  const enter = useKeypress(\"Enter\");\n  const esc = useKeypress(\"Escape\");\n\n  useOnClickOutside(wrapperRef, () => {\n    console.log(\"click outside\");\n    setInputText(inputText);\n    setEditClicked(false);\n  });\n\n  const onEnter = useCallback(() => {\n    if (enter) {\n      console.log(\"enter click\");\n      setInputText(inputText);\n      setEditClicked(false);\n    }\n  }, [enter, inputText]);\n\n  const onEsc = useCallback(() => {\n    if (esc) {\n      console.log(\"esc click\");\n      setInputText(page.name);\n      setEditClicked(false);\n    }\n  }, [esc, page.name]);\n\n  const setNewEditState = () => {\n    console.log(\"test\");\n    setEditClicked(true);\n    // enter = false;\n    // esc = false;\n  };\n  // useEffect(() => {\n  //   inputRef.current.focus();\n  // });\n\n  useEffect(() => {\n    console.log(\"use eff\");\n    onEnter();\n    onEsc();\n  }, [onEnter, onEsc]); // watch the Enter and Escape key presses\n\n  return editClicked ? (\n    <ListItem button key={page._id} ref={wrapperRef}>\n      <Input\n        value={inputText}\n        ref={inputRef}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      <IconButton\n        edge=\"end\"\n        aria-label=\"edit\"\n        onClick={() => setEditClicked(false)}\n      >\n        <EditIcon />\n      </IconButton>\n      <IconButton\n        edge=\"end\"\n        aria-label=\"delete\"\n        onClick={() => deletePage({ username, pageId: page._id })}\n      >\n        <CloseIcon />\n      </IconButton>\n    </ListItem>\n  ) : (\n    <ListItemOnView\n      key={page._id}\n      page={page}\n      handleRedirect={handleRedirect}\n      setNewEditState={setNewEditState}\n    />\n  );\n};\n\nexport const LoggedOutNav = ({ handleLogin }) => {\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar variant=\"dense\">\n        <Button variant=\"contained\" onClick={handleLogin}>\n          Admin Login\n        </Button>\n        <Button color=\"inherit\">Login</Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nLoggedInNav.propTypes = {\n  username: PropTypes.string,\n  pages: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      sheets: PropTypes.array.isRequired,\n      items: PropTypes.array.isRequired,\n    })\n  ).isRequired,\n  open: PropTypes.bool.isRequired,\n\n  handleRedirect: PropTypes.func.isRequired,\n  handleHome: PropTypes.func.isRequired,\n  addPage: PropTypes.func.isRequired,\n  deletePage: PropTypes.func.isRequired,\n  toggleMenu: PropTypes.func.isRequired,\n};\n\nListItemOnView.propTypes = {\n  page: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    sheets: PropTypes.array.isRequired,\n    items: PropTypes.array.isRequired,\n  }),\n  handleRedirect: PropTypes.func.isRequired,\n  setNewEditState: PropTypes.func.isRequired,\n};\n\nLoggedOutNav.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}