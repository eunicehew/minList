{"ast":null,"code":"// import { configureStore } from \"@reduxjs/toolkit\";\n// import counterReducer from \"../features/counter/counterSlice\";\n// export default configureStore({\n//   reducer: {\n//     counter: counterReducer,\n//     todos: todoReducer\n//   }\n// });\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"; // import { setToken } from \"../services/ServiceHelpers\";\n\nimport todoReducer from \"../redux/Todo\";\nimport loginReducer from \"../redux/Login\";\nimport registerReducer from \"../redux/Register\";\nimport pageReducer from \"../redux/Page\";\nimport sheetReducer from \"../redux/Sheet\";\nimport listReducer from \"../redux/List\";\nimport itemReducer from \"../redux/Item\";\nimport uiReducer from \"../redux/UI\";\nconst reducers = combineReducers({\n  todoState: todoReducer,\n  loginState: loginReducer,\n  registerState: registerReducer,\n  pageState: pageReducer,\n  sheetState: sheetReducer,\n  listState: listReducer,\n  itemState: itemReducer,\n  uiState: uiReducer\n}); // const saveAuthToken = (store) => (next) => (action) => {\n//   if (action.type === \"components/Home/LOGIN_SUCCESS\") {\n//     // after a successful login, update the token in the API\n//     setToken(action.user.token);\n//   }\n//   return next(action);\n// };\n\nexport const store = createStore(reducers, applyMiddleware(thunk));","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/app/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","todoReducer","loginReducer","registerReducer","pageReducer","sheetReducer","listReducer","itemReducer","uiReducer","reducers","todoState","loginState","registerState","pageState","sheetState","listState","itemState","uiState","store"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,QAAQ,GAAGX,eAAe,CAAC;AAC/BY,EAAAA,SAAS,EAAET,WADoB;AAE/BU,EAAAA,UAAU,EAAET,YAFmB;AAG/BU,EAAAA,aAAa,EAAET,eAHgB;AAI/BU,EAAAA,SAAS,EAAET,WAJoB;AAK/BU,EAAAA,UAAU,EAAET,YALmB;AAM/BU,EAAAA,SAAS,EAAET,WANoB;AAO/BU,EAAAA,SAAS,EAAET,WAPoB;AAQ/BU,EAAAA,OAAO,EAAET;AARsB,CAAD,CAAhC,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMU,KAAK,GAAGrB,WAAW,CAACY,QAAD,EAAWV,eAAe,CAACC,KAAD,CAA1B,CAAzB","sourcesContent":["// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import counterReducer from \"../features/counter/counterSlice\";\r\n\r\n// export default configureStore({\r\n//   reducer: {\r\n//     counter: counterReducer,\r\n//     todos: todoReducer\r\n//   }\r\n// });\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n// import { setToken } from \"../services/ServiceHelpers\";\r\nimport todoReducer from \"../redux/Todo\";\r\nimport loginReducer from \"../redux/Login\";\r\nimport registerReducer from \"../redux/Register\";\r\nimport pageReducer from \"../redux/Page\";\r\nimport sheetReducer from \"../redux/Sheet\";\r\nimport listReducer from \"../redux/List\";\r\nimport itemReducer from \"../redux/Item\";\r\nimport uiReducer from \"../redux/UI\";\r\n\r\nconst reducers = combineReducers({\r\n  todoState: todoReducer,\r\n  loginState: loginReducer,\r\n  registerState: registerReducer,\r\n  pageState: pageReducer,\r\n  sheetState: sheetReducer,\r\n  listState: listReducer,\r\n  itemState: itemReducer,\r\n  uiState: uiReducer,\r\n});\r\n\r\n// const saveAuthToken = (store) => (next) => (action) => {\r\n//   if (action.type === \"components/Home/LOGIN_SUCCESS\") {\r\n//     // after a successful login, update the token in the API\r\n//     setToken(action.user.token);\r\n//   }\r\n//   return next(action);\r\n// };\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n"]},"metadata":{},"sourceType":"module"}