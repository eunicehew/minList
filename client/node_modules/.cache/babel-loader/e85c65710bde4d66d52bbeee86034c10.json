{"ast":null,"code":"import { pageService } from \"../services/PageService\";\nimport { getLists } from \"./List\";\nimport { successAlert, errorAlert } from \"./Alert\"; //Actions\n\nconst SHEET_REQUEST = \"components/common/SHEET_REQUEST\";\nconst SHEET_SUCCESS = \"components/common/SHEET_SUCCESS\";\nconst SHEET_FAILURE = \"components/common/SHEET_FAILURE\";\nconst initialState = {\n  sheets: [],\n  loading: false\n}; //Reducer\n\nexport default function sheetReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHEET_REQUEST:\n      return Object.assign({}, state, {\n        loading: true\n      });\n\n    case SHEET_INITIAL_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: action.sheets[0] || undefined,\n        sheets: action.sheets,\n        loading: false\n      });\n\n    case SHEET_CHANGE_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: action.sheet,\n        loading: false\n      });\n\n    case SHEET_SUCCESS:\n      return Object.assign({}, state, {\n        sheets: action.sheets,\n        loading: false\n      });\n\n    case SHEET_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nfunction failure(error) {\n  return {\n    type: SHEET_FAILURE,\n    error\n  };\n}\n\nexport function getSheets(pageId) {\n  return dispatch => {\n    dispatch({\n      type: SHEET_REQUEST\n    });\n    pageService.getSheets(pageId).then(sheets => {\n      dispatch({\n        type: SHEET_INITIAL_SUCCESS,\n        sheets\n      }); // console.log(sheets);\n\n      if (sheets && sheets.length > 0) {\n        // console.log(sheets[0]._id);\n        dispatch(getLists(sheets[0]._id));\n      }\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\nexport function changeSheet(body) {\n  return dispatch => {\n    dispatch({\n      type: SHEET_REQUEST\n    });\n\n    if (body.activeSheet === undefined && body.sheetId !== body.sheets[0]._id || (body, activeSheet && body.sheetId !== body.activeSheet._id)) {\n      dispatch({\n        type: SHEET_CHANGE_SUCCESS,\n        sheet: body.sheet\n      });\n      dispatch(getLists(body.sheet._id));\n    }\n  };\n}\n\nfunction _getSheets(pageId) {\n  return dispatch => {\n    dispatch({\n      type: SHEET_REQUEST\n    });\n    pageService.getSheets(pageId).then(sheets => {\n      dispatch({\n        type: SHEET_SUCCESS,\n        sheets\n      });\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\n\nfunction _handleAction(apiCall, body, action) {\n  return dispatch => {\n    console.log(body);\n    apiCall(body).then(sheets => {\n      // console.log(sheets);\n      dispatch(successAlert(\"Successfully \" + action + \" sheet\"));\n      dispatch(_getSheets(body.pageId));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\n\nexport function addSheet(body) {\n  return _handleAction(pageService.createSheet, body, \"added\");\n}\nexport function deleteSheet(body) {\n  return _handleAction(pageService.deleteSheet, body, \"deleted\");\n}\nexport function editSheet(body) {\n  return _handleAction(pageService.update, body, \"updated\");\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/redux/Sheet.js"],"names":["pageService","getLists","successAlert","errorAlert","SHEET_REQUEST","SHEET_SUCCESS","SHEET_FAILURE","initialState","sheets","loading","sheetReducer","state","action","type","Object","assign","SHEET_INITIAL_SUCCESS","activeSheet","undefined","SHEET_CHANGE_SUCCESS","sheet","error","failure","getSheets","pageId","dispatch","then","length","_id","toString","changeSheet","body","sheetId","_getSheets","_handleAction","apiCall","console","log","addSheet","createSheet","deleteSheet","editSheet","update"],"mappings":"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","sourcesContent":["import { pageService } from \"../services/PageService\";\nimport { getLists } from \"./List\";\nimport { successAlert, errorAlert } from \"./Alert\";\n\n//Actions\nconst SHEET_REQUEST = \"components/common/SHEET_REQUEST\";\nconst SHEET_SUCCESS = \"components/common/SHEET_SUCCESS\";\nconst SHEET_FAILURE = \"components/common/SHEET_FAILURE\";\n\nconst initialState = { sheets: [], loading: false };\n\n//Reducer\nexport default function sheetReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHEET_REQUEST:\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    case SHEET_INITIAL_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: action.sheets[0] || undefined,\n        sheets: action.sheets,\n        loading: false,\n      });\n    case SHEET_CHANGE_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: action.sheet,\n        loading: false,\n      });\n    case SHEET_SUCCESS:\n      return Object.assign({}, state, {\n        sheets: action.sheets,\n        loading: false,\n      });\n    case SHEET_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false,\n      });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nfunction failure(error) {\n  return { type: SHEET_FAILURE, error };\n}\n\nexport function getSheets(pageId) {\n  return (dispatch) => {\n    dispatch({ type: SHEET_REQUEST });\n    pageService.getSheets(pageId).then(\n      (sheets) => {\n        dispatch({ type: SHEET_INITIAL_SUCCESS, sheets });\n        // console.log(sheets);\n        if (sheets && sheets.length > 0) {\n          // console.log(sheets[0]._id);\n          dispatch(getLists(sheets[0]._id));\n        }\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nexport function changeSheet(body) {\n  return (dispatch) => {\n    dispatch({ type: SHEET_REQUEST });\n    if (\n      (body.activeSheet === undefined && body.sheetId !== body.sheets[0]._id) ||\n      (body, activeSheet && body.sheetId !== body.activeSheet._id)\n    ) {\n      dispatch({ type: SHEET_CHANGE_SUCCESS, sheet: body.sheet });\n      dispatch(getLists(body.sheet._id));\n    }\n  };\n}\n\nfunction _getSheets(pageId) {\n  return (dispatch) => {\n    dispatch({ type: SHEET_REQUEST });\n    pageService.getSheets(pageId).then(\n      (sheets) => {\n        dispatch({ type: SHEET_SUCCESS, sheets });\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nfunction _handleAction(apiCall, body, action) {\n  return (dispatch) => {\n    console.log(body);\n    apiCall(body).then(\n      (sheets) => {\n        // console.log(sheets);\n        dispatch(successAlert(\"Successfully \" + action + \" sheet\"));\n        dispatch(_getSheets(body.pageId));\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nexport function addSheet(body) {\n  return _handleAction(pageService.createSheet, body, \"added\");\n}\nexport function deleteSheet(body) {\n  return _handleAction(pageService.deleteSheet, body, \"deleted\");\n}\nexport function editSheet(body) {\n  return _handleAction(pageService.update, body, \"updated\");\n}\n"]},"metadata":{},"sourceType":"module"}