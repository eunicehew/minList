{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/common/List/List.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { DraggableListItem, ListItemButtons } from \"./ListItems\";\nimport { AddDialog } from \"../Dialog.js\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst ListCard = ({\n  isDraggable,\n  listId,\n  addItem,\n  deleteItem,\n  ...rest\n}) => {\n  const onDragOver = event => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"lightgray\"; // event.currentTarget.style.cursor = \"grabbing\";\n  };\n\n  const onDrop = (event, listId, addItem, deleteItem) => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"\"; // event.currentTarget.style.cursor = \"default\";\n\n    let itemId = event.dataTransfer.getData(\"item\");\n    let selectedItem = this.props.items.find(i => i._id === itemId);\n\n    if (listId !== event.target._id) {\n      //get id of new list\n      //THIS IS DEFINITELY WRONG--UPDATE WHEN WE GET TO DOING ITEMS\n      const oldList = {\n        listId: listId,\n        ...selectedItem\n      };\n      const newList = {\n        listId: event.target._id,\n        ...selectedItem\n      };\n      addItem(newList);\n      deleteItem(oldList);\n    }\n  };\n\n  const onDragLeave = event => {\n    event.currentTarget.style.background = \"\";\n  };\n\n  return isDraggable ? /*#__PURE__*/React.createElement(Card, {\n    onDragOver: event => onDragOver(event),\n    onDrop: event => onDrop(event, listId, addItem, deleteItem),\n    onDragLeave: event => onDragLeave(event),\n    style: {\n      height: \"30vw\",\n      width: \"30vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, rest) : /*#__PURE__*/React.createElement(Card, {\n    style: {\n      height: \"30vw\",\n      width: \"30vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, rest);\n};\n\nconst DraggableList = ({\n  isDraggable,\n  listId,\n  header,\n  items,\n  addItem,\n  editItem,\n  deleteItem\n}) => {\n  const onDragOver = event => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"lightgray\"; // event.currentTarget.style.cursor = \"grabbing\";\n  };\n\n  const onDrop = (event, listId, addItem, deleteItem) => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"\"; // event.currentTarget.style.cursor = \"default\";\n\n    let itemId = event.dataTransfer.getData(\"item\");\n    let selectedItem = this.props.items.find(i => i._id === itemId);\n\n    if (listId !== event.target._id) {\n      //get id of new list\n      //THIS IS DEFINITELY WRONG--UPDATE WHEN WE GET TO DOING ITEMS\n      const oldList = {\n        listId: listId,\n        ...selectedItem\n      };\n      const newList = {\n        listId: event.target._id,\n        ...selectedItem\n      };\n      addItem(newList);\n      deleteItem(oldList);\n    }\n  };\n\n  const onDragLeave = event => {\n    event.currentTarget.style.background = \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    onDragOver: event => onDragOver(event),\n    onDrop: event => onDrop(event, listId, addItem, deleteItem),\n    onDragLeave: event => onDragLeave(event),\n    style: {\n      height: \"30vw\",\n      width: \"30vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: \"10px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, header), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, items && items.length > 0 ? items.map(item => {\n    return /*#__PURE__*/React.createElement(DraggableListItem, {\n      key: item._id,\n      isDraggable: true // isDraggable={isDraggable || false}\n      ,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ListItemButtons, {\n      item: item,\n      editItem: editItem,\n      deleteItem: deleteItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"No items \"))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddDialog, {\n    header: \"Add Item\",\n    fields: {\n      \"Item Name\": \"item\"\n    } // specialFields={[\n    //   (changeFunction) => {\n    //     return (\n    //       <TextField\n    //         margin=\"dense\"\n    //         key=\"Description\"\n    //         id=\"details\"\n    //         label=\"Description\"\n    //         fullWidth\n    //         multiline\n    //         required\n    //         type=\"text\"\n    //         onChange={changeFunction}\n    //       />\n    //     );\n    //   },\n    // ]}\n    ,\n    addFunction: addItem,\n    body: {\n      listId: listId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport { DraggableList };","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/common/List/List.js"],"names":["React","Card","CardContent","CardActions","List","ListItemText","DraggableListItem","ListItemButtons","AddDialog","TextField","ListCard","isDraggable","listId","addItem","deleteItem","rest","onDragOver","event","preventDefault","currentTarget","style","background","onDrop","itemId","dataTransfer","getData","selectedItem","props","items","find","i","_id","target","oldList","newList","onDragLeave","height","width","DraggableList","header","editItem","margin","length","map","item","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { DraggableListItem, ListItemButtons } from \"./ListItems\";\nimport { AddDialog } from \"../Dialog.js\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst ListCard = ({ isDraggable, listId, addItem, deleteItem, ...rest }) => {\n  const onDragOver = (event) => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"lightgray\";\n    // event.currentTarget.style.cursor = \"grabbing\";\n  };\n  const onDrop = (event, listId, addItem, deleteItem) => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"\";\n    // event.currentTarget.style.cursor = \"default\";\n    let itemId = event.dataTransfer.getData(\"item\");\n    let selectedItem = this.props.items.find((i) => i._id === itemId);\n    if (listId !== event.target._id) {\n      //get id of new list\n      //THIS IS DEFINITELY WRONG--UPDATE WHEN WE GET TO DOING ITEMS\n      const oldList = { listId: listId, ...selectedItem };\n      const newList = { listId: event.target._id, ...selectedItem };\n      addItem(newList);\n      deleteItem(oldList);\n    }\n  };\n  const onDragLeave = (event) => {\n    event.currentTarget.style.background = \"\";\n  };\n  return isDraggable ? (\n    <Card\n      onDragOver={(event) => onDragOver(event)}\n      onDrop={(event) => onDrop(event, listId, addItem, deleteItem)}\n      onDragLeave={(event) => onDragLeave(event)}\n      style={{ height: \"30vw\", width: \"30vw\" }}\n    >\n      {rest}\n    </Card>\n  ) : (\n    <Card style={{ height: \"30vw\", width: \"30vw\" }}>{rest}</Card>\n  );\n};\n\nconst DraggableList = ({\n  isDraggable,\n  listId,\n  header,\n  items,\n  addItem,\n  editItem,\n  deleteItem,\n}) => {\n  const onDragOver = (event) => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"lightgray\";\n    // event.currentTarget.style.cursor = \"grabbing\";\n  };\n  const onDrop = (event, listId, addItem, deleteItem) => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"\";\n    // event.currentTarget.style.cursor = \"default\";\n    let itemId = event.dataTransfer.getData(\"item\");\n    let selectedItem = this.props.items.find((i) => i._id === itemId);\n    if (listId !== event.target._id) {\n      //get id of new list\n      //THIS IS DEFINITELY WRONG--UPDATE WHEN WE GET TO DOING ITEMS\n      const oldList = { listId: listId, ...selectedItem };\n      const newList = { listId: event.target._id, ...selectedItem };\n      addItem(newList);\n      deleteItem(oldList);\n    }\n  };\n  const onDragLeave = (event) => {\n    event.currentTarget.style.background = \"\";\n  };\n  return (\n    <Card\n      onDragOver={(event) => onDragOver(event)}\n      onDrop={(event) => onDrop(event, listId, addItem, deleteItem)}\n      onDragLeave={(event) => onDragLeave(event)}\n      style={{ height: \"30vw\", width: \"30vw\" }}\n    >\n      {/* // <ListCard\n    //   isDraggable={isDraggable || false}\n    //   listId={listId}\n    //   addItem={addItem}\n    //   deleteItem={deleteItem}\n    // > */}\n      <h4 style={{ margin: \"10px 0px\" }}>{header}</h4>\n      <List>\n        <CardContent>\n          {items && items.length > 0 ? (\n            items.map((item) => {\n              return (\n                <DraggableListItem\n                  key={item._id}\n                  isDraggable\n                  // isDraggable={isDraggable || false}\n                  item={item}\n                >\n                  <ListItemText primary={item.name} />\n                  <ListItemButtons\n                    item={item}\n                    editItem={editItem}\n                    deleteItem={deleteItem}\n                  />\n                </DraggableListItem>\n              );\n            })\n          ) : (\n            <li>No items </li>\n          )}\n        </CardContent>\n      </List>\n      <CardActions>\n        <AddDialog\n          header=\"Add Item\"\n          fields={{ \"Item Name\": \"item\" }}\n          // specialFields={[\n          //   (changeFunction) => {\n          //     return (\n          //       <TextField\n          //         margin=\"dense\"\n          //         key=\"Description\"\n          //         id=\"details\"\n          //         label=\"Description\"\n          //         fullWidth\n          //         multiline\n          //         required\n          //         type=\"text\"\n          //         onChange={changeFunction}\n          //       />\n          //     );\n          //   },\n          // ]}\n          addFunction={addItem}\n          body={{ listId: listId }}\n        />\n      </CardActions>\n      {/* </ListCard> */}\n    </Card>\n  );\n};\n\nexport { DraggableList };\n"]},"metadata":{},"sourceType":"module"}