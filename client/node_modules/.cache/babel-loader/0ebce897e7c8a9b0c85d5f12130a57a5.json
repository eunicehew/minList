{"ast":null,"code":"import { userService } from \"../../../services/UserService\";\nimport { history } from \"../../../app/history\"; // import { login } from \"./Login\";\n//Actions\n\nconst REGISTER_REQUEST = \"components/Home/REGISTER_REQUEST\";\nconst REGISTER_SUCCESS = \"components/Home/REGISTER_SUCCESS\";\nconst REGISTER_FAILURE = \"components/Home/REGISTER_FAILURE\"; //Reducer\n\nexport default function registerReducer(state = {}, action) {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return Object.assign({}, state, {\n        registering: true\n      });\n\n    case REGISTER_SUCCESS:\n      return Object.assign({}, state, {\n        registered: true\n      });\n\n    case REGISTER_FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction login(username, password) {\n  console.log(\"login function\");\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.login(username, password).then(user => {\n      console.log(user);\n      dispatch(success(user));\n      history.push(\"/todo\");\n    }, error => {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n} //Action Creators\n\n\nexport function register(username, password) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.register(username, password).then(user => {\n      dispatch(success(user));\n      dispatch(login(username, password)); //login\n      //history.push(\"/todo\");\n      // dispatch(alertActions.success(\"Registration successful\"));\n    }, error => {\n      console.log(\"error\");\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: REGISTER_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/home/ducks/Register.js"],"names":["userService","history","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","registerReducer","state","action","type","Object","assign","registering","registered","error","login","username","password","console","log","dispatch","request","then","user","success","push","failure","toString","register"],"mappings":"AAAA,SAASA,WAAT,QAA4B,+BAA5B;AACA,SAASC,OAAT,QAAwB,sBAAxB,C,CACA;AAEA;;AACA,MAAMC,gBAAgB,GAAG,kCAAzB;AACA,MAAMC,gBAAgB,GAAG,kCAAzB;AACA,MAAMC,gBAAgB,GAAG,kCAAzB,C,CAEA;;AACA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAG,EAAjC,EAAqCC,MAArC,EAA6C;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,gBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BK,QAAAA,WAAW,EAAE;AADiB,OAAzB,CAAP;;AAGF,SAAKR,gBAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BM,QAAAA,UAAU,EAAE;AADkB,OAAzB,CAAP;;AAGF,SAAKR,gBAAL;AACE,aAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BO,QAAAA,KAAK,EAAE;AADuB,OAAzB,CAAP;;AAGF;AACE,aAAOP,KAAP;AAdJ;AAgBD;;AAED,SAASQ,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAAEL,MAAAA;AAAF,KAAD,CAAR,CAAR;AACAf,IAAAA,WAAW,CAACc,KAAZ,CAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCK,IAAtC,CACGC,IAAD,IAAU;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAH,MAAAA,QAAQ,CAACI,OAAO,CAACD,IAAD,CAAR,CAAR;AACArB,MAAAA,OAAO,CAACuB,IAAR,CAAa,OAAb;AACD,KALH,EAMGX,KAAD,IAAW;AACTM,MAAAA,QAAQ,CAACM,OAAO,CAACZ,KAAK,CAACa,QAAN,EAAD,CAAR,CAAR,CADS,CAET;AACD,KATH;AAWD,GAbD;AAcD,C,CACD;;;AACA,OAAO,SAASC,QAAT,CAAkBZ,QAAlB,EAA4BC,QAA5B,EAAsC;AAC3C,SAAQG,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAAEL,MAAAA;AAAF,KAAD,CAAR,CAAR;AAEAf,IAAAA,WAAW,CAAC2B,QAAZ,CAAqBZ,QAArB,EAA+BC,QAA/B,EAAyCK,IAAzC,CACGC,IAAD,IAAU;AACRH,MAAAA,QAAQ,CAACI,OAAO,CAACD,IAAD,CAAR,CAAR;AACAH,MAAAA,QAAQ,CAACL,KAAK,CAACC,QAAD,EAAWC,QAAX,CAAN,CAAR,CAFQ,CAIR;AACA;AACA;AACD,KARH,EASGH,KAAD,IAAW;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,MAAAA,QAAQ,CAACM,OAAO,CAACZ,KAAK,CAACa,QAAN,EAAD,CAAR,CAAR,CAFS,CAGT;AACD,KAbH;AAeD,GAlBD;;AAoBA,WAASN,OAAT,CAAiBE,IAAjB,EAAuB;AACrB,WAAO;AAAEd,MAAAA,IAAI,EAAEN,gBAAR;AAA0BoB,MAAAA;AAA1B,KAAP;AACD;;AACD,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AACrB,WAAO;AAAEd,MAAAA,IAAI,EAAEL,gBAAR;AAA0BmB,MAAAA;AAA1B,KAAP;AACD;;AACD,WAASG,OAAT,CAAiBZ,KAAjB,EAAwB;AACtB,WAAO;AAAEL,MAAAA,IAAI,EAAEJ,gBAAR;AAA0BS,MAAAA;AAA1B,KAAP;AACD;AACF","sourcesContent":["import { userService } from \"../../../services/UserService\";\nimport { history } from \"../../../app/history\";\n// import { login } from \"./Login\";\n\n//Actions\nconst REGISTER_REQUEST = \"components/Home/REGISTER_REQUEST\";\nconst REGISTER_SUCCESS = \"components/Home/REGISTER_SUCCESS\";\nconst REGISTER_FAILURE = \"components/Home/REGISTER_FAILURE\";\n\n//Reducer\nexport default function registerReducer(state = {}, action) {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return Object.assign({}, state, {\n        registering: true,\n      });\n    case REGISTER_SUCCESS:\n      return Object.assign({}, state, {\n        registered: true,\n      });\n    case REGISTER_FAILURE:\n      return Object.assign({}, state, {\n        error: true,\n      });\n    default:\n      return state;\n  }\n}\n\nfunction login(username, password) {\n  console.log(\"login function\");\n  return (dispatch) => {\n    dispatch(request({ username }));\n    userService.login(username, password).then(\n      (user) => {\n        console.log(user);\n        dispatch(success(user));\n        history.push(\"/todo\");\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        // dispatch(alertActions.error(error.toString()));\n      }\n    );\n  };\n}\n//Action Creators\nexport function register(username, password) {\n  return (dispatch) => {\n    dispatch(request({ username }));\n\n    userService.register(username, password).then(\n      (user) => {\n        dispatch(success(user));\n        dispatch(login(username, password));\n\n        //login\n        //history.push(\"/todo\");\n        // dispatch(alertActions.success(\"Registration successful\"));\n      },\n      (error) => {\n        console.log(\"error\");\n        dispatch(failure(error.toString()));\n        // dispatch(alertActions.error(error.toString()));\n      }\n    );\n  };\n\n  function request(user) {\n    return { type: REGISTER_REQUEST, user };\n  }\n  function success(user) {\n    return { type: REGISTER_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: REGISTER_FAILURE, error };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}