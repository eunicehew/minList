{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/home/Login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport Form from \"../common/Form\";\nimport * as actions from \"./ducks/Login\";\nconst loginContent = [{\n  id: \"0\",\n  icon: /*#__PURE__*/React.createElement(AccountCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }),\n  text: /*#__PURE__*/React.createElement(TextField, {\n    id: \"loginUsername\",\n    label: \"Username\",\n    onChange: this.handleChange,\n    error: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  })\n}, {\n  id: \"1\",\n  icon: /*#__PURE__*/React.createElement(HttpsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }),\n  text: /*#__PURE__*/React.createElement(TextField, {\n    id: \"loginPassword\",\n    label: \"Password\",\n    type: \"password\",\n    onChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  })\n}];\n\nconst LoginButton = () => /*#__PURE__*/React.createElement(Button, {\n  variant: \"contained\",\n  type: \"submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }\n}, \"Login\");\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.label]: e.target.value\n      });\n    };\n\n    this.handleLogin = () => {\n      //check inputs\n      if (this.state.username && this.state.password) {\n        this.props.login;\n      } //return logged in state (which should trigger hoc redirect if logged in)\n\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      title: \"Login\",\n      formContent: loginContent,\n      submit: this.handleLogin,\n      button: /*#__PURE__*/React.createElement(LoginButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.todoState);\n  return {\n    todos: state.todoState\n  };\n};\n\nconst mapDispatchToProps = {\n  login: actions.login\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/home/Login.js"],"names":["React","Component","connect","Button","TextField","AccountCircle","HttpsIcon","Form","actions","loginContent","id","icon","text","handleChange","LoginButton","Login","constructor","props","e","setState","target","label","value","handleLogin","state","username","password","login","render","mapStateToProps","console","log","todoState","todos","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport Form from \"../common/Form\";\nimport * as actions from \"./ducks/Login\";\n\nconst loginContent = [\n  {\n    id: \"0\",\n    icon: <AccountCircle />,\n    text: (\n      <TextField\n        id=\"loginUsername\"\n        label=\"Username\"\n        onChange={this.handleChange}\n        error={false}\n      />\n    ),\n  },\n  {\n    id: \"1\",\n    icon: <HttpsIcon />,\n    text: (\n      <TextField\n        id=\"loginPassword\"\n        label=\"Password\"\n        type=\"password\"\n        onChange={this.handleChange}\n      />\n    ),\n  },\n];\n\nconst LoginButton = () => (\n  <Button variant=\"contained\" type=\"submit\">\n    Login\n  </Button>\n);\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.label]: e.target.value });\n  };\n\n  handleLogin = () => {\n    //check inputs\n    if (this.state.username && this.state.password) {\n      this.props.login;\n    }\n    //return logged in state (which should trigger hoc redirect if logged in)\n  };\n  render() {\n    return (\n      <Form\n        title=\"Login\"\n        formContent={loginContent}\n        submit={this.handleLogin}\n        button={<LoginButton />}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state.todoState);\n  return {\n    todos: state.todoState,\n  };\n};\n\nconst mapDispatchToProps = {\n  login: actions.login,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}