{"ast":null,"code":"import { userService } from \"../services/UserService\";\nimport { login } from \"./Login\";\nimport { successAlert, errorAlert } from \"./Alert\"; //Actions\n\nconst REGISTER_REQUEST = \"components/Home/REGISTER_REQUEST\";\nconst REGISTER_SUCCESS = \"components/Home/REGISTER_SUCCESS\";\nconst REGISTER_FAILURE = \"components/Home/REGISTER_FAILURE\"; //Reducer\n\nexport default function registerReducer(state = {}, action) {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return Object.assign({}, state, {\n        registering: true\n      });\n\n    case REGISTER_SUCCESS:\n      return Object.assign({}, state, {\n        registered: true\n      });\n\n    case REGISTER_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nexport function register(username, password) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.register(username, password).then(user => {\n      dispatch(success(user));\n      dispatch(login(username, password));\n      dispatch(successAlert(\"Registration successful\"));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: REGISTER_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/redux/Register.js"],"names":["userService","login","successAlert","errorAlert","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","registerReducer","state","action","type","Object","assign","registering","registered","error","register","username","password","dispatch","request","then","user","success","failure","toString"],"mappings":"AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,SAAzC,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,kCAAzB;AACA,MAAMC,gBAAgB,GAAG,kCAAzB;AACA,MAAMC,gBAAgB,GAAG,kCAAzB,C,CAEA;;AACA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAG,EAAjC,EAAqCC,MAArC,EAA6C;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,gBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BK,QAAAA,WAAW,EAAE;AADiB,OAAzB,CAAP;;AAGF,SAAKR,gBAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BM,QAAAA,UAAU,EAAE;AADkB,OAAzB,CAAP;;AAGF,SAAKR,gBAAL;AACE,aAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BO,QAAAA,KAAK,EAAEN,MAAM,CAACM;AADgB,OAAzB,CAAP;;AAGF;AACE,aAAOP,KAAP;AAdJ;AAgBD,C,CAED;;AACA,OAAO,SAASQ,QAAT,CAAkBC,QAAlB,EAA4BC,QAA5B,EAAsC;AAC3C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAAEH,MAAAA;AAAF,KAAD,CAAR,CAAR;AACAjB,IAAAA,WAAW,CAACgB,QAAZ,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyCG,IAAzC,CACGC,IAAD,IAAU;AACRH,MAAAA,QAAQ,CAACI,OAAO,CAACD,IAAD,CAAR,CAAR;AACAH,MAAAA,QAAQ,CAAClB,KAAK,CAACgB,QAAD,EAAWC,QAAX,CAAN,CAAR;AACAC,MAAAA,QAAQ,CAACjB,YAAY,CAAC,yBAAD,CAAb,CAAR;AACD,KALH,EAMGa,KAAD,IAAW;AACTI,MAAAA,QAAQ,CAACK,OAAO,CAACT,KAAK,CAACU,QAAN,EAAD,CAAR,CAAR;AACAN,MAAAA,QAAQ,CAAChB,UAAU,CAACY,KAAK,CAACU,QAAN,EAAD,CAAX,CAAR;AACD,KATH;AAWD,GAbD;;AAeA,WAASL,OAAT,CAAiBE,IAAjB,EAAuB;AACrB,WAAO;AAAEZ,MAAAA,IAAI,EAAEN,gBAAR;AAA0BkB,MAAAA;AAA1B,KAAP;AACD;;AACD,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AACrB,WAAO;AAAEZ,MAAAA,IAAI,EAAEL,gBAAR;AAA0BiB,MAAAA;AAA1B,KAAP;AACD;;AACD,WAASE,OAAT,CAAiBT,KAAjB,EAAwB;AACtB,WAAO;AAAEL,MAAAA,IAAI,EAAEJ,gBAAR;AAA0BS,MAAAA;AAA1B,KAAP;AACD;AACF","sourcesContent":["import { userService } from \"../services/UserService\";\nimport { login } from \"./Login\";\nimport { successAlert, errorAlert } from \"./Alert\";\n\n//Actions\nconst REGISTER_REQUEST = \"components/Home/REGISTER_REQUEST\";\nconst REGISTER_SUCCESS = \"components/Home/REGISTER_SUCCESS\";\nconst REGISTER_FAILURE = \"components/Home/REGISTER_FAILURE\";\n\n//Reducer\nexport default function registerReducer(state = {}, action) {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return Object.assign({}, state, {\n        registering: true,\n      });\n    case REGISTER_SUCCESS:\n      return Object.assign({}, state, {\n        registered: true,\n      });\n    case REGISTER_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n      });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nexport function register(username, password) {\n  return (dispatch) => {\n    dispatch(request({ username }));\n    userService.register(username, password).then(\n      (user) => {\n        dispatch(success(user));\n        dispatch(login(username, password));\n        dispatch(successAlert(\"Registration successful\"));\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n\n  function request(user) {\n    return { type: REGISTER_REQUEST, user };\n  }\n  function success(user) {\n    return { type: REGISTER_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: REGISTER_FAILURE, error };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}