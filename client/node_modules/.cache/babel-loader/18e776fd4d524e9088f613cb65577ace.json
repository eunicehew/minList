{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/app/App.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Page from \"../components/common/Page\";\nimport { NavBar } from \"../components/navBar\";\nimport { Home } from \"../components/home\"; // const PrivateRoute = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={(props) =>\n//         // change this to look at redux?\n//         localStorage.getItem(\"user\") ? (\n//           <Component {...props} />\n//         ) : (\n//           <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n//         )\n//       }\n//     />\n//   );\n// };\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\nconst PrivateRoute = ({\n  component,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => localStorage.getItem(\"user\") ? renderMergedProps(component, props, rest) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n};\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Page,\n      pageType: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), this.props.pages ? this.props.pages.map(page => {\n      return /*#__PURE__*/React.createElement(PrivateRoute, {\n        exact: true,\n        key: page._id,\n        path: `/${page.name}`,\n        component: Page,\n        pageId: page._id,\n        pageType: \"List\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      });\n    }) : null, /*#__PURE__*/React.createElement(Redirect, {\n      from: \"*\",\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.pageState);\n  return {\n    user: state.loginState.user,\n    pages: state.pageState.pages,\n    error: state.pageState.error\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/app/App.js"],"names":["React","Component","connect","BrowserRouter","Route","Switch","Redirect","Page","NavBar","Home","renderMergedProps","component","rest","finalProps","Object","assign","createElement","PrivateRoute","props","localStorage","getItem","pathname","state","from","location","App","render","display","pages","map","page","_id","name","mapStateToProps","console","log","pageState","user","loginState","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Page from \"../components/common/Page\";\r\nimport { NavBar } from \"../components/navBar\";\r\nimport { Home } from \"../components/home\";\r\n\r\n// const PrivateRoute = ({ component: Component, ...rest }) => {\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={(props) =>\r\n//         // change this to look at redux?\r\n//         localStorage.getItem(\"user\") ? (\r\n//           <Component {...props} />\r\n//         ) : (\r\n//           <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return React.createElement(component, finalProps);\r\n};\r\n\r\nconst PrivateRoute = ({ component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem(\"user\") ? (\r\n          renderMergedProps(component, props, rest)\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\" style={{ display: \"flex\" }}>\r\n        <BrowserRouter>\r\n          <NavBar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Page} pageType={\"Home\"} />\r\n            {this.props.pages\r\n              ? this.props.pages.map((page) => {\r\n                  return (\r\n                    <PrivateRoute\r\n                      exact\r\n                      key={page._id}\r\n                      path={`/${page.name}`}\r\n                      component={Page}\r\n                      pageId={page._id}\r\n                      pageType={\"List\"}\r\n                    />\r\n                  );\r\n                })\r\n              : null}\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state.pageState);\r\n  return {\r\n    user: state.loginState.user,\r\n    pages: state.pageState.pages,\r\n    error: state.pageState.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}