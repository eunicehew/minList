{"ast":null,"code":"//Actions\nconst REGISTER_REQUEST = \"components/Home/REGISTER_REQUEST\";\nconst REGISTER_SUCCESS = \"components/Home/REGISTER_SUCCESS\";\nconst REGISTER_FAILURE = \"components/Home/REGISTER_FAILURE\"; //Reducer\n\nexport function registerReducer(state = {}, action) {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return Object.assign({}, state, {\n        registering: true\n      });\n\n    case REGISTER_SUCCESS:\n      return Object.assign({}, state, {\n        registered: true,\n        user: action.user\n      });\n\n    case REGISTER_FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nexport function register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success());\n      history.push(\"/\"); // dispatch(alertActions.success(\"Registration successful\"));\n    }, error => {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: REGISTER_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/home/ducks/Register.js"],"names":["REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","registerReducer","state","action","type","Object","assign","registering","registered","user","error","register","dispatch","request","userService","then","success","history","push","failure","toString"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAG,kCAAzB;AACA,MAAMC,gBAAgB,GAAG,kCAAzB;AACA,MAAMC,gBAAgB,GAAG,kCAAzB,C,CAEA;;AACA,OAAO,SAASC,eAAT,CAAyBC,KAAK,GAAG,EAAjC,EAAqCC,MAArC,EAA6C;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,gBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BK,QAAAA,WAAW,EAAE;AADiB,OAAzB,CAAP;;AAGF,SAAKR,gBAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BM,QAAAA,UAAU,EAAE,IADkB;AAE9BC,QAAAA,IAAI,EAAEN,MAAM,CAACM;AAFiB,OAAzB,CAAP;;AAIF,SAAKT,gBAAL;AACE,aAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BQ,QAAAA,KAAK,EAAE;AADuB,OAAzB,CAAP;;AAGF;AACE,aAAOR,KAAP;AAfJ;AAiBD,C,CAED;;AACA,OAAO,SAASS,QAAT,CAAkBF,IAAlB,EAAwB;AAC7B,SAAQG,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,OAAO,CAACJ,IAAD,CAAR,CAAR;AAEAK,IAAAA,WAAW,CAACH,QAAZ,CAAqBF,IAArB,EAA2BM,IAA3B,CACGN,IAAD,IAAU;AACRG,MAAAA,QAAQ,CAACI,OAAO,EAAR,CAAR;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,GAAb,EAFQ,CAGR;AACD,KALH,EAMGR,KAAD,IAAW;AACTE,MAAAA,QAAQ,CAACO,OAAO,CAACT,KAAK,CAACU,QAAN,EAAD,CAAR,CAAR,CADS,CAET;AACD,KATH;AAWD,GAdD;;AAgBA,WAASP,OAAT,CAAiBJ,IAAjB,EAAuB;AACrB,WAAO;AAAEL,MAAAA,IAAI,EAAEN,gBAAR;AAA0BW,MAAAA;AAA1B,KAAP;AACD;;AACD,WAASO,OAAT,CAAiBP,IAAjB,EAAuB;AACrB,WAAO;AAAEL,MAAAA,IAAI,EAAEL,gBAAR;AAA0BU,MAAAA;AAA1B,KAAP;AACD;;AACD,WAASU,OAAT,CAAiBT,KAAjB,EAAwB;AACtB,WAAO;AAAEN,MAAAA,IAAI,EAAEJ,gBAAR;AAA0BU,MAAAA;AAA1B,KAAP;AACD;AACF","sourcesContent":["//Actions\nconst REGISTER_REQUEST = \"components/Home/REGISTER_REQUEST\";\nconst REGISTER_SUCCESS = \"components/Home/REGISTER_SUCCESS\";\nconst REGISTER_FAILURE = \"components/Home/REGISTER_FAILURE\";\n\n//Reducer\nexport function registerReducer(state = {}, action) {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return Object.assign({}, state, {\n        registering: true,\n      });\n    case REGISTER_SUCCESS:\n      return Object.assign({}, state, {\n        registered: true,\n        user: action.user,\n      });\n    case REGISTER_FAILURE:\n      return Object.assign({}, state, {\n        error: true,\n      });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nexport function register(user) {\n  return (dispatch) => {\n    dispatch(request(user));\n\n    userService.register(user).then(\n      (user) => {\n        dispatch(success());\n        history.push(\"/\");\n        // dispatch(alertActions.success(\"Registration successful\"));\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        // dispatch(alertActions.error(error.toString()));\n      }\n    );\n  };\n\n  function request(user) {\n    return { type: REGISTER_REQUEST, user };\n  }\n  function success(user) {\n    return { type: REGISTER_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: REGISTER_FAILURE, error };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}