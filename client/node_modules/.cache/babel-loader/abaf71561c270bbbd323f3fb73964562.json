{"ast":null,"code":"import { pageService } from \"../services/PageService\";\nimport { getLists } from \"./List\";\nimport { successAlert, errorAlert } from \"./Alert\"; //Actions\n\nconst SHEET_REQUEST = \"components/common/SHEET_REQUEST\";\nconst SHEET_INITIAL_SUCCESS = \"components/common/SHEET_INITIAL_SUCCESS\";\nconst SHEET_CHANGE_SUCCESS = \"components/common/SHEET_CHANGE_SUCCESS\";\nconst SHEET_SUCCESS = \"components/common/SHEET_SUCCESS\";\nconst SHEET_FAILURE = \"components/common/SHEET_FAILURE\";\nconst initialState = {\n  sheets: [],\n  loading: false\n}; //Reducer\n\nexport default function sheetReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHEET_REQUEST:\n      return Object.assign({}, state, {\n        loading: true\n      });\n\n    case SHEET_INITIAL_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: action.sheets[0],\n        sheets: action.sheets,\n        loading: false\n      });\n\n    case SHEET_CHANGE_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: action.sheet,\n        loading: false\n      });\n\n    case SHEET_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: state.activeSheet || action.sheets[0],\n        sheets: action.sheets,\n        loading: false\n      });\n\n    case SHEET_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nfunction failure(error) {\n  return {\n    type: SHEET_FAILURE,\n    error\n  };\n}\n\nexport function getSheets(pageId) {\n  return dispatch => {\n    dispatch({\n      type: SHEET_REQUEST\n    });\n    pageService.getSheets(pageId).then(sheets => {\n      dispatch({\n        type: SHEET_INITIAL_SUCCESS,\n        sheets\n      }); // console.log(sheets);\n\n      if (sheets && sheets.length > 0) {\n        // console.log(sheets[0]._id);\n        dispatch(getLists(sheets[0]._id));\n      }\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\nexport function changeSheet(body) {\n  return dispatch => {\n    dispatch({\n      type: SHEET_REQUEST\n    });\n\n    if (body.activeSheet === undefined && body.sheet._id !== body.sheets[0]._id || body.activeSheet && body.sheet._id !== body.activeSheet._id) {\n      dispatch({\n        type: SHEET_CHANGE_SUCCESS,\n        sheet: body.sheet\n      });\n      dispatch(getLists(body.sheet._id));\n    }\n  };\n}\n\nfunction _getSheets(pageId) {\n  return dispatch => {\n    pageService.getSheets(pageId).then(sheets => {\n      // console.log(sheets);\n      dispatch({\n        type: SHEET_SUCCESS,\n        sheets\n      });\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\n\nfunction _handleAction(apiCall, body, action) {\n  return dispatch => {\n    dispatch({\n      type: SHEET_REQUEST\n    });\n    apiCall(body).then(sheets => {\n      dispatch(successAlert(\"Successfully \" + action + \" sheet\"));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    }).then(() => {\n      action === \"added\" ? dispatch(getSheets(body.pageId)) : dispatch(_getSheets(body.pageId));\n    });\n  };\n}\n\nexport function addSheet(body) {\n  return _handleAction(pageService.createSheet, body, \"added\");\n}\nexport function deleteSheet(body) {\n  return _handleAction(pageService.deleteSheet, body, \"deleted\");\n}\nexport function editSheet(body) {\n  return _handleAction(pageService.update, body, \"updated\");\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/minlist/client/src/redux/Sheet.js"],"names":["pageService","getLists","successAlert","errorAlert","SHEET_REQUEST","SHEET_INITIAL_SUCCESS","SHEET_CHANGE_SUCCESS","SHEET_SUCCESS","SHEET_FAILURE","initialState","sheets","loading","sheetReducer","state","action","type","Object","assign","activeSheet","sheet","error","failure","getSheets","pageId","dispatch","then","length","_id","toString","changeSheet","body","undefined","_getSheets","_handleAction","apiCall","addSheet","createSheet","deleteSheet","editSheet","update"],"mappings":"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","sourcesContent":["import { pageService } from \"../services/PageService\";\nimport { getLists } from \"./List\";\nimport { successAlert, errorAlert } from \"./Alert\";\n\n//Actions\nconst SHEET_REQUEST = \"components/common/SHEET_REQUEST\";\nconst SHEET_INITIAL_SUCCESS = \"components/common/SHEET_INITIAL_SUCCESS\";\nconst SHEET_CHANGE_SUCCESS = \"components/common/SHEET_CHANGE_SUCCESS\";\nconst SHEET_SUCCESS = \"components/common/SHEET_SUCCESS\";\nconst SHEET_FAILURE = \"components/common/SHEET_FAILURE\";\n\nconst initialState = { sheets: [], loading: false };\n\n//Reducer\nexport default function sheetReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHEET_REQUEST:\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    case SHEET_INITIAL_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: action.sheets[0],\n        sheets: action.sheets,\n        loading: false,\n      });\n    case SHEET_CHANGE_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: action.sheet,\n        loading: false,\n      });\n    case SHEET_SUCCESS:\n      return Object.assign({}, state, {\n        activeSheet: state.activeSheet || action.sheets[0],\n        sheets: action.sheets,\n        loading: false,\n      });\n    case SHEET_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false,\n      });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nfunction failure(error) {\n  return { type: SHEET_FAILURE, error };\n}\n\nexport function getSheets(pageId) {\n  return (dispatch) => {\n    dispatch({ type: SHEET_REQUEST });\n    pageService.getSheets(pageId).then(\n      (sheets) => {\n        dispatch({ type: SHEET_INITIAL_SUCCESS, sheets });\n        // console.log(sheets);\n        if (sheets && sheets.length > 0) {\n          // console.log(sheets[0]._id);\n          dispatch(getLists(sheets[0]._id));\n        }\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nexport function changeSheet(body) {\n  return (dispatch) => {\n    dispatch({ type: SHEET_REQUEST });\n    if (\n      (body.activeSheet === undefined &&\n        body.sheet._id !== body.sheets[0]._id) ||\n      (body.activeSheet && body.sheet._id !== body.activeSheet._id)\n    ) {\n      dispatch({ type: SHEET_CHANGE_SUCCESS, sheet: body.sheet });\n      dispatch(getLists(body.sheet._id));\n    }\n  };\n}\n\nfunction _getSheets(pageId) {\n  return (dispatch) => {\n    pageService.getSheets(pageId).then(\n      (sheets) => {\n        // console.log(sheets);\n        dispatch({ type: SHEET_SUCCESS, sheets });\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nfunction _handleAction(apiCall, body, action) {\n  return (dispatch) => {\n    dispatch({ type: SHEET_REQUEST });\n    apiCall(body).then(\n      (sheets) => {\n        dispatch(successAlert(\"Successfully \" + action + \" sheet\"));\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    ).then(()=>        \n    {action === \"added\" ? dispatch(getSheets(body.pageId)) : dispatch(_getSheets(body.pageId))}\n    )\n  };\n}\n\nexport function addSheet(body) {\n  return _handleAction(pageService.createSheet, body, \"added\");\n}\nexport function deleteSheet(body) {\n  return _handleAction(pageService.deleteSheet, body, \"deleted\");\n}\nexport function editSheet(body) {\n  return _handleAction(pageService.update, body, \"updated\");\n}\n"]},"metadata":{},"sourceType":"module"}