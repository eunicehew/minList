{"ast":null,"code":"import { itemService } from \"../services/ItemService\";\nimport { getLists } from \"./List\";\nimport { successAlert, errorAlert } from \"./Alert\"; //Actions\n\nconst ITEM_REQUEST = \"components/common/ITEM_REQUEST\";\nconst ITEM_SUCCESS = \"components/common/ITEM_SUCCESS\";\nconst ITEM_FAILURE = \"components/common/ITEM_FAILURE\";\nconst initialState = {\n  items: [],\n  loading: false,\n  listIDLoading: \"\"\n}; //Reducer\n\nexport default function itemReducer(state = initialState, action) {\n  switch (action.type) {\n    case ITEM_REQUEST:\n      return Object.assign({}, state, {\n        loading: true,\n        listIDLoading: action.listID\n      });\n\n    case ITEM_SUCCESS:\n      return Object.assign({}, state, {\n        items: action.items,\n        loading: false,\n        listIDLoading: \"\"\n      });\n\n    case ITEM_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false,\n        listIDLoading: \"\"\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nfunction failure(error) {\n  return {\n    type: ITEM_FAILURE,\n    error\n  };\n}\n\nexport function getItems(listId) {\n  return dispatch => {\n    dispatch({\n      type: ITEM_REQUEST\n    });\n    itemService.getItems(listId).then(items => {\n      dispatch({\n        type: ITEM_SUCCESS,\n        items\n      });\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\nexport function moveItem(body, sheetId) {\n  console.log(body);\n  return dispatch => {\n    itemService.moveItem(body).then(() => {\n      dispatch(getLists(sheetId));\n      dispatch(successAlert(\"Successfully moved item\"));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\n\nfunction _handleAction(apiCall, body, action) {\n  return dispatch => {\n    dispatch({\n      type: ITEM_REQUEST\n    });\n    apiCall(body).then(items => {\n      // console.log(items);\n      dispatch(successAlert(\"Successfully\" + action + \"item\"));\n      dispatch(getLists(body.sheetId));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(errorAlert(error.toString()));\n    });\n  };\n}\n\nexport function addItem(body) {\n  return _handleAction(itemService.create, body, \"added\");\n}\nexport function deleteItem(body) {\n  return _handleAction(itemService.deleteItem, body, \"deleted\");\n}\nexport function editItem(body) {\n  return _handleAction(itemService.update, body, \"updated\");\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/redux/Item.js"],"names":["itemService","getLists","successAlert","errorAlert","ITEM_REQUEST","ITEM_SUCCESS","ITEM_FAILURE","initialState","items","loading","listIDLoading","itemReducer","state","action","type","Object","assign","listID","error","failure","getItems","listId","dispatch","then","toString","moveItem","body","sheetId","console","log","_handleAction","apiCall","addItem","create","deleteItem","editItem","update"],"mappings":"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","sourcesContent":["import { itemService } from \"../services/ItemService\";\nimport { getLists } from \"./List\";\nimport { successAlert, errorAlert } from \"./Alert\";\n\n//Actions\nconst ITEM_REQUEST = \"components/common/ITEM_REQUEST\";\nconst ITEM_SUCCESS = \"components/common/ITEM_SUCCESS\";\nconst ITEM_FAILURE = \"components/common/ITEM_FAILURE\";\n\nconst initialState = { items: [], loading: false, listIDLoading: \"\" };\n\n//Reducer\nexport default function itemReducer(state = initialState, action) {\n  switch (action.type) {\n    case ITEM_REQUEST:\n      return Object.assign({}, state, {\n        loading: true,\n        listIDLoading: action.listID,\n      });\n    case ITEM_SUCCESS:\n      return Object.assign({}, state, {\n        items: action.items,\n        loading: false,\n        listIDLoading: \"\",\n      });\n    case ITEM_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false,\n        listIDLoading: \"\",\n      });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nfunction failure(error) {\n  return { type: ITEM_FAILURE, error };\n}\n\nexport function getItems(listId) {\n  return (dispatch) => {\n    dispatch({ type: ITEM_REQUEST });\n    itemService.getItems(listId).then(\n      (items) => {\n        dispatch({ type: ITEM_SUCCESS, items });\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nexport function moveItem(body, sheetId) {\n  console.log(body);\n  return (dispatch) => {\n    itemService.moveItem(body).then(\n      () => {\n        dispatch(getLists(sheetId));\n        dispatch(successAlert(\"Successfully moved item\"));\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nfunction _handleAction(apiCall, body, action) {\n  return (dispatch) => {\n    dispatch({ type: ITEM_REQUEST });\n    apiCall(body).then(\n      (items) => {\n        // console.log(items);\n        dispatch(successAlert(\"Successfully\" + action + \"item\"));\n        dispatch(getLists(body.sheetId));\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(errorAlert(error.toString()));\n      }\n    );\n  };\n}\n\nexport function addItem(body) {\n  return _handleAction(itemService.create, body, \"added\");\n}\nexport function deleteItem(body) {\n  return _handleAction(itemService.deleteItem, body, \"deleted\");\n}\nexport function editItem(body) {\n  return _handleAction(itemService.update, body, \"updated\");\n}\n"]},"metadata":{},"sourceType":"module"}