{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/common/List/ListItems.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst DraggableListItem = ({\n  item,\n  listId,\n  sheetId,\n  deleteItem\n}) => {\n  const onMouseOver = event => {\n    event.currentTarget.style.cursor = \"grab\";\n  };\n\n  const onDragStart = (event, item) => {\n    event.currentTarget.style.border = \"dashed\";\n    event.dataTransfer.setData(\"item\", item);\n    event.dataTransfer.effectAllowed = \"move\"; // event.currentTarget.style.cursor = \"grabbing\";\n  };\n\n  const onDragEnd = event => {\n    event.currentTarget.style.border = \"\";\n    event.currentTarget.style.background = \"\"; // event.currentTarget.style.cursor = \"default\";\n  };\n\n  return /*#__PURE__*/React.createElement(ListItem, {\n    draggable: true,\n    onMouseOver: event => onMouseOver(event),\n    onDragStart: event => onDragStart(event, item._id),\n    onDragEnd: event => onDragEnd(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => deleteItem({\n      listId,\n      itemId: item._id,\n      sheetId\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n}; // const ListItemButtons = ({ item, editItem, deleteItem }) => {\n//   const actionTypes = { edit, del };\n//   // const add = (\n//   //   <IconButton edge=\"end\" aria-label=\"add\" onClick={() => addItem(item)}>\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   // const update = (\n//   //   <IconButton\n//   //     edge=\"end\"\n//   //     aria-label=\"update\"\n//   //     onClick={() => updateItemProgress(item)}\n//   //   >\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   const edit = (\n//     <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => editItem(item)}>\n//       <NavigateNextSharpIcon />\n//     </IconButton>\n//   );\n//   const del = (\n//     <IconButton\n//       edge=\"end\"\n//       aria-label=\"delete\"\n//       onClick={() => deleteItem(item._id)}\n//     >\n//       <DeleteIcon />\n//     </IconButton>\n//   );\n//   const ActionMenu = () => {\n//     const [anchorEl, setAnchorEl] = React.useState(null);\n//     const open = Boolean(anchorEl);\n//     const handleClick = (event) => {\n//       setAnchorEl(event.currentTarget);\n//     };\n//     const handleClose = () => {\n//       setAnchorEl(null);\n//     };\n//     return (\n//       <div>\n//         <Button\n//           aria-controls=\"simple-menu\"\n//           aria-haspopup=\"true\"\n//           onClick={handleClick}\n//         >\n//           <MoreVertIcon />\n//         </Button>\n//         <Menu\n//           id=\"simple-menu\"\n//           anchorEl={anchorEl}\n//           keepMounted\n//           open={open}\n//           onClose={handleClose}\n//         >\n//           {actionTypes.map((action) => {\n//             return <MenuItem onClick={handleClose}>{action}</MenuItem> || null;\n//           })}\n//         </Menu>\n//       </div>\n//     );\n//   };\n//   // const ActionInline = (\n//   //   <ListItemSecondaryAction>\n//   //     {actions.map((action) => {\n//   //       return actionTypes[action] || null;\n//   //     })}\n//   //   </ListItemSecondaryAction>\n//   // );\n//   // const ActionDisplay = actions.length > 2 ? <ActionMenu /> : <ActionInline />;\n//   return (\n//     <div>\n//       <Divider orientation=\"vertical\" flexItem />\n//       <ActionMenu />\n//     </div>\n//   );\n// };\n\n\nDraggableListItem.propTypes = {\n  listId: PropTypes.string.isRequired,\n  sheetId: PropTypes.string.isRequired,\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    subItems: PropTypes.array.isRequired\n  }).isRequired,\n  listLoading: PropTypes.bool.isRequired,\n  itemLoading: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  loggedIn: Proptypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n  deleteItem: PropTypes.func.isRequired\n};\nexport { DraggableListItem };","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/common/List/ListItems.js"],"names":["React","PropTypes","DeleteIcon","IconButton","ListItem","ListItemText","Divider","DraggableListItem","item","listId","sheetId","deleteItem","onMouseOver","event","currentTarget","style","cursor","onDragStart","border","dataTransfer","setData","effectAllowed","onDragEnd","background","_id","name","itemId","propTypes","string","isRequired","shape","subItems","array","listLoading","bool","itemLoading","loading","loggedIn","Proptypes","open","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst DraggableListItem = ({ item, listId, sheetId, deleteItem }) => {\n  const onMouseOver = (event) => {\n    event.currentTarget.style.cursor = \"grab\";\n  };\n  const onDragStart = (event, item) => {\n    event.currentTarget.style.border = \"dashed\";\n    event.dataTransfer.setData(\"item\", item);\n    event.dataTransfer.effectAllowed = \"move\";\n    // event.currentTarget.style.cursor = \"grabbing\";\n  };\n\n  const onDragEnd = (event) => {\n    event.currentTarget.style.border = \"\";\n    event.currentTarget.style.background = \"\";\n    // event.currentTarget.style.cursor = \"default\";\n  };\n\n  return (\n    <ListItem\n      draggable\n      onMouseOver={(event) => onMouseOver(event)}\n      onDragStart={(event) => onDragStart(event, item._id)}\n      onDragEnd={(event) => onDragEnd(event)}\n    >\n      <ListItemText primary={item.name} />\n      <Divider orientation=\"vertical\" flexItem />\n      <IconButton\n        edge=\"end\"\n        aria-label=\"delete\"\n        onClick={() => deleteItem({ listId, itemId: item._id, sheetId })}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n\n// const ListItemButtons = ({ item, editItem, deleteItem }) => {\n//   const actionTypes = { edit, del };\n//   // const add = (\n//   //   <IconButton edge=\"end\" aria-label=\"add\" onClick={() => addItem(item)}>\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   // const update = (\n//   //   <IconButton\n//   //     edge=\"end\"\n//   //     aria-label=\"update\"\n//   //     onClick={() => updateItemProgress(item)}\n//   //   >\n//   //     <NavigateNextSharpIcon />\n//   //   </IconButton>\n//   // );\n//   const edit = (\n//     <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => editItem(item)}>\n//       <NavigateNextSharpIcon />\n//     </IconButton>\n//   );\n//   const del = (\n//     <IconButton\n//       edge=\"end\"\n//       aria-label=\"delete\"\n//       onClick={() => deleteItem(item._id)}\n//     >\n//       <DeleteIcon />\n//     </IconButton>\n//   );\n\n//   const ActionMenu = () => {\n//     const [anchorEl, setAnchorEl] = React.useState(null);\n//     const open = Boolean(anchorEl);\n\n//     const handleClick = (event) => {\n//       setAnchorEl(event.currentTarget);\n//     };\n\n//     const handleClose = () => {\n//       setAnchorEl(null);\n//     };\n//     return (\n//       <div>\n//         <Button\n//           aria-controls=\"simple-menu\"\n//           aria-haspopup=\"true\"\n//           onClick={handleClick}\n//         >\n//           <MoreVertIcon />\n//         </Button>\n//         <Menu\n//           id=\"simple-menu\"\n//           anchorEl={anchorEl}\n//           keepMounted\n//           open={open}\n//           onClose={handleClose}\n//         >\n//           {actionTypes.map((action) => {\n//             return <MenuItem onClick={handleClose}>{action}</MenuItem> || null;\n//           })}\n//         </Menu>\n//       </div>\n//     );\n//   };\n\n//   // const ActionInline = (\n//   //   <ListItemSecondaryAction>\n//   //     {actions.map((action) => {\n//   //       return actionTypes[action] || null;\n//   //     })}\n//   //   </ListItemSecondaryAction>\n//   // );\n\n//   // const ActionDisplay = actions.length > 2 ? <ActionMenu /> : <ActionInline />;\n\n//   return (\n//     <div>\n//       <Divider orientation=\"vertical\" flexItem />\n//       <ActionMenu />\n//     </div>\n//   );\n// };\n\nDraggableListItem.propTypes = {\n  listId: PropTypes.string.isRequired,\n  sheetId: PropTypes.string.isRequired,\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    subItems: PropTypes.array.isRequired,\n  }).isRequired,\n  listLoading: PropTypes.bool.isRequired,\n  itemLoading: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  loggedIn: Proptypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n\n  deleteItem: PropTypes.func.isRequired,\n};\n\nexport { DraggableListItem };\n"]},"metadata":{},"sourceType":"module"}