{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/home/Login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport Form from \"../common/Form\";\nconst loginContent = [{\n  id: \"0\",\n  icon: /*#__PURE__*/React.createElement(AccountCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }),\n  text: /*#__PURE__*/React.createElement(TextField, {\n    id: \"loginUsername\",\n    label: \"Username\",\n    onChange: this.handleChange,\n    error: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  })\n}, {\n  id: \"1\",\n  icon: /*#__PURE__*/React.createElement(HttpsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }),\n  text: /*#__PURE__*/React.createElement(TextField, {\n    id: \"loginPassword\",\n    label: \"Password\",\n    type: \"password\",\n    onChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  })\n}];\n\nconst LoginButton = submit => /*#__PURE__*/React.createElement(Button, {\n  variant: \"contained\",\n  type: \"submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, \"Login\");\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginUsername: \"\",\n      loginPassword: \"\"\n    };\n\n    this.handleChange = e => {\n      state[e.target.id] = e.target.value;\n    };\n\n    this.handleLogin = () => {\n      //check inputs\n      if (ptops.state[\"loginUsername\"] !== \"\" && props.state[\"loginPassword\"] !== \"\") {} //check if correct\n      //return logged in state (which should trigger hoc redirect if logged in)\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      title: \"Login\",\n      formContent: loginContent,\n      submit: this.handleLogin,\n      button: /*#__PURE__*/React.createElement(LoginButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.todoState);\n  return {\n    todos: state.todoState\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/home/Login.js"],"names":["React","Component","connect","Button","TextField","AccountCircle","HttpsIcon","Form","loginContent","id","icon","text","handleChange","LoginButton","submit","Login","state","loginUsername","loginPassword","e","target","value","handleLogin","ptops","props","render","mapStateToProps","console","log","todoState","todos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,eAAE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AAGEC,EAAAA,IAAI,eACF,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,QAAQ,EAAE,KAAKC,YAHjB;AAIE,IAAA,KAAK,EAAE,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,CADmB,EAanB;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,eAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AAGEC,EAAAA,IAAI,eACF,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,EAAE,KAAKC,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,CAbmB,CAArB;;AA0BA,MAAMC,WAAW,GAAIC,MAAD,iBAClB,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAC,WAAhB;AAA4B,EAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;;AAMA,MAAMC,KAAN,SAAoBd,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5Be,KAD4B,GACpB;AAAEC,MAAAA,aAAa,EAAE,EAAjB;AAAqBC,MAAAA,aAAa,EAAE;AAApC,KADoB;;AAAA,SAG5BN,YAH4B,GAGZO,CAAD,IAAO;AACpBH,MAAAA,KAAK,CAACG,CAAC,CAACC,MAAF,CAASX,EAAV,CAAL,GAAqBU,CAAC,CAACC,MAAF,CAASC,KAA9B;AACD,KAL2B;;AAAA,SAO5BC,WAP4B,GAOd,MAAM;AAClB;AACA,UACEC,KAAK,CAACP,KAAN,CAAY,eAAZ,MAAiC,EAAjC,IACAQ,KAAK,CAACR,KAAN,CAAY,eAAZ,MAAiC,EAFnC,EAGE,CAED,CALD,CAIE;AAEF;;AACD,KAhB2B;AAAA;;AAiB5BS,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,WAAW,EAAEjB,YAFf;AAGE,MAAA,MAAM,EAAE,KAAKc,WAHf;AAIE,MAAA,MAAM,eAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AA1B2B;;AA6B9B,MAAMI,eAAe,GAAIV,KAAD,IAAW;AACjCW,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,SAAlB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEd,KAAK,CAACa;AADR,GAAP;AAGD,CALD;;AAOA,eAAe3B,OAAO,CAACwB,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport Form from \"../common/Form\";\n\nconst loginContent = [\n  {\n    id: \"0\",\n    icon: <AccountCircle />,\n    text: (\n      <TextField\n        id=\"loginUsername\"\n        label=\"Username\"\n        onChange={this.handleChange}\n        error={false}\n      />\n    ),\n  },\n  {\n    id: \"1\",\n    icon: <HttpsIcon />,\n    text: (\n      <TextField\n        id=\"loginPassword\"\n        label=\"Password\"\n        type=\"password\"\n        onChange={this.handleChange}\n      />\n    ),\n  },\n];\nconst LoginButton = (submit) => (\n  <Button variant=\"contained\" type=\"submit\">\n    Login\n  </Button>\n);\n\nclass Login extends Component {\n  state = { loginUsername: \"\", loginPassword: \"\" };\n\n  handleChange = (e) => {\n    state[e.target.id] = e.target.value;\n  };\n\n  handleLogin = () => {\n    //check inputs\n    if (\n      ptops.state[\"loginUsername\"] !== \"\" &&\n      props.state[\"loginPassword\"] !== \"\"\n    ) {\n      //check if correct\n    }\n    //return logged in state (which should trigger hoc redirect if logged in)\n  };\n  render() {\n    return (\n      <Form\n        title=\"Login\"\n        formContent={loginContent}\n        submit={this.handleLogin}\n        button={<LoginButton />}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state.todoState);\n  return {\n    todos: state.todoState,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}