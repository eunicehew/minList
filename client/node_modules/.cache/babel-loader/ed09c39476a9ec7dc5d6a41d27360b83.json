{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/home/Register.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport Form from \"../common/Form\";\nimport { register } from \"../../redux/Register\";\nimport { warningAlert } from \"../../redux/Alert\";\n\nconst registerContent = handleChange => [{\n  id: \"0\",\n  icon: /*#__PURE__*/React.createElement(AccountCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }),\n  text: /*#__PURE__*/React.createElement(TextField, {\n    id: \"registerUsername\",\n    label: \"Username\",\n    onChange: handleChange,\n    error: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  })\n}, {\n  id: \"1\",\n  icon: /*#__PURE__*/React.createElement(HttpsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }),\n  text: /*#__PURE__*/React.createElement(TextField, {\n    id: \"registerPassword\",\n    label: \"Password\",\n    type: \"password\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })\n}, {\n  id: \"2\",\n  icon: /*#__PURE__*/React.createElement(HttpsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }),\n  text: /*#__PURE__*/React.createElement(TextField, {\n    id: \"registerPassword2\",\n    label: \"Reenter Password\",\n    type: \"password\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  })\n}];\n\nconst registerButton = /*#__PURE__*/React.createElement(Button, {\n  variant: \"contained\",\n  type: \"submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }\n}, \"Register\");\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleRegister = e => {\n      e.preventDefault(); //check inputs\n\n      const registerChecks = {\n        \"this.state.registerUsername.length > 3\": \"Please enter username more than 3 characters long\",\n        \"this.state.registerPassword.length > 3\": \"Please enter password more than 3 characters long.\",\n        \"this.state.registerPassword2.length > 3\": \"Please enter password more than 3 characters long.\",\n        \"this.state.registerPassword === this.state.registerPassword2\": \"Passwords do not match.\"\n      };\n      console.log(this.state.registerUsername);\n      console.log(this.state.registerPassword);\n      console.log(this.state.registerPassword2);\n\n      for (let check in registerChecks) {\n        if (check) {\n          this.props.warningAlert(registerChecks[check]);\n          break;\n        }\n      }\n\n      console.log(\"register\");\n      this.props.register(this.state.registerUsername, this.state.registerPassword);\n    };\n\n    this.state = {\n      registerUsername: \"\",\n      registerPassword: \"\",\n      registerPassword2: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      title: \"Register\",\n      formContent: registerContent(this.handleChange),\n      button: registerButton,\n      submit: this.handleRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nRegister.propTypes = {\n  register: PropTypes.func.isRequired,\n  warningAlert: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  register,\n  warningAlert\n};\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/home/Register.js"],"names":["React","Component","PropTypes","connect","Button","TextField","AccountCircle","HttpsIcon","Form","register","warningAlert","registerContent","handleChange","id","icon","text","registerButton","Register","constructor","e","setState","target","value","handleRegister","preventDefault","registerChecks","console","log","state","registerUsername","registerPassword","registerPassword2","check","props","render","propTypes","func","isRequired","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport Form from \"../common/Form\";\nimport { register } from \"../../redux/Register\";\nimport { warningAlert } from \"../../redux/Alert\";\n\nconst registerContent = (handleChange) => [\n  {\n    id: \"0\",\n    icon: <AccountCircle />,\n    text: (\n      <TextField\n        id=\"registerUsername\"\n        label=\"Username\"\n        onChange={handleChange}\n        error={false}\n      />\n    ),\n  },\n  {\n    id: \"1\",\n    icon: <HttpsIcon />,\n    text: (\n      <TextField\n        id=\"registerPassword\"\n        label=\"Password\"\n        type=\"password\"\n        onChange={handleChange}\n      />\n    ),\n  },\n  {\n    id: \"2\",\n    icon: <HttpsIcon />,\n    text: (\n      <TextField\n        id=\"registerPassword2\"\n        label=\"Reenter Password\"\n        type=\"password\"\n        onChange={handleChange}\n      />\n    ),\n  },\n];\nconst registerButton = (\n  <Button variant=\"contained\" type=\"submit\">\n    Register\n  </Button>\n);\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      registerUsername: \"\",\n      registerPassword: \"\",\n      registerPassword2: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleRegister = (e) => {\n    e.preventDefault();\n    //check inputs\n    const registerChecks = {\n      \"this.state.registerUsername.length > 3\":\n        \"Please enter username more than 3 characters long\",\n\n      \"this.state.registerPassword.length > 3\":\n        \"Please enter password more than 3 characters long.\",\n\n      \"this.state.registerPassword2.length > 3\":\n        \"Please enter password more than 3 characters long.\",\n\n      \"this.state.registerPassword === this.state.registerPassword2\":\n        \"Passwords do not match.\",\n    };\n\n    console.log(this.state.registerUsername);\n    console.log(this.state.registerPassword);\n    console.log(this.state.registerPassword2);\n    for (let check in registerChecks) {\n      if (check) {\n        this.props.warningAlert(registerChecks[check]);\n        break;\n      }\n    }\n    console.log(\"register\");\n    this.props.register(\n      this.state.registerUsername,\n      this.state.registerPassword\n    );\n  };\n  render() {\n    return (\n      <Form\n        title=\"Register\"\n        formContent={registerContent(this.handleChange)}\n        button={registerButton}\n        submit={this.handleRegister}\n      />\n    );\n  }\n}\n\nRegister.propTypes = {\n  register: PropTypes.func.isRequired,\n  warningAlert: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  register,\n  warningAlert,\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}