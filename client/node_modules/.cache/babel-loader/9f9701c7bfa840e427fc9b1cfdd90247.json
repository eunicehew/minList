{"ast":null,"code":"import { errorAlert } from \"./redux/Alert\";\nexport function authHeader() {\n  // return authorization header with jwt token\n  let user = localStorage.getItem(\"user\");\n  let token = localStorage.getItem(\"token\");\n\n  if (user && token) {\n    return {\n      Authorization: \"Bearer \" + token\n    };\n  } else {\n    return {};\n  }\n}\nexport function handleResponse(response) {\n  if (response.status !== 200) {\n    if (response.status === 401) {\n      localStorage.clear();\n    }\n\n    errorAlert(\"Bad response: \" + response.status);\n  }\n\n  return response.data;\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/services/ServiceHelpers.js"],"names":["errorAlert","authHeader","user","localStorage","getItem","token","Authorization","handleResponse","response","status","clear","data"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,eAAzB;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B;AACA,MAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AACA,MAAIC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AAEA,MAAIF,IAAI,IAAIG,KAAZ,EAAmB;AACjB,WAAO;AAAEC,MAAAA,aAAa,EAAE,YAAYD;AAA7B,KAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF;AAED,OAAO,SAASE,cAAT,CAAwBC,QAAxB,EAAkC;AACvC,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,QAAID,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BN,MAAAA,YAAY,CAACO,KAAb;AACD;;AACDV,IAAAA,UAAU,CAAC,mBAAmBQ,QAAQ,CAACC,MAA7B,CAAV;AACD;;AACD,SAAOD,QAAQ,CAACG,IAAhB;AACD","sourcesContent":["import {errorAlert} from \"./redux/Alert\"\n\nexport function authHeader() {\n  // return authorization header with jwt token\n  let user = localStorage.getItem(\"user\");\n  let token = localStorage.getItem(\"token\");\n\n  if (user && token) {\n    return { Authorization: \"Bearer \" + token };\n  } else {\n    return {};\n  }\n}\n\nexport function handleResponse(response) {\n  if (response.status !== 200) {\n    if (response.status === 401) {\n      localStorage.clear()\n    }\n    errorAlert(\"Bad response: \" + response.status )\n  }\n  return response.data;\n}"]},"metadata":{},"sourceType":"module"}