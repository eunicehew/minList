{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/common/Dialog.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nconst AddDialog = ({\n  header,\n  fields,\n  specialFields,\n  addFunction,\n  body\n}) => {\n  // specialFields={[\n  //   (changeFunction) => {\n  //     return (\n  //       <TextField\n  //         margin=\"dense\"\n  //         key=\"Description\"\n  //         id=\"details\"\n  //         label=\"Description\"\n  //         fullWidth\n  //         multiline\n  //         required\n  //         type=\"text\"\n  //         onChange={changeFunction}\n  //       />\n  //     );\n  //   },\n  // ]}\n  const [open, setOpen] = useState(false);\n  let state = body || {};\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //make sure this can also handle bool/checkboxes\n\n\n  const handleChange = e => {\n    state[e.target.id] = e.target.value;\n  }; // make sure all inputs are filled before submit\n\n\n  const add = e => {\n    e.preventDefault();\n    console.log(Object.values(fields));\n\n    for (let field of Object.values(fields)) {\n      console.log(field in state);\n\n      if (!(field in state)) {\n        console.log(\"end\");\n        break;\n      }\n    }\n\n    console.log(\"wtf\");\n    addFunction(state);\n    state = {};\n    handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, header), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, fields && Object.keys(fields).length > 0 ? Object.keys(fields).map(field => {\n    return /*#__PURE__*/React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      key: field,\n      id: fields[field],\n      label: field,\n      required: true,\n      type: \"text\",\n      onChange: handleChange // error={!(fields[field] in state)}\n      ,\n      helperText: \"Input required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    });\n  }) : null, specialFields && specialFields.length > 0 ? specialFields.map(field => {\n    return field(handleChange);\n  }) : null), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: add,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n};\n\nAddDialog.propTypes = {\n  header: PropTypes.string.isRequired,\n  fields: PropTypes.object.isRequired,\n  addFunction: PropTypes.func.isRequired,\n  body: PropTypes.object\n};\nexport { AddDialog };","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/common/Dialog.js"],"names":["React","useState","PropTypes","TextField","Fab","AddIcon","Dialog","DialogActions","DialogContent","DialogTitle","Button","AddDialog","header","fields","specialFields","addFunction","body","open","setOpen","state","handleOpen","handleClose","handleChange","e","target","id","value","add","preventDefault","console","log","Object","values","field","keys","length","map","propTypes","string","isRequired","object","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nconst AddDialog = ({ header, fields, specialFields, addFunction, body }) => {\n  // specialFields={[\n  //   (changeFunction) => {\n  //     return (\n  //       <TextField\n  //         margin=\"dense\"\n  //         key=\"Description\"\n  //         id=\"details\"\n  //         label=\"Description\"\n  //         fullWidth\n  //         multiline\n  //         required\n  //         type=\"text\"\n  //         onChange={changeFunction}\n  //       />\n  //     );\n  //   },\n  // ]}\n  const [open, setOpen] = useState(false);\n  let state = body || {};\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //make sure this can also handle bool/checkboxes\n  const handleChange = (e) => {\n    state[e.target.id] = e.target.value;\n  };\n  // make sure all inputs are filled before submit\n  const add = (e) => {\n    e.preventDefault();\n    console.log(Object.values(fields))\n    for (let field of Object.values(fields)){\n      console.log(field in state)\n      if(!(field in state)){\n        console.log(\"end\")\n        break;\n      }\n    }\n    console.log(\"wtf\")\n    addFunction(state);\n    state = {};\n    handleClose();\n  };\n\n  return (\n    <div>\n      <Fab size=\"small\" color=\"primary\" aria-label=\"add\" onClick={handleOpen}>\n        <AddIcon />\n      </Fab>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">{header}</DialogTitle>\n        <DialogContent>\n          {fields && Object.keys(fields).length > 0\n            ? Object.keys(fields).map((field) => {\n                return (\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    key={field}\n                    id={fields[field]}\n                    label={field}\n                    required\n                    type=\"text\"\n                    onChange={handleChange}\n                    // error={!(fields[field] in state)}\n                    helperText={\"Input required\"}\n                  />\n                );\n              })\n            : null}\n          {specialFields && specialFields.length > 0\n            ? specialFields.map((field) => {\n                return field(handleChange);\n              })\n            : null}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={add} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\n\n\nAddDialog.propTypes = {\n  header: PropTypes.string.isRequired,\n  fields: PropTypes.object.isRequired,\n  addFunction: PropTypes.func.isRequired,\n  body: PropTypes.object,\n};\n\nexport { AddDialog };\n"]},"metadata":{},"sourceType":"module"}