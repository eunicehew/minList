{"ast":null,"code":"var _jsxFileName = \"/Users/Eunice/Documents/my-app/client/src/components/common/List/List.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { ListItem, ListItemButtons } from \"./ListItems\";\nimport { AddDialog } from \"../Dialog.js\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst ListCard = ({\n  isDraggable,\n  ...rest\n}) => {\n  const onDragOver = event => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"lightgray\"; // event.currentTarget.style.cursor = \"grabbing\";\n  };\n\n  const onDrop = (event, progressState) => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"\"; // event.currentTarget.style.cursor = \"default\";\n\n    let itemId = event.dataTransfer.getData(\"item\");\n    let selectedItem = this.props.items.find(i => i._id === itemId);\n    let progressIndex = progress.indexOf(selectedItem.progress);\n    let newProgressIndex = progress.indexOf(progressState);\n\n    if (progressIndex !== newProgressIndex) {\n      let updatedItem = { ...selectedItem,\n        progress: progress[newProgressIndex]\n      };\n      editItem(updatedItem);\n    }\n  };\n\n  const onDragLeave = event => {\n    event.currentTarget.style.background = \"\";\n  };\n\n  return isDraggable ? /*#__PURE__*/React.createElement(ListCard, Object.assign({\n    onDragOver: event => onDragOver(event),\n    onDrop: event => onDrop(event, header),\n    onDragLeave: event => onDragLeave(event),\n    style: {\n      width: \"30vw\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  })) : /*#__PURE__*/React.createElement(ListCard, Object.assign({\n    style: {\n      width: \"30vw\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst DraggableList = ({\n  isDraggable,\n  listId,\n  header,\n  items,\n  addItem,\n  editItem,\n  deleteItem\n}) => {\n  return /*#__PURE__*/React.createElement(ListCard, Object.assign({\n    isDraggable: isDraggable || false\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: \"10px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, header), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, items && items.length > 0 ? items.map(item => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item._id,\n      isDraggable: isDraggable || false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ListItemButtons, {\n      item: item,\n      editItem: editItem,\n      deleteItem: deleteItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"No items \"))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddDialog, {\n    header: \"Add Item\",\n    fields: {\n      \"Item Name\": \"name\"\n    },\n    specialFields: [changeFunction => /*#__PURE__*/React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"details\",\n      label: \"Description\",\n      fullWidth: true,\n      multiline: true,\n      required: true,\n      type: \"text\",\n      onChange: changeFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    })],\n    addFunction: addItem,\n    state: {\n      listId: listId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport { DraggableList };","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/common/List/List.js"],"names":["React","Card","CardContent","CardActions","List","ListItemText","ListItem","ListItemButtons","AddDialog","TextField","ListCard","isDraggable","rest","onDragOver","event","preventDefault","currentTarget","style","background","onDrop","progressState","itemId","dataTransfer","getData","selectedItem","props","items","find","i","_id","progressIndex","progress","indexOf","newProgressIndex","updatedItem","editItem","onDragLeave","header","width","DraggableList","listId","addItem","deleteItem","margin","length","map","item","name","changeFunction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,aAA1C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAe,KAAGC;AAAlB,CAAD,KAA8B;AAC7C,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,aAAN,CAAoBC,KAApB,CAA0BC,UAA1B,GAAuC,WAAvC,CAF4B,CAG5B;AACD,GAJD;;AAKA,QAAMC,MAAM,GAAG,CAACL,KAAD,EAAQM,aAAR,KAA0B;AACvCN,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,aAAN,CAAoBC,KAApB,CAA0BC,UAA1B,GAAuC,EAAvC,CAFuC,CAGvC;;AACA,QAAIG,MAAM,GAAGP,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2B,MAA3B,CAAb;AACA,QAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUR,MAAvC,CAAnB;AACA,QAAIS,aAAa,GAAGC,QAAQ,CAACC,OAAT,CAAiBR,YAAY,CAACO,QAA9B,CAApB;AACA,QAAIE,gBAAgB,GAAGF,QAAQ,CAACC,OAAT,CAAiBZ,aAAjB,CAAvB;;AACA,QAAIU,aAAa,KAAKG,gBAAtB,EAAwC;AACtC,UAAIC,WAAW,GAAG,EAChB,GAAGV,YADa;AAEhBO,QAAAA,QAAQ,EAAEA,QAAQ,CAACE,gBAAD;AAFF,OAAlB;AAIAE,MAAAA,QAAQ,CAACD,WAAD,CAAR;AACD;AACF,GAfD;;AAgBA,QAAME,WAAW,GAAItB,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACE,aAAN,CAAoBC,KAApB,CAA0BC,UAA1B,GAAuC,EAAvC;AACD,GAFD;;AAGA,SAAOP,WAAW,gBAChB,oBAAC,QAAD;AACE,IAAA,UAAU,EAAGG,KAAD,IAAWD,UAAU,CAACC,KAAD,CADnC;AAEE,IAAA,MAAM,EAAGA,KAAD,IAAWK,MAAM,CAACL,KAAD,EAAQuB,MAAR,CAF3B;AAGE,IAAA,WAAW,EAAGvB,KAAD,IAAWsB,WAAW,CAACtB,KAAD,CAHrC;AAIE,IAAA,KAAK,EAAE;AAAEwB,MAAAA,KAAK,EAAE;AAAT;AAJT,KAKM1B,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADgB,gBAShB,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAE0B,MAAAA,KAAK,EAAE;AAAT;AAAjB,KAAwC1B,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATF;AAWD,CApCD;;AAsCA,MAAM2B,aAAa,GAAG,CAAC;AACrB5B,EAAAA,WADqB;AAErB6B,EAAAA,MAFqB;AAGrBH,EAAAA,MAHqB;AAIrBX,EAAAA,KAJqB;AAKrBe,EAAAA,OALqB;AAMrBN,EAAAA,QANqB;AAOrBO,EAAAA;AAPqB,CAAD,KAQhB;AACJ,sBACE,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAE/B,WAAW,IAAI;AAAtC,KAAiDC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAI,IAAA,KAAK,EAAE;AAAE+B,MAAAA,MAAM,EAAE;AAAV,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCN,MAApC,CADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,IAAIA,KAAK,CAACkB,MAAN,GAAe,CAAxB,GACClB,KAAK,CAACmB,GAAN,CAAWC,IAAD,IAAU;AAClB,wBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACjB,GAApB;AAAyB,MAAA,WAAW,EAAElB,WAAW,IAAI,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEmC,IAAI,CAACC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAED,IADR;AAEE,MAAA,QAAQ,EAAEX,QAFZ;AAGE,MAAA,UAAU,EAAEO,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAUD,GAXD,CADD,gBAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAfJ,CADF,CAFF,eAsBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAC,UADT;AAEE,IAAA,MAAM,EAAE;AAAE,mBAAa;AAAf,KAFV;AAGE,IAAA,aAAa,EAAE,CACZM,cAAD,iBACE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,EAAE,EAAC,SAHL;AAIE,MAAA,KAAK,EAAC,aAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,SAAS,MANX;AAOE,MAAA,QAAQ,MAPV;AAQE,MAAA,IAAI,EAAC,MARP;AASE,MAAA,QAAQ,EAAEA,cATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFW,CAHjB;AAkBE,IAAA,WAAW,EAAEP,OAlBf;AAmBE,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAnBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF;AAgDD,CAzDD;;AA2DA,SAASD,aAAT","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { ListItem, ListItemButtons } from \"./ListItems\";\nimport { AddDialog } from \"../Dialog.js\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst ListCard = ({ isDraggable, ...rest }) => {\n  const onDragOver = (event) => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"lightgray\";\n    // event.currentTarget.style.cursor = \"grabbing\";\n  };\n  const onDrop = (event, progressState) => {\n    event.preventDefault();\n    event.currentTarget.style.background = \"\";\n    // event.currentTarget.style.cursor = \"default\";\n    let itemId = event.dataTransfer.getData(\"item\");\n    let selectedItem = this.props.items.find((i) => i._id === itemId);\n    let progressIndex = progress.indexOf(selectedItem.progress);\n    let newProgressIndex = progress.indexOf(progressState);\n    if (progressIndex !== newProgressIndex) {\n      let updatedItem = {\n        ...selectedItem,\n        progress: progress[newProgressIndex],\n      };\n      editItem(updatedItem);\n    }\n  };\n  const onDragLeave = (event) => {\n    event.currentTarget.style.background = \"\";\n  };\n  return isDraggable ? (\n    <ListCard\n      onDragOver={(event) => onDragOver(event)}\n      onDrop={(event) => onDrop(event, header)}\n      onDragLeave={(event) => onDragLeave(event)}\n      style={{ width: \"30vw\" }}\n      {...rest}\n    />\n  ) : (\n    <ListCard style={{ width: \"30vw\" }} {...rest} />\n  );\n};\n\nconst DraggableList = ({\n  isDraggable,\n  listId,\n  header,\n  items,\n  addItem,\n  editItem,\n  deleteItem,\n}) => {\n  return (\n    <ListCard isDraggable={isDraggable || false} {...rest}>\n      <h4 style={{ margin: \"10px 0px\" }}>{header}</h4>\n      <List>\n        <CardContent>\n          {items && items.length > 0 ? (\n            items.map((item) => {\n              return (\n                <ListItem key={item._id} isDraggable={isDraggable || false}>\n                  <ListItemText primary={item.name} />\n                  <ListItemButtons\n                    item={item}\n                    editItem={editItem}\n                    deleteItem={deleteItem}\n                  />\n                </ListItem>\n              );\n            })\n          ) : (\n            <li>No items </li>\n          )}\n        </CardContent>\n      </List>\n      <CardActions>\n        <AddDialog\n          header=\"Add Item\"\n          fields={{ \"Item Name\": \"name\" }}\n          specialFields={[\n            (changeFunction) => (\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"details\"\n                label=\"Description\"\n                fullWidth\n                multiline\n                required\n                type=\"text\"\n                onChange={changeFunction}\n              />\n            ),\n          ]}\n          addFunction={addItem}\n          state={{ listId: listId }}\n        />\n      </CardActions>\n    </ListCard>\n  );\n};\n\nexport { DraggableList };\n"]},"metadata":{},"sourceType":"module"}