{"ast":null,"code":"import { todoService } from \"../../../services/TodoService\"; //Actions\n\nconst GET_TODOS_REQUEST = \"components/Todo/GET_TODOS_REQUEST\";\nconst GET_TODOS_SUCCESS = \"components/Todo/GET_TODOS_SUCCESS\";\nconst FAILURE = \"components/Todo/GET_TODOS_FAILURE\";\nconst ADD_TODOS_REQUEST = \"components/Todo/ADD_TODOS_REQUEST\"; //Reducer\n\nexport default function todoReducer(state = [], action) {\n  switch (action.type) {\n    case GET_TODOS_REQUEST:\n      return Object.assign({}, state, {\n        gettingTodos: true\n      });\n\n    case GET_TODOS_SUCCESS:\n      return Object.assign({}, state, {\n        todos: action.todos\n      });\n    // return action.todos;\n\n    case FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nexport function getTodos(todos) {\n  console.log(todos);\n  return dispatch => {\n    dispatch(request(todos));\n    todoService.getTodos().then(todos => {\n      dispatch(success(todos));\n    }, error => {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(todos) {\n    return {\n      type: GET_TODOS_REQUEST,\n      todos\n    };\n  }\n\n  function success(todos) {\n    return {\n      type: GET_TODOS_SUCCESS,\n      todos\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: FAILURE,\n      error\n    };\n  }\n} //Side effects as applicable","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/components/todo/ducks/Todo.js"],"names":["todoService","GET_TODOS_REQUEST","GET_TODOS_SUCCESS","FAILURE","ADD_TODOS_REQUEST","todoReducer","state","action","type","Object","assign","gettingTodos","todos","error","getTodos","console","log","dispatch","request","then","success","failure","toString"],"mappings":"AAAA,SAASA,WAAT,QAA4B,+BAA5B,C,CAEA;;AACA,MAAMC,iBAAiB,GAAG,mCAA1B;AACA,MAAMC,iBAAiB,GAAG,mCAA1B;AACA,MAAMC,OAAO,GAAG,mCAAhB;AACA,MAAMC,iBAAiB,GAAG,mCAA1B,C,CAEA;;AACA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,iBAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BK,QAAAA,YAAY,EAAE;AADgB,OAAzB,CAAP;;AAGF,SAAKT,iBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BM,QAAAA,KAAK,EAAEL,MAAM,CAACK;AADgB,OAAzB,CAAP;AAGF;;AACA,SAAKT,OAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BO,QAAAA,KAAK,EAAE;AADuB,OAAzB,CAAP;;AAGF;AACE,aAAOP,KAAP;AAfJ;AAiBD,C,CAED;;AACA,OAAO,SAASQ,QAAT,CAAkBF,KAAlB,EAAyB;AAC9BG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,SAAQK,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,OAAO,CAACN,KAAD,CAAR,CAAR;AACAZ,IAAAA,WAAW,CAACc,QAAZ,GAAuBK,IAAvB,CACGP,KAAD,IAAW;AACTK,MAAAA,QAAQ,CAACG,OAAO,CAACR,KAAD,CAAR,CAAR;AACD,KAHH,EAIGC,KAAD,IAAW;AACTI,MAAAA,QAAQ,CAACI,OAAO,CAACR,KAAK,CAACS,QAAN,EAAD,CAAR,CAAR;AACD,KANH;AAQD,GAVD;;AAWA,WAASJ,OAAT,CAAiBN,KAAjB,EAAwB;AACtB,WAAO;AAAEJ,MAAAA,IAAI,EAAEP,iBAAR;AAA2BW,MAAAA;AAA3B,KAAP;AACD;;AACD,WAASQ,OAAT,CAAiBR,KAAjB,EAAwB;AACtB,WAAO;AAAEJ,MAAAA,IAAI,EAAEN,iBAAR;AAA2BU,MAAAA;AAA3B,KAAP;AACD;;AACD,WAASS,OAAT,CAAiBR,KAAjB,EAAwB;AACtB,WAAO;AAAEL,MAAAA,IAAI,EAAEL,OAAR;AAAiBU,MAAAA;AAAjB,KAAP;AACD;AACF,C,CAED","sourcesContent":["import { todoService } from \"../../../services/TodoService\";\n\n//Actions\nconst GET_TODOS_REQUEST = \"components/Todo/GET_TODOS_REQUEST\";\nconst GET_TODOS_SUCCESS = \"components/Todo/GET_TODOS_SUCCESS\";\nconst FAILURE = \"components/Todo/GET_TODOS_FAILURE\";\nconst ADD_TODOS_REQUEST = \"components/Todo/ADD_TODOS_REQUEST\";\n\n//Reducer\nexport default function todoReducer(state = [], action) {\n  switch (action.type) {\n    case GET_TODOS_REQUEST:\n      return Object.assign({}, state, {\n        gettingTodos: true,\n      });\n    case GET_TODOS_SUCCESS:\n      return Object.assign({}, state, {\n        todos: action.todos,\n      });\n    // return action.todos;\n    case FAILURE:\n      return Object.assign({}, state, {\n        error: true,\n      });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nexport function getTodos(todos) {\n  console.log(todos);\n  return (dispatch) => {\n    dispatch(request(todos));\n    todoService.getTodos().then(\n      (todos) => {\n        dispatch(success(todos));\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n      }\n    );\n  };\n  function request(todos) {\n    return { type: GET_TODOS_REQUEST, todos };\n  }\n  function success(todos) {\n    return { type: GET_TODOS_SUCCESS, todos };\n  }\n  function failure(error) {\n    return { type: FAILURE, error };\n  }\n}\n\n//Side effects as applicable\n"]},"metadata":{},"sourceType":"module"}