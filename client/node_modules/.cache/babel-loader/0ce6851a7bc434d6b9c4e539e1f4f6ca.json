{"ast":null,"code":"import { pageService } from \"../services/PageService\"; //Actions\n\nconst PAGE_REQUEST = \"components/common/PAGE_REQUEST\";\nconst PAGE_SUCCESS = \"components/common/PAGE_SUCCESS\";\nconst PAGE_FAILURE = \"components/common/PAGE_FAILURE\"; //Reducer\n\nexport default function pageReducer(state = {}, action) {\n  switch (action.type) {\n    case PAGE_REQUEST:\n      return Object.assign({}, state, {\n        gettingPages: true\n      });\n\n    case PAGE_SUCCESS:\n      return Object.assign({}, state, {\n        pages: action.pages.pages\n      });\n\n    case PAGE_FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nexport function getPages() {\n  return dispatch => {\n    dispatch(request());\n    pageService.getPages().then(pages => {\n      dispatch(success({\n        pages\n      }));\n    }, error => {\n      console.log(error);\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: PAGE_REQUEST\n    };\n  }\n\n  function success(pages) {\n    return {\n      type: PAGE_SUCCESS,\n      pages\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: PAGE_FAILURE,\n      error\n    };\n  }\n}\n\nfunction _handlePageAction(apiCall, body) {\n  return dispatch => {\n    dispatch({\n      type: PAGE_REQUEST\n    });\n    apiCall(body).then(pages => {\n      console.log(pages); // dispatch({ type: PAGE_SUCCESS, pages });\n\n      dispatch(getPages());\n    }, error => {\n      dispatch({\n        type: PAGE_FAILURE,\n        error\n      });\n    });\n  };\n} //check what is being taken as body/necessary params\n\n\nexport function addPage(body) {\n  return _handlePageAction(pageService.createPage, body);\n}\nexport function deletePage(body) {\n  return _handlePageAction(pageService.deletePage, body);\n}\nexport function updatePage(body) {\n  return _handlePageAction(pageService.update, body);\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/redux/Page.js"],"names":["pageService","PAGE_REQUEST","PAGE_SUCCESS","PAGE_FAILURE","pageReducer","state","action","type","Object","assign","gettingPages","pages","error","getPages","dispatch","request","then","success","console","log","failure","toString","_handlePageAction","apiCall","body","addPage","createPage","deletePage","updatePage","update"],"mappings":"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","sourcesContent":["import { pageService } from \"../services/PageService\";\n\n//Actions\nconst PAGE_REQUEST = \"components/common/PAGE_REQUEST\";\nconst PAGE_SUCCESS = \"components/common/PAGE_SUCCESS\";\nconst PAGE_FAILURE = \"components/common/PAGE_FAILURE\";\n\n//Reducer\nexport default function pageReducer(state = {}, action) {\n  switch (action.type) {\n    case PAGE_REQUEST:\n      return Object.assign({}, state, {\n        gettingPages: true,\n      });\n    case PAGE_SUCCESS:\n      return Object.assign({}, state, {\n        pages: action.pages.pages,\n      });\n    case PAGE_FAILURE:\n      return Object.assign({}, state, {\n        error: true,\n      });\n\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nexport function getPages() {\n  return (dispatch) => {\n    dispatch(request());\n    pageService.getPages().then(\n      (pages) => {\n        dispatch(success({ pages }));\n      },\n      (error) => {\n        console.log(error);\n        dispatch(failure(error.toString()));\n        // dispatch(alertActions.error(error.toString()));\n      }\n    );\n  };\n\n  function request() {\n    return { type: PAGE_REQUEST };\n  }\n  function success(pages) {\n    return { type: PAGE_SUCCESS, pages };\n  }\n  function failure(error) {\n    return { type: PAGE_FAILURE, error };\n  }\n}\n\nfunction _handlePageAction(apiCall, body) {\n  return (dispatch) => {\n    dispatch({ type: PAGE_REQUEST });\n    apiCall(body).then(\n      (pages) => {\n        console.log(pages);\n        // dispatch({ type: PAGE_SUCCESS, pages });\n        dispatch(getPages());\n      },\n      (error) => {\n        dispatch({ type: PAGE_FAILURE, error });\n      }\n    );\n  };\n}\n\n//check what is being taken as body/necessary params\nexport function addPage(body) {\n  return _handlePageAction(pageService.createPage, body);\n}\nexport function deletePage(body) {\n  return _handlePageAction(pageService.deletePage, body);\n}\nexport function updatePage(body) {\n  return _handlePageAction(pageService.update, body);\n}\n"]},"metadata":{},"sourceType":"module"}