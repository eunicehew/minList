{"ast":null,"code":"import { pageService } from \"../services/PageService\"; //Actions\n\nconst PAGE_REQUEST = \"components/common/PAGE_REQUEST\";\nconst PAGE_SUCCESS = \"components/common/PAGE_SUCCESS\";\nconst PAGE_FAILURE = \"components/common/PAGE_FAILURE\"; //Reducer\n\nexport default function pageReducer(state = {}, action) {\n  switch (action.type) {\n    case PAGE_REQUEST:\n      return Object.assign({}, state, {\n        gettingPages: true\n      });\n\n    case PAGE_SUCCESS:\n      return Object.assign({}, state, {\n        pages: action.pages,\n        menu: action.menu\n      });\n\n    case PAGE_FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      });\n    // case LOGOUT:\n    //   return Object.assign({}, state, {\n    //     logout: true,\n    //   });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nexport function getPages() {\n  console.log(\"hit pages\");\n  return dispatch => {\n    // dispatch(request({ blank: \"blank\" }));\n    pageService.getPages().then(pages => {\n      console.log(pages);\n\n      if (pages) {\n        let menu = [];\n        pages.forEach(element => menu.append(element[\"name\"]));\n        dispatch(success({\n          pages,\n          menu\n        }));\n      }\n    }, error => {\n      console.log(error);\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(body) {\n    return {\n      type: PAGE_REQUEST,\n      body\n    };\n  }\n\n  function success(pages) {\n    return {\n      type: PAGE_SUCCESS,\n      pages\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: PAGE_FAILURE,\n      error\n    };\n  }\n}\n\nfunction _handlePageAction(apiCall, body) {\n  return dispatch => {\n    dispatch({\n      type: PAGE_REQUEST\n    });\n    apiCall(body).then(pages => {\n      console.log(pages); // dispatch({ type: PAGE_SUCCESS, pages });\n\n      dispatch(getPages());\n    }, error => {\n      dispatch({\n        type: PAGE_FAILURE,\n        error\n      });\n    });\n  };\n} //check what is being taken as body/necessary params\n\n\nexport function addPage(body) {\n  return _handlePageAction(pageService.createPage, body);\n}\nexport function deletePage(id) {\n  return _handlePageAction(pageService.deletePage, id);\n}\nexport function updatePage(body) {\n  return _handlePageAction(pageService.update, body);\n}","map":{"version":3,"sources":["/Users/Eunice/Documents/my-app/client/src/redux/Page.js"],"names":["pageService","PAGE_REQUEST","PAGE_SUCCESS","PAGE_FAILURE","pageReducer","state","action","type","Object","assign","gettingPages","pages","menu","error","getPages","console","log","dispatch","then","forEach","element","append","success","failure","toString","request","body","_handlePageAction","apiCall","addPage","createPage","deletePage","id","updatePage","update"],"mappings":"AAAA,SAASA,WAAT,QAA4B,yBAA5B,C,CAEA;;AACA,MAAMC,YAAY,GAAG,gCAArB;AACA,MAAMC,YAAY,GAAG,gCAArB;AACA,MAAMC,YAAY,GAAG,gCAArB,C,CAEA;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,YAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BK,QAAAA,YAAY,EAAE;AADgB,OAAzB,CAAP;;AAGF,SAAKR,YAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BM,QAAAA,KAAK,EAAEL,MAAM,CAACK,KADgB;AAE9BC,QAAAA,IAAI,EAAEN,MAAM,CAACM;AAFiB,OAAzB,CAAP;;AAIF,SAAKT,YAAL;AACE,aAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BQ,QAAAA,KAAK,EAAE;AADuB,OAAzB,CAAP;AAGF;AACA;AACA;AACA;;AACA;AACE,aAAOR,KAAP;AAnBJ;AAqBD,C,CAED;;AACA,OAAO,SAASS,QAAT,GAAoB;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,SAAQC,QAAD,IAAc;AACnB;AACAjB,IAAAA,WAAW,CAACc,QAAZ,GAAuBI,IAAvB,CACGP,KAAD,IAAW;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,UAAIA,KAAJ,EAAW;AACT,YAAIC,IAAI,GAAG,EAAX;AACAD,QAAAA,KAAK,CAACQ,OAAN,CAAeC,OAAD,IAAaR,IAAI,CAACS,MAAL,CAAYD,OAAO,CAAC,MAAD,CAAnB,CAA3B;AACAH,QAAAA,QAAQ,CAACK,OAAO,CAAC;AAAEX,UAAAA,KAAF;AAASC,UAAAA;AAAT,SAAD,CAAR,CAAR;AACD;AACF,KARH,EASGC,KAAD,IAAW;AACTE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAI,MAAAA,QAAQ,CAACM,OAAO,CAACV,KAAK,CAACW,QAAN,EAAD,CAAR,CAAR,CAFS,CAGT;AACD,KAbH;AAeD,GAjBD;;AAmBA,WAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,WAAO;AAAEnB,MAAAA,IAAI,EAAEN,YAAR;AAAsByB,MAAAA;AAAtB,KAAP;AACD;;AACD,WAASJ,OAAT,CAAiBX,KAAjB,EAAwB;AACtB,WAAO;AAAEJ,MAAAA,IAAI,EAAEL,YAAR;AAAsBS,MAAAA;AAAtB,KAAP;AACD;;AACD,WAASY,OAAT,CAAiBV,KAAjB,EAAwB;AACtB,WAAO;AAAEN,MAAAA,IAAI,EAAEJ,YAAR;AAAsBU,MAAAA;AAAtB,KAAP;AACD;AACF;;AAED,SAASc,iBAAT,CAA2BC,OAA3B,EAAoCF,IAApC,EAA0C;AACxC,SAAQT,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEV,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACA2B,IAAAA,OAAO,CAACF,IAAD,CAAP,CAAcR,IAAd,CACGP,KAAD,IAAW;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EADS,CAET;;AACAM,MAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;AACD,KALH,EAMGD,KAAD,IAAW;AACTI,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAEJ,YAAR;AAAsBU,QAAAA;AAAtB,OAAD,CAAR;AACD,KARH;AAUD,GAZD;AAaD,C,CAED;;;AACA,OAAO,SAASgB,OAAT,CAAiBH,IAAjB,EAAuB;AAC5B,SAAOC,iBAAiB,CAAC3B,WAAW,CAAC8B,UAAb,EAAyBJ,IAAzB,CAAxB;AACD;AACD,OAAO,SAASK,UAAT,CAAoBC,EAApB,EAAwB;AAC7B,SAAOL,iBAAiB,CAAC3B,WAAW,CAAC+B,UAAb,EAAyBC,EAAzB,CAAxB;AACD;AACD,OAAO,SAASC,UAAT,CAAoBP,IAApB,EAA0B;AAC/B,SAAOC,iBAAiB,CAAC3B,WAAW,CAACkC,MAAb,EAAqBR,IAArB,CAAxB;AACD","sourcesContent":["import { pageService } from \"../services/PageService\";\n\n//Actions\nconst PAGE_REQUEST = \"components/common/PAGE_REQUEST\";\nconst PAGE_SUCCESS = \"components/common/PAGE_SUCCESS\";\nconst PAGE_FAILURE = \"components/common/PAGE_FAILURE\";\n\n//Reducer\n\nexport default function pageReducer(state = {}, action) {\n  switch (action.type) {\n    case PAGE_REQUEST:\n      return Object.assign({}, state, {\n        gettingPages: true,\n      });\n    case PAGE_SUCCESS:\n      return Object.assign({}, state, {\n        pages: action.pages,\n        menu: action.menu,\n      });\n    case PAGE_FAILURE:\n      return Object.assign({}, state, {\n        error: true,\n      });\n    // case LOGOUT:\n    //   return Object.assign({}, state, {\n    //     logout: true,\n    //   });\n    default:\n      return state;\n  }\n}\n\n//Action Creators\nexport function getPages() {\n  console.log(\"hit pages\");\n  return (dispatch) => {\n    // dispatch(request({ blank: \"blank\" }));\n    pageService.getPages().then(\n      (pages) => {\n        console.log(pages);\n        if (pages) {\n          let menu = [];\n          pages.forEach((element) => menu.append(element[\"name\"]));\n          dispatch(success({ pages, menu }));\n        }\n      },\n      (error) => {\n        console.log(error);\n        dispatch(failure(error.toString()));\n        // dispatch(alertActions.error(error.toString()));\n      }\n    );\n  };\n\n  function request(body) {\n    return { type: PAGE_REQUEST, body };\n  }\n  function success(pages) {\n    return { type: PAGE_SUCCESS, pages };\n  }\n  function failure(error) {\n    return { type: PAGE_FAILURE, error };\n  }\n}\n\nfunction _handlePageAction(apiCall, body) {\n  return (dispatch) => {\n    dispatch({ type: PAGE_REQUEST });\n    apiCall(body).then(\n      (pages) => {\n        console.log(pages);\n        // dispatch({ type: PAGE_SUCCESS, pages });\n        dispatch(getPages());\n      },\n      (error) => {\n        dispatch({ type: PAGE_FAILURE, error });\n      }\n    );\n  };\n}\n\n//check what is being taken as body/necessary params\nexport function addPage(body) {\n  return _handlePageAction(pageService.createPage, body);\n}\nexport function deletePage(id) {\n  return _handlePageAction(pageService.deletePage, id);\n}\nexport function updatePage(body) {\n  return _handlePageAction(pageService.update, body);\n}\n"]},"metadata":{},"sourceType":"module"}